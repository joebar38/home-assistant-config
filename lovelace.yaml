decluttering_templates:
  header:
    card:
      type: horizontal-stack
      cards:
        - type: custom:button-card
          template:
            - badge_card
            - no_style
          label: '[[name]]'
          icon: '[[icon]]'
          styles:
            label:
              - font-size: 14.5px
              - font-weight: 600
              - color: var(--title)
            icon:
              - width: 20px
              - color: var(--title)
              - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
            img_cell:
              - background-color: none
            card:
              - margin: 0px 10px 0px 5px
        - type: custom:button-card
          template:
            - badge_auto_card
            - no_style
          show_label: false
          icon: mdi:close
          styles:
            icon:
              - width: 12px
              - color: var(--ocean-blue)
            card:
              - margin-top: 0px
              - opacity: 100%
          tap_action:
            action: navigate
            navigation_path: /
  timestamp_camera:
    card:
      type: markdown
      content: >-
        {% set aujourd_hui = now().strftime("%d/%m" ) %} {% set
        horodatage_formate = as_timestamp(states('[[input]]')) |
        timestamp_custom("%d/%m" ) %} {% set horodatage_aujourd_hui =
        as_timestamp(states('[[input]]')) | timestamp_custom("Aujourd'hui à
        %H:%M" ) %} {% set horodatage = as_timestamp(states('[[input]]')) |
        timestamp_custom("%a %d/%m à %H:%M" ) 
         | replace('Mon','Lun.') | replace('Tue', 'Mar.') | replace('Wed', 'Mer.') | replace('Thu', 'Jeu.') | replace('Fri','Ven.') | replace('Sat', 'Sam.') | replace('Sun', 'Dim.') %}
        {% if  aujourd_hui  ==  horodatage_formate  -%}
          {{ horodatage_aujourd_hui  }}
        {%- else%}
          {{ horodatage }}
        {%- endif %}
      card_mod:
        style: |
          ha-card {
            background-color: var(--card-background-color);
            box-shadow: none;
            font-family: Avenir;
            font-size: 12px;
            color: var(--text-off);
            display: flex; 
            flex-direction: column; 
            align-items: center; 
            justify-content: center; 
          }
          ha-card.type-markdown {
            height: 20px;
          }
  music:
    card:
      type: custom:button-card
      entity: '[[entity]]'
      aspect_ratio: 2
      template:
        - police
      icon: mdi:speaker
      show_entity_picture: true
      show_name: false
      tap_action:
        action: more-info
      styles:
        grid:
          - grid-template-areas: '"info"'
          - grid-template-columns: 1fr
          - grid-template-rows: min-content min-content
        card:
          - padding: 0px
          - position: relative
          - '--mdc-ripple-press-opacity': 0
        img_cell:
          - position: absolute
        icon:
          - width: 130%
          - opacity: 0.6
          - '-webkit-filter': blur(8px)
          - '-moz-filter': blur(8px)
          - '-o-filter': blur(8px)
          - '-ms-filter': blur(8px)
          - filter: blur(8px)
          - color: var(--img-cell-off)
        entity_picture:
          - opacity: |
              [[[
                if (entity.state == "playing")
                  return "0.6"; 
                return "0.15";
              ]]]           
        custom_fields:
          commands:
            - position: absolute
            - width: 90%
            - left: 05%
            - top: 78%
          gauge:
            - position: absolute
            - width: 90%
            - left: 05%
            - top: 60%
      custom_fields:
        info:
          card:
            type: custom:button-card
            entity: '[[entity]]'
            show_entity_picture: true
            name: |
              [[[
                if (entity.state == "playing")
                  return entity.attributes.friendly_name + " [" + (entity.attributes.volume_level * 100).toFixed(0) + "%]"
                return entity.attributes.friendly_name 
              ]]]
            label: |
              [[[
                if (entity.state == "playing")
                  return entity.attributes.media_artist;
                if (entity.state == "idle")
                  return "Pause";
                if (entity.state == "paused")
                  return "Pause";
                if (entity.state == "standby")
                  return "Eteint"; 
                return "Autre";
              ]]]
            show_label: true
            show_icon: true
            icon: mdi:speaker
            custom_fields:
              info: |
                [[[
                  if (entity.state == "playing")
                    return entity.attributes.media_title; 
                  return "Pas d'info";
                ]]]              
            styles:
              grid:
                - grid-template-areas: '"i gutter n" "i gutter l" "i gutter info"'
                - grid-template-columns: min-content 14px 1fr
                - grid-template-rows: min-content 20px
              card:
                - background: none
                - box-shadow: none
                - border-radius: 0
                - padding: 15px
                - '--mdc-ripple-press-opacity': 0
              entity_picture:
                - opacity: |
                    [[[
                      if (entity.state == "playing")
                        return "1"; 
                      return "0.4";
                    ]]]               
              img_cell:
                - height: 80px
                - width: 80px
                - border-radius: 16px
              icon:
                - height: 100%
                - width: 100%
                - color: var(--dark-blue)
              name:
                - font-size: 13px
                - opacity: 0.8
                - font-weight: 500
                - color: var(--text-on)
                - width: 100%
                - text-align: left
                - align-self: end
                - filter: drop-shadow(1px 1px 1px rgba(0,0,0,0.9))
              label:
                - font-size: 13px
                - font-weight: 600
                - color: var(--text-on)
                - opacity: |
                    [[[
                      if (entity.state == "playing")
                        return "1"; 
                      return "0.7";
                    ]]]                 
                - width: 90%
                - width: 100%
                - text-align: left
                - align-self: center
                - filter: drop-shadow(1px 1px 1px rgba(0,0,0,0.9))
              custom_fields:
                info:
                  - white-space: normal
                  - font-weight: 500
                  - color: var(--text-on)
                  - font-size: 13px
                  - opacity: |
                      [[[
                        if (entity.state == "playing")
                          return "1"; 
                        return "0.8";
                      ]]]  
                  - font-style: italic
                  - width: 90%
                  - text-align: left
                  - align-self: start
                  - filter: drop-shadow(1px 1px 1px rgba(0,0,0,0.9))
                  - max-height: 55px
        gauge:
          card:
            type: conditional
            conditions:
              - condition: state
                entity: '[[entity]]'
                state: playing
            card:
              type: custom:button-card
              variables:
                entity: '[[gauge]]'
              template:
                - music_progression
        commands:
          card:
            type: horizontal-stack
            cards:
              - type: custom:button-card
                template:
                  - media_controls
                icon: mdi:volume-mute
                tap_action:
                  action: call-service
                  haptic: medium
                  service: media_player.volume_mute
                  service_data:
                    entity_id: '[[entity]]'
              - type: custom:button-card
                template:
                  - media_controls
                icon: mdi:volume-minus
                tap_action:
                  action: call-service
                  haptic: medium
                  service: media_player.volume_down
                  service_data:
                    entity_id: '[[entity]]'
              - type: custom:button-card
                template:
                  - media_controls
                icon: mdi:volume-plus
                tap_action:
                  action: call-service
                  haptic: medium
                  service: media_player.volume_up
                  service_data:
                    entity_id: '[[entity]]'
              - type: custom:button-card
                template:
                  - media_controls
                icon: mdi:skip-previous
                tap_action:
                  action: call-service
                  haptic: medium
                  service: media_player.media_previous_track
                  service_data:
                    entity_id: '[[entity]]'
              - type: custom:button-card
                template:
                  - media_controls
                icon: mdi:play-pause
                tap_action:
                  action: call-service
                  haptic: medium
                  service: media_player.media_play_pause
                  service_data:
                    entity_id: '[[entity]]'
              - type: custom:button-card
                template:
                  - media_controls
                icon: mdi:skip-next
                tap_action:
                  action: call-service
                  haptic: medium
                  service: media_player.media_next_track
                  service_data:
                    entity_id: '[[entity]]'
              - type: custom:button-card
                template:
                  - media_controls
                icon: mdi:power
                show_name: false
                tap_action:
                  action: call-service
                  haptic: medium
                  service: media_player.media_stop
                  service_data:
                    entity_id: '[[entity]]'
  announce:
    card:
      type: custom:vertical-stack-in-card
      horizontal: true
      cards:
        - type: entities
          entities:
            - entity: '[[entity]]'
              name: Message à envoyer
              card_mod:
                style:
                  hui-generic-entity-row:
                    $: |
                      state-badge_card {
                        display: none;
                      } 
                      :host {
                        width: 194%;
                      }
                    ha-textfield $: |
                      .mdc-text-field {
                        border: 2px solid var( --ha-card-background, var(--card-background-color, white) );
                        border-radius: 110px !important;
                      }
                      .mdc-line-ripple::after,
                      .mdc-line-ripple::before {
                        border-bottom-style: none !important;
                      }
          show_header_toggle: false
          card_mod:
            style: |
              "hui-generic-entity-row$state-badge_card": {
                display: none;
              }
              ha-card {
                background: none;
              }
        - type: button
          tap_action:
            action: call-service
            service: '[[script]]'
          show_name: false
          show_icon: true
          icon: mdi:send
          icon_height: 30px
          card_mod:
            style: |
              ha-card {
                width: 56px;
                height: 56px !important;
                margin-top: 16px;
                border-radius: 100px;
                float: right;
              }
  announce_volume:
    card:
      type: custom:vertical-stack-in-card
      card_mod:
        style: |
          ha-card { 
            background-color: var(--card-background-color);
            box-shadow: none;
            overflow: visible !important;
            margin-top: -10px;
          } 
      cards:
        - type: custom:mini-media-player
          entity: '[[entity]]'
          artwork: none
          icon: mdi:speaker
          hide:
            source: true
            icon: true
            name: true
            power: true
            play_pause: true
            controls: true
            next: true
            prev: true
            play_stop: true
            progress: true
            state_label: true
            info: true
          toggle_power: false
          info: null
          volume_stateless: false
          group: true
  graph_duration:
    card:
      type: custom:apexcharts-card
      graph_span: 10d
      span:
        start: day
        offset: '-9d'
      experimental:
        color_threshold: true
      apex_config:
        chart:
          height: 170
          fontFamily: Avenir
        legend:
          show: false
        grid:
          show: true
          strokeDashArray: 0
          position: back
          borderColor: rgba(200,200,200,0.3)
        stroke:
          width: 1
        xaxis:
          labels:
            format: ddd dd
            hideOverlappingLabels: true
            showDuplicatges: true
            show: true
        dataLabels:
          offsetY: -5
          background:
            enabled: true
            opacity: 0.5
        plotOptions:
          bar:
            borderRadius: 5
            dataLabels:
              position: top
      header:
        show: true
        title: '[[title]]'
        show_states: true
        standard_format: false
        colorize_states: true
      yaxis:
        - id: first
          decimals: 1
          min: 0
          apex_config:
            tickAmount: 5
      series:
        - entity: '[[entity]]'
          yaxis_id: first
          type: column
          show:
            name_in_header: false
            datalabels: true
            legend_value: false
            header_color_threshold: true
          group_by:
            func: max
            duration: 1d
          opacity: 0.8
          color_threshold:
            - value: '[[value1]]'
              color: var(--green)
            - value: '[[value2]]'
              color: var(--ocean-blue)
            - value: '[[value3]]'
              color: var(--yellow)
            - value: '[[value4]]'
              color: var(--orange)
            - value: '[[value5]]'
              color: var(--red)
  graph:
    card:
      type: custom:apexcharts-card
      card_mod:
        style: |
          ha-card {
             margin: 0px -10px -5px -10px;
           }      
      header:
        show: true
        title: ''
        show_states: true
        colorize_states: true
      experimental:
        brush: false
        color_threshold: true
      graph_span: 50h
      now:
        show: true
        color: var(--green)
        label: Maintenant
      apex_config:
        chart:
          fontFamily: Avenir
          height: 200
        grid:
          show: false
        legend:
          show: false
          fontSize: 12px
          height: 40
        dataLabels:
          enabled: false
        fill:
          type: gradient
          gradient:
            type: vertical
            shadeIntensity: 0.8
            inverseColors: false
            opacityFrom: 0.5
            opacityTo: 0
            stops:
              - - 0
                - 50
                - 100
      yaxis:
        - id: first
          decimals: 1
          apex_config:
            tickAmount: 4
        - id: second
          opposite: true
          decimals: 1
          apex_config:
            tickAmount: 4
        - id: third
          min: 0
          max: 1
          show: false
      series:
        - entity: sensor.night_state
          yaxis_id: third
          name: ''
          color: grey
          type: area
          curve: stepline
          stroke_width: 0
          opacity: 0.1
          color_threshold:
            - value: 0
              color: darkgrey
            - value: 1
              color: darkgrey
          show:
            in_header: false
        - entity: '[[temp]]'
          name: Température
          yaxis_id: first
          unit: °
          color: var(--red)
          type: area
          curve: smooth
          fill_raw: last
          stroke_width: 1
          show:
            extremas: true
            in_brush: false
            header_color_threshold: true
            legend_value: false
          float_precision: 1
          group_by:
            func: last
        - entity: '[[hum]]'
          name: humidité
          unit: '%'
          yaxis_id: second
          color: var(--ocean-blue)
          type: area
          curve: smooth
          fill_raw: last
          stroke_width: 1
          show:
            extremas: true
            in_brush: false
            header_color_threshold: true
            legend_value: false
          group_by:
            func: last
  thermostat_netatmo:
    card:
      type: picture-elements
      image: /local/images/netatmo/netatmo_background_dark_V2_409x762.png
      elements:
        - type: image
          entity: climate.ma_piece
          title: Augmenter la consigne
          tap_action:
            action: call-service
            service: Script.netatmo_increment_consigne
          hold_action:
            action: more-info
          image: /local/images/netatmo/netatmo_up_dark.png
          style:
            top: 52%
            left: 77%
            width: 6%
        - type: image
          entity: climate.ma_piece
          title: Baisser la consigne
          tap_action:
            action: call-service
            service: Script.netatmo_decrement_consigne
          hold_action:
            action: more-info
          image: /local/images/netatmo/netatmo_down_dark.png
          style:
            top: 52%
            left: 56.5%
            width: 6%
        - type: image
          entity: sensor.netatmo_hvac_action
          title: Témoin de chauffe
          image: /local/images/netatmo/netatmo_chauffe.png
          style:
            top: 58%
            left: 25.5%
            width: 7%
          state_filter:
            heating: brightness(100%) saturate(1)
            idle: opacity(0%)
        - type: image
          entity: sensor.netatmo_preset_mode
          title: Mode de fonctionnement
          style:
            top: 29.9%
            left: 39%
            width: 11%
          state_image:
            Manuel: /local/images/netatmo/netatmo_manual_dark.png
            Planning: /local/images/netatmo/automatique_dark.png
            Absent: /local/images/netatmo/absent_dark.png
            Hors-Gel: /local/images/netatmo/hors_gel_dark.png
            Éteint: /local/floorplan/images/nixx.png
        - type: state-label
          entity: sensor.netatmo_temperature_courante
          title: Température Actuelle
          style:
            top: 48%
            left: 25.5%
            font-size: 1.4em
            color: white
            font-weight: 600
        - type: conditional
          conditions:
            - entity: sensor.netatmo_temperature_consigne
              state_not: '0'
          elements:
            - type: state-label
              entity: sensor.netatmo_temperature_consigne
              title: Température Actuelle
              style:
                top: 24.7%
                left: 24.8%
                color: white
                font-weight: 600
        - type: conditional
          conditions:
            - entity: sensor.netatmo_temperature_consigne
              state: '0'
          elements:
            - action: none
              entity: climate.ma_piece
              hold_action:
                action: none
              image: /local/images/netatmo/off_dark.png
              style:
                left: 25%
                top: 25.5%
                width: 15%
              tap_action:
                action: none
              type: image
        - type: custom:button-card
          entity: climate.ma_piece
          name: Netatmo
          show_state: false
          show_label: false
          show_icon: false
          template:
            - title_card
          styles:
            name:
              - font-size: 16px
              - font-weight: 600
              - color: orange
              - padding-top: 0%
              - margin-left: 0%
          style:
            top: 25%
            left: 66%
        - type: state-label
          entity: sensor.thermostat_battery_percent
          title: '% Batterie'
          style:
            top: 79%
            left: 8.3%
            font-size: 0.7em
            color: white
            font-weight: 600
        - type: state-icon
          entity: sensor.thermostat_battery_percent
          title: Niveau batterie
          icon: mdi:battery-high
          tap_action:
            action: more-info
          style:
            top: 86%
            left: 8%
            '--paper-item-icon-color': white
        - type: image
          entity: climate.ma_piece
          image: /local/images/netatmo/bouton_fond_300x98_dark.png
          style:
            top: 83.2%
            left: 71%
            width: 58%
        - type: image
          entity: script.netatmo_mode_absent
          title: Passer en Mode Absent
          image: /local/images/netatmo/absent_dark.png
          style:
            top: 83%
            left: 53%
            width: 12%
        - type: image
          entity: script.netatmo_mode_hors_gel
          title: Mode hors-gel
          image: /local/images/netatmo/hors_gel_dark.png
          style:
            top: 83.2%
            left: 79.5%
            width: 14.5%
        - type: image
          entity: script.netatmo_mode_schedule
          title: Passer en Mode Automatique
          tap_action:
            action: call-service
            service: Script.netatmo_mode_schedule
          image: /local/images/netatmo/automatique_dark.png
          style:
            top: 83.2%
            left: 67%
            width: 10%
        - type: state-label
          entity: select.appartement
          title: Planning
          icon: mdi:calendar
          style:
            top: 85%
            left: 27%
            color: white
        - type: image
          title: Modification plannings
          image: /local/images/netatmo/calendrier_dark.png
          tap_action:
            action: url
            url_path: https://my.netatmo.com/app/therm
          style:
            top: 92%
            left: 40%
            width: 7%
        - type: image
          entity: climate.ma_piece
          title: On / Off
          style:
            top: 10%
            left: 8%
            width: 07%
          state_image:
            'off': /local/images/netatmo/netatmo_off.png
            auto: /local/images/netatmo/netatmo_on.png
          tap_action:
            action: call-service
            service: Script.netatmo_on_off
  thermostat_mitsubishi:
    card:
      type: picture-elements
      image: /local/images/mitsubishi/fond.png
      elements:
        - action: none
          entity: sun.sun
          hold_action:
            action: none
          state_image:
            above_horizon: /local/images/mitsubishi/transparent_100100.png
            below_horizon: /local/images/mitsubishi/fond_dark_v2.png
          style:
            left: 50%
            top: 50%
            width: 100%
          tap_action:
            action: none
          type: image
        - type: custom:button-card
          entity: '[[climate]]'
          name: '[[name_clim]]'
          show_state: false
          show_label: false
          show_icon: false
          template:
            - title_card
          styles:
            name:
              - font-size: 16px
              - font-weight: 600
              - color: black
              - padding-top: 0%
              - margin-left: 0%
          style:
            top: 20%
            left: 48%
        - type: custom:config-template-card
          entities:
            - input_select.clim_thermostat_details
          style:
            left: 12%
            top: 23%
            width: 76%
            transform: scale(1,2.3)
          element:
            action: none
            entity: input_select.clim_thermostat_details
            image: /local/images/mitsubishi/transparent_100100.png
            hold_action:
              action: none
            state_image:
              Horizontal: /local/images/mitsubishi/fond_popup.png
              Vertical: /local/images/mitsubishi/fond_popup.png
            tap_action:
              action: none
            type: image
        - type: image
          entity: '[[climate]]'
          title: Changer le mode
          tap_action:
            action: call-service
            service: input_select.select_next
            data:
              cycle: true
            target:
              entity_id: '[[input_select_modes]]'
          hold_action:
            action: more-info
          image: /local/images/mitsubishi/transparent_100100.png
          style:
            top: 63%
            left: 20.5%
            width: 3%
            transform: scale(6,2)
        - type: image
          entity: '[[climate]]'
          title: Baisser la température de 0,5°C
          tap_action:
            action: call-service
            service: '[[script_decrement_consigne]]'
          hold_action:
            action: more-info
          image: /local/images/mitsubishi/transparent_100100.png
          style:
            top: 63%
            left: 39%
            width: 3%
            transform: scale(6,2)
        - type: image
          entity: '[[climate]]'
          title: Augmenter la température de 0,5°C
          tap_action:
            action: call-service
            service: '[[script_increment_consigne]]'
          hold_action:
            action: more-info
          image: /local/images/mitsubishi/transparent_100100.png
          style:
            top: 63%
            left: 57%
            width: 3%
            transform: scale(6,2)
        - type: image
          entity: '[[climate]]'
          title: Changer le mode de ventilation
          tap_action:
            action: call-service
            service: input_select.select_next
            target:
              entity_id: '[[input_select_fan_modes]]'
            data:
              cycle: true
          hold_action:
            action: more-info
          image: /local/images/mitsubishi/transparent_100100.png
          style:
            top: 63%
            left: 76%
            width: 3%
            transform: scale(6,2)
        - type: image
          entity: '[[climate]]'
          title: Informations
          tap_action:
            action: more-info
          hold_action:
            action: more-info
          image: /local/images/mitsubishi/transparent_100100.png
          style:
            top: 85.5%
            left: 19.5%
            width: 3%
            transform: scale(7,4)
        - type: image
          entity: '[[climate]]'
          title: ON/OFF
          tap_action:
            action: call-service
            service: '[[script_on_off]]'
          hold_action:
            action: none
          image: /local/images/mitsubishi/transparent_100100.png
          style:
            top: 87%
            left: 87%
            width: 3%
            transform: scale(7,7)
        - type: conditional
          conditions:
            - entity: '[[clim_etat]]'
              state_not: Éteint
            - entity: input_select.clim_thermostat_details
              state_not: Horizontal
            - entity: input_select.clim_thermostat_details
              state_not: Vertical
          elements:
            - type: state-label
              entity: '[[clim_etat]]'
              title: Mode
              style:
                top: 35%
                left: 21.5%
                color: black
                font-size: 15px
                font-weight: 600
            - type: image
              entity: '[[clim_etat]]'
              title: Mode de fonctionnement
              style:
                top: 43%
                left: 21.5%
                width: 8%
              state_image:
                Chauffage: /local/images/mitsubishi/mode_chaud.png?v=2
                Déshum: /local/images/mitsubishi/mode_deshum.png?v=2
                Clim: /local/images/mitsubishi/mode_froid.png?v=2
                Ventil: /local/images/mitsubishi/mode_ventil.png?v=2
                Auto: /local/images/mitsubishi/mode_auto.png?v=2
                Éteint: /local/images/mitsubishi/transparent_100100.png
            - type: conditional
              conditions:
                - entity: '[[clim_etat]]'
                  state_not: Ventil
              elements:
                - type: state-label
                  entity: '[[clim_temp_consigne]]'
                  title: Température Consigne
                  style:
                    top: 43%
                    left: 53%
                    color: black
                    font-size: 40px
                    font-weight: 600
            - type: image
              entity: '[[clim_fan_modes]]'
              title: Mode de ventilation
              style:
                top: 43%
                left: 78%
                width: 12%
              state_image:
                '1': /local/images/mitsubishi/fan_1.png?v=2
                '2': /local/images/mitsubishi/fan_2.png?v=2
                '3': /local/images/mitsubishi/fan_3.png?v=2
                '4': /local/images/mitsubishi/fan_4.png?v=2
                auto: /local/images/mitsubishi/fan_auto.png?v=2
            - type: image
              entity: '[[clim_position_verticale]]'
              title: Position verticale
              tap_action:
                action: call-service
                service: input_select.select_option
                data:
                  option: Vertical
                target:
                  entity_id: input_select.clim_thermostat_details
              style:
                top: 20%
                left: 73%
                width: 8%
              state_image:
                '1': /local/images/mitsubishi/swing_vertical_1.png?v=2
                '2': /local/images/mitsubishi/swing_vertical_2.png?v=2
                '3': /local/images/mitsubishi/swing_vertical_3.png?v=2
                '4': /local/images/mitsubishi/swing_vertical_4.png?v=2
                '5': /local/images/mitsubishi/swing_vertical_5.png?v=2
                auto: /local/images/mitsubishi/swing_vertical_auto.png?v=2
                swing: /local/images/mitsubishi/swing_vertical_balayage.png?v=2
            - type: image
              entity: '[[clim_position_horizontale]]'
              title: Position horizontale
              tap_action:
                action: call-service
                service: input_select.select_option
                data:
                  option: Horizontal
                target:
                  entity_id: input_select.clim_thermostat_details
              style:
                top: 20%
                left: 83%
                width: 8%
              state_image:
                '1': /local/images/mitsubishi/swing_horizontal_1.png?v=2
                '2': /local/images/mitsubishi/swing_horizontal_2.png?v=2
                '3': /local/images/mitsubishi/swing_horizontal_3.png?v=2
                '4': /local/images/mitsubishi/swing_horizontal_4.png?v=2
                '5': /local/images/mitsubishi/swing_horizontal_5.png?v=2
                swing: /local/images/mitsubishi/swing_horizontal_balayage.png?v=2
        - type: conditional
          conditions:
            - entity: input_select.clim_thermostat_details
              state: Horizontal
          elements:
            - type: image
              entity: '[[clim_position_horizontale]]'
              tap_action:
                action: call-service
                service: melcloud.set_vane_horizontal
                target:
                  entity_id: '[[climate]]'
                data:
                  position: '1'
              image: /local/images/mitsubishi/swing_horizontal_1.png?v=2
              style:
                top: 25%
                left: 20%
                width: 10%
            - type: image
              entity: '[[clim_position_horizontale]]'
              tap_action:
                action: call-service
                service: melcloud.set_vane_horizontal
                target:
                  entity_id: '[[climate]]'
                data:
                  position: '2'
              image: /local/images/mitsubishi/swing_horizontal_2.png?v=2
              style:
                top: 25%
                left: 35%
                width: 10%
            - type: image
              entity: '[[clim_position_horizontale]]'
              tap_action:
                action: call-service
                service: melcloud.set_vane_horizontal
                target:
                  entity_id: '[[climate]]'
                data:
                  position: '3'
              image: /local/images/mitsubishi/swing_horizontal_3.png?v=2
              style:
                top: 25%
                left: 50%
                width: 10%
            - type: image
              entity: '[[clim_position_horizontale]]'
              tap_action:
                action: call-service
                service: melcloud.set_vane_horizontal
                target:
                  entity_id: '[[climate]]'
                data:
                  position: '4'
              image: /local/images/mitsubishi/swing_horizontal_4.png?v=2
              style:
                top: 25%
                left: 65%
                width: 10%
            - type: image
              entity: '[[clim_position_horizontale]]'
              tap_action:
                action: call-service
                service: melcloud.set_vane_horizontal
                target:
                  entity_id: '[[climate]]'
                data:
                  position: '5'
              image: /local/images/mitsubishi/swing_horizontal_5.png?v=2
              style:
                top: 25%
                left: 80%
                width: 10%
            - type: image
              entity: '[[clim_position_horizontale]]'
              tap_action:
                action: call-service
                service: melcloud.set_vane_horizontal
                target:
                  entity_id: '[[climate]]'
                data:
                  position: swing
              image: /local/images/mitsubishi/swing_horizontal_balayage.png?v=2
              style:
                top: 40%
                left: 50%
                width: 10%
            - type: image
              entity: '[[clim_position_horizontale]]'
              tap_action:
                action: call-service
                service: input_select.select_option
                data:
                  option: Fermé
                target:
                  entity_id: input_select.clim_thermostat_details
              image: /local/images/mitsubishi/close.png
              style:
                top: 15%
                left: 80%
                width: 4%
        - type: conditional
          conditions:
            - entity: input_select.clim_thermostat_details
              state: Vertical
          elements:
            - type: image
              entity: '[[clim_position_verticale]]'
              tap_action:
                action: call-service
                service: melcloud.set_vane_vertical
                target:
                  entity_id: '[[climate]]'
                data:
                  position: '1'
              image: /local/images/mitsubishi/swing_vertical_1.png?v=2
              style:
                top: 25%
                left: 20%
                width: 10%
            - type: image
              entity: '[[clim_position_verticale]]'
              tap_action:
                action: call-service
                service: melcloud.set_vane_vertical
                target:
                  entity_id: '[[climate]]'
                data:
                  position: '2'
              image: /local/images/mitsubishi/swing_vertical_2.png?v=2
              style:
                top: 25%
                left: 35%
                width: 10%
            - type: image
              entity: '[[clim_position_verticale]]'
              tap_action:
                action: call-service
                service: melcloud.set_vane_vertical
                target:
                  entity_id: '[[climate]]'
                data:
                  position: '3'
              image: /local/images/mitsubishi/swing_vertical_3.png?v=2
              style:
                top: 25%
                left: 50%
                width: 10%
            - type: image
              entity: '[[clim_position_verticale]]'
              tap_action:
                action: call-service
                service: melcloud.set_vane_vertical
                target:
                  entity_id: '[[climate]]'
                data:
                  position: '4'
              image: /local/images/mitsubishi/swing_vertical_4.png?v=2
              style:
                top: 25.4%
                left: 65%
                width: 9%
            - type: image
              entity: '[[clim_position_verticale]]'
              tap_action:
                action: call-service
                service: melcloud.set_vane_vertical
                target:
                  entity_id: '[[climate]]'
                data:
                  position: '5'
              image: /local/images/mitsubishi/swing_vertical_5.png?v=2
              style:
                top: 25.4%
                left: 80%
                width: 7.2%
            - type: image
              entity: '[[clim_position_verticale]]'
              tap_action:
                action: call-service
                service: melcloud.set_vane_vertical
                target:
                  entity_id: '[[climate]]'
                data:
                  position: swing
              image: /local/images/mitsubishi/swing_vertical_balayage.png?v=2
              style:
                top: 40%
                left: 20%
                width: 10%
            - type: image
              entity: '[[clim_position_verticale]]'
              tap_action:
                action: call-service
                service: melcloud.set_vane_vertical
                target:
                  entity_id: '[[climate]]'
                data:
                  position: auto
              image: /local/images/mitsubishi/swing_vertical_auto.png?v=2
              style:
                top: 40%
                left: 35%
                width: 10%
            - type: image
              entity: '[[clim_position_verticale]]'
              tap_action:
                action: call-service
                service: input_select.select_option
                data:
                  option: Fermé
                target:
                  entity_id: input_select.clim_thermostat_details
              image: /local/images/mitsubishi/close.png
              style:
                top: 15%
                left: 80%
                width: 4%
  floorplan_2d:
    card:
      type: picture-elements
      elements:
        - type: state-label
          entity: sensor.thermo_chambre_temperature
          style:
            top: 10%
            left: 33%
        - type: state-label
          entity: sensor.thermo_petite_chambre_temperature
          style:
            top: 10%
            left: 78%
        - type: state-label
          entity: sensor.netatmo_temperature_courante
          style:
            top: 55%
            left: 38%
        - type: state-label
          entity: sensor.moniteur_qualite_air_temp_arrondie
          style:
            top: 90%
            left: 38%
        - type: state-label
          entity: sensor.moniteur_qualite_air_voc
          style:
            top: 93%
            left: 38%
        - type: state-label
          entity: sensor.thermo_sdb_temperature
          style:
            top: 63%
            left: 68%
        - type: custom:button-card
          entity: alarm_control_panel.alarmo
          show_label: true
          template:
            - floorplan_mini_card
            - security_mini_card_state
            - custom_state
          icon: |
            [[[
              var entity = states['alarm_control_panel.alarmo'].state;
              if (entity == "disarmed" )
                return "mdi:shield-off";
              if (entity == "armed_away" )
                return "mdi:shield-lock";
              if (entity  == "armed_home" )
                return "mdi:shield-home";
              if (entity  == "armed_night" )
                return "mdi:shield-moon";
              if (entity  == "arming" )
                return "mdi:shield-half-full";
              if (entity  == "triggered" )
                return "mdi:shield-alert";
              return "mdi:shield-off";
            ]]]
          custom_fields:
            notification: |
              [[[ return Math.floor(states['sensor.compteur_home'].state ) ]]]  
          style:
            top: 95%
            left: 87%
        - type: custom:button-card
          entity: climate.ma_piece
          show_label: true
          template:
            - floorplan_mini_card
            - security_mini_card_state
          icon: |
            [[[
              var preset_mode = states['sensor.netatmo_preset_mode'].state;
              if (preset_mode == "Schedule" )
                return "mdi:thermostat-auto";
              if (preset_mode == "manual" )
                return "mdi:hand-back-left";
              if (preset_mode == "Frost Guard" )
                return "mdi:snowflake";
              if (preset_mode == "away" )
                return "mdi:home-export-outline";
              return "mdi:thermostat";
            ]]]
          label: |
            [[[
              return states['sensor.netatmo_temperature_consigne'].state + " °C" + "<br>" + states['sensor.netatmo_preset_mode'].state
            ]]]
          style:
            top: 85%
            left: 87%
        - type: custom:button-card
          entity: climate.salon
          show_label: true
          template:
            - floorplan_mini_card
            - security_mini_card_state
          icon: |
            [[[
              var preset_mode = states['sensor.clim_salon_etat'].state;
              if (preset_mode == "Chauffage" )
                return "mdi:fire";
              if (preset_mode == "Déshum" )
                return "mdi:water";
              if (preset_mode == "Clim" )
                return "mdi:snowflake";
              if (preset_mode == "Ventil" )
                return "mdi:fan";
              if (preset_mode == "Auto" )
                return "mdi:sun-snowflake";
              return "mdi:thermostat";
            ]]]
          label: |
            [[[
              var preset_mode = states['sensor.clim_salon_etat'].state;
              if (preset_mode == "Éteint" )
                return preset_mode
              if (preset_mode == "Éteint" )
                return preset_mode
              return states['sensor.clim_salon_temperature_consigne'].state + " °C" + "<br>" + preset_mode
            ]]]
          style:
            top: 37%
            left: 30%
        - type: custom:button-card
          entity: climate.chambre
          show_label: true
          template:
            - floorplan_mini_card
            - security_mini_card_state
          icon: |
            [[[
              var preset_mode = states['sensor.clim_chambre_etat'].state;
              if (preset_mode == "Chauffage" )
                return "mdi:fire";
              if (preset_mode == "Déshum" )
                return "mdi:water";
              if (preset_mode == "Clim" )
                return "mdi:snowflake";
              if (preset_mode == "Ventil" )
                return "mdi:fan";
              if (preset_mode == "Auto" )
                return "mdi:sun-snowflake";
              return "mdi:thermostat";
            ]]]
          label: |
            [[[
              var preset_mode = states['sensor.clim_chambre_etat'].state;
              if (preset_mode == "Éteint" )
                return preset_mode
              if (preset_mode == "Ventil" )
                return preset_mode
              return states['sensor.clim_chambre_temperature_consigne'].state + " °C" + "<br>" + preset_mode
            ]]]
          style:
            top: 21%
            left: 32%
        - type: custom:button-card
          entity: binary_sensor.camera_cuisine_cell_motion_detection
          show_label: false
          template:
            - floorplan_mini_card
            - security_mini_card_state
            - custom_state
            - custom_icon
          style:
            top: 72%
            left: 49%
        - type: custom:button-card
          double_tap_action:
            action: navigate
            navigation_path: /lovelace/systeme
          entity: sensor.etat_onduleur
          icon: mdi:sine-wave
          show_label: false
          template:
            - floorplan_mini_card
          style:
            top: 52%
            left: 21%
          styles:
            img_cell:
              - background-color: |
                  [[[
                    var sensor = states['sensor.eaton3s550_charge'].state;
                    if (sensor > 80) return 'var(--img-cell-red)';
                    if (sensor > 60) return 'var(--img-cell-orange)';
                    if (sensor > 40) return 'var(--img-cell-yellow)';
                    if (sensor > 20) return 'var(--img-cell-blue)';
                    if (sensor <= 20) return 'var(--img-cell-green)';
                  ]]]
            icon:
              - color: |
                  [[[
                    var sensor = states['sensor.etat_onduleur'].state;
                    if (sensor = "Sur secteur") return 'var(--icon-green)';
                    if (sensor = "Sur batterie") return 'var(--icon-red)';
                  ]]]
              - animation: |
                  [[[
                    var sensor = states['sensor.etat_onduleur'].state;
                    if (sensor = "Sur secteur") return '';
                    if (sensor = "Sur batterie") return 'blink 0.8s ease infinite';
                  ]]]
        - type: custom:button-card
          entity: binary_sensor.porte_entree_contact
          show_label: false
          template:
            - floorplan_mini_card
            - security_mini_card_state
            - custom_state
            - custom_icon
          style:
            top: 96%
            left: 70%
        - type: custom:button-card
          entity: binary_sensor.porte_coin_nuit_contact
          show_label: false
          template:
            - floorplan_mini_card
            - security_mini_card_state
            - custom_state
            - custom_icon
          style:
            top: 53%
            left: 53%
        - type: custom:button-card
          entity: switch.on_off_parsecpi
          icon: mdi:television
          show_label: false
          template:
            - floorplan_mini_card
            - mini_card_state
          style:
            top: 46%
            left: 21%
        - type: custom:button-card
          double_tap_action:
            action: toggle
          entity: switch.on_off_cadrepi
          icon: mdi:projector-screen
          show_label: false
          template:
            - floorplan_mini_card
            - mini_card_state
          style:
            top: 73%
            left: 72%
        - type: custom:button-card
          double_tap_action:
            action: toggle
          entity: switch.pc_gamer
          icon: mdi:desktop-tower
          show_label: false
          template:
            - floorplan_mini_card
            - mini_card_state
          style:
            top: 31%
            left: 47%
        - type: custom:button-card
          double_tap_action:
            action: navigate
            navigation_path: /lovelace/lumieres
          entity: light.lampe_chevet
          show_label: false
          template:
            - floorplan_mini_card
            - light_mini_card_state
          style:
            top: 24%
            left: 45%
        - type: custom:button-card
          double_tap_action:
            action: navigate
            navigation_path: /lovelace/lumieres
          entity: light.vitrine
          show_label: false
          template:
            - floorplan_mini_card
            - light_mini_card_state
          style:
            top: 30%
            left: 57%
        - type: custom:button-card
          entity: switch.prise_diffuseur_he
          icon: mdi:air-humidifier
          show_label: false
          template:
            - floorplan_mini_card
            - mini_card_state
          style:
            top: 9%
            left: 64%
      image: /local/images/floorplan/appartement_2d.png
button_card_templates:
  police:
    styles:
      card:
        - font-family: var(--primary-font-family)
  no_style:
    styles:
      card:
        - '--ha-card-border-width': 0px
        - background-color: none
        - background: none
        - box-shadow: none
  custom_icon:
    icon: |
      [[[
        if (entity.attributes.device_class == "opening" && entity.state == "on" )
          return "mdi:door-open"  
        if (entity.attributes.device_class == "opening" && entity.state != "on" )
          return "mdi:door-closed"            
        if (entity.attributes.device_class == "door" && entity.state == "on" )
          return "mdi:door-open"  
        if (entity.attributes.device_class == "door" && entity.state != "on" )
          return "mdi:door-closed"             
        if (entity.attributes.device_class == "motion" && entity.state == "on" )
          return "mdi:run-fast"  
        if (entity.attributes.device_class == "motion" && entity.state != "on" )
          return "mdi:human-male"   
        if (entity.attributes.device_class == "occupancy" && entity.state == "on" )
          return "mdi:run-fast"  
        if (entity.attributes.device_class == "occupancy" && entity.state != "on" )
          return "mdi:human-male"    
        return "" ]]]     
  custom_state:
    show_state: false
    show_label: true
    label: |
      [[[
        if( entity.state == "unavailable")
          return "Indisponible"
        if (entity.attributes.device_class == "opening" && entity.state == "on" )
          return "Ouvert"  
        if (entity.attributes.device_class == "opening" && entity.state == "off" )
          return "Fermé"  
        if (entity.attributes.device_class == "door" && entity.state == "on" )
          return "Ouvert"  
        if (entity.attributes.device_class == "door" && entity.state == "off" )
          return "Fermé"            
        if (entity.attributes.device_class == "motion" && entity.state == "on" )
          return "Détecté"  
        if (entity.attributes.device_class == "motion" && entity.state == "off" )
          return "Rien"   
        if (entity.attributes.device_class == "occupancy" && entity.state == "on" )
          return "Occupé"  
        if (entity.attributes.device_class == "occupancy" && entity.state == "off" )
          return "Absent"           
        if( entity.state == "off")
            return "Désactivé"
        if( entity.state == "on")          
          return  "Activé" 
        if( entity.state == "home")          
          return  "Présent" 
        if( entity.state == "not_home")          
          return  "Absent"         
        if( entity.state == "disarmed")          
          return  "Désarmé" 
        if( entity.state == "armed_away")          
          return  "Absent" 
        if( entity.state == "armed_home")          
          return  "Présent" 
        if( entity.state == "arming")          
          return  "Armement" 
        if( entity.state == "armed_night")          
          return  "Nuit" 
        if( entity.state == "triggered")          
          return  "Déclenché"
        if( entity.state == "pending")          
          return  "Attente"         
        if( entity.state == "locked")          
          return  "Verrouillé" 
        if( entity.state == "locking")          
          return  "Verrouillage"          
        if( entity.state == "unlocked")          
          return  "Déverrouillé"
        if( entity.state == "unlocking")          
          return  "Déerrouillage"          
        if( entity.state == "cleaning")          
          return  "Nettoyage" 
        if( entity.state == "returning")          
          return  "Retour"      
        if( entity.state == "error")          
          return  "Erreur"      
        if( entity.state == "idle")          
          return  "Pause"      
        if( entity.state == "paused")          
          return  "Pause"                
        if( entity.state == "docked")          
          return  "Base"  
        if( entity.state == "playing")          
          return  "En cours"  
        if( entity.state == "standby")          
          return  "Éteint" 
        if( entity.state == "Cellular")          
          return  "Cellulaire"
        if( entity.state == "Stationnaire")          
          return  "Rien"           
        return entity.state ]]]
  weather_icon:
    entity_picture: |
      [[[
        var weather = states['weather.TA_VILLE'].state;
        if ((weather == 'sunny') && (states['sun.sun'].state == 'above_horizon'))
          return "/local/weather/icones animes/clear-day.svg"
        if ((weather == 'sunny') || (weather == 'clear-night') && (states['sun.sun'].state == 'below_horizon'))
          return "/local/weather/icones animes/clear-night.svg"  

        if ((weather == 'lightning-rainy') && (states['sun.sun'].state == 'above_horizon'))
          return "/local/weather/icones animes/thunderstorms-day-rain.svg"
        if ((weather == 'lightning-rainy') || (weather == 'clear-night') && (states['sun.sun'].state == 'below_horizon'))
          return "/local/weather/icones animes/thunderstorms-night-rain.svg"

        if ((weather == 'fog') && (states['sun.sun'].state == 'above_horizon'))
          return "/local/weather/icones animes/fog-day.svg"             
        if ((weather == 'fog') && (states['sun.sun'].state == 'below_horizon'))
          return "/local/weather/icones animes/fog-night.svg"

        if ((weather == 'partlycloudy') && (states['sun.sun'].state == 'above_horizon'))
          return "/local/weather/icones animes/partly-cloudy-day.svg"                    
        if ((weather == 'partlycloudy') && (states['sun.sun'].state == 'below_horizon'))
          return "/local/weather/icones animes/partly-cloudy-night.svg"  

        if ((weather == 'rainy') && (states['sun.sun'].state == 'above_horizon'))
          return "/local/weather/icones animes/partly-cloudy-day-rain.svg"                      
        if ((weather == 'rainy') && (states['sun.sun'].state == 'below_horizon'))
          return "/local/weather/icones animes/partly-cloudy-night-rain.svg" 

        if ((weather == 'lightning') && (states['sun.sun'].state == 'above_horizon'))
          return "/local/weather/icones animes/thunderstorms-day.svg"                      
        if ((weather == 'lightning') && (states['sun.sun'].state == 'below_horizon'))
          return "/local/weather/icones animes/thunderstorms-night.svg" 

        if (weather == 'clear-night')
          return "/local/weather/icones animes/clear-night.svg";

        if (weather == 'sleet')
          return "/local/weather/icones animes/sleet.svg";  

        if (weather == 'pouring')
          return "/local/weather/icones animes/umbrella.svg"; 

        if (weather == 'snowy-rainy')
          return "/local/weather/icones animes/sleet.svg";  

        if (weather == 'snow')
          return "/local/weather/icones animes/snow.svg"; 

        if (weather == 'snowy')
          return "/local/weather/icones animes/snow.svg"; 

        if (weather == 'cloudy')
          return "/local/weather/icones animes/cloudy.svg"; 

        if (weather == 'wind')
          return "/local/weather/icones animes/wind.svg"; 

        if (weather == 'hail')
          return "/local/weather/icones animes/hail.svg"; 
      ]]]
  last_changed:
    label: |
      [[[
        var last_changed = states[entity.entity_id].last_changed;
        
        var now = new Date();
        var date = new Date(last_changed);
        date.toLocaleString();
        
        var diff = (now - date) / 1000;
        var days = Math.floor(diff / 86400);
        diff = diff % 86400;
        var hours = Math.floor(diff / 3600);
        diff = diff % 3600;
        var minutes = Math.floor(diff / 60);
        var seconds = Math.floor(diff % 60);
        
        
        if (days > 0) {
           return days + "j " + hours + "h ";
        }else{
           if (hours > 0) {
              return hours + "h " + "et " + minutes + "min";
           } else {
              if (minutes > 0) {
                 return minutes + "min et " + seconds + "s";
              } else {
                 return seconds + "s";
              }
           }
        }
      ]]]  
  title_activity_card:
    template:
      - badge_auto_card
      - no_style
    show_state: false
    show_label: true
    styles:
      img_cell:
        - background-color: none
      label:
        - align-self: end
        - font-size: 10px
        - color: var(--text-off)
      icon:
        - width: 12px
        - color: var(--text-off)
      card:
        - padding: 5px 0 0 0
  separator_activity_card:
    template:
      - divider
    styles:
      card:
        - margin-top: 0px
        - margin-bottom: 5px
  sensor_activity_card:
    template:
      - base
      - no_style
    show_state: false
    show_label: true
    styles:
      grid:
        - grid-template-rows: min-content min-content 1fr
        - grid-template-columns: 43px 1fr
      name:
        - color: var(--title)
        - font-size: 11px
        - margin-top: 2px
      label:
        - color: var(--text-on)
        - margin-top: '-2px'
        - white-space: normal
      icon:
        - color: var(--icon-off)
      img_cell:
        - border-radius: 8px
        - background-color: var(--img-cell-off)
      card:
        - border-radius: 0px
        - padding: 03px 4px 03px 0px
        - background: transparent
      custom_fields:
        bubble:
          - position: absolute
          - font-size: 13px
          - left: 25px
          - top: '-2%'
  sensor_alert_activity_card:
    template:
      - sensor_activity_card
    styles:
      icon:
        - color: var(--red)
      name:
        - color: var(--red)
  around_card:
    styles:
      grid:
        - grid-template-areas: '"n" "info"'
        - grid-template-columns: 1fr
        - grid-template-rows: 1fr min-content min-content
      card:
        - padding: 12px
  around_clear_card:
    styles:
      card:
        - padding: 05px
        - background: none
        - box-shadow: none
  divider:
    styles:
      card:
        - height: 1px
        - padding: 0px
        - margin-top: 15px
        - margin-bottom: 15px
        - border-radius: 0px
        - background-color: rgba(100, 100, 100, 0.2)
        - box-shadow: none
  base:
    show_icon: true
    show_name: true
    show_state: false
    show_label: true
    template:
      - police
    layout: icon_name_state2nd
    styles:
      grid:
        - grid-template-rows: min-content min-content min-content
        - grid-template-columns: 44px 1fr
      img_cell:
        - height: 35px
        - width: 35px
        - border-radius: 100px
        - background-color: var(--img-cell-off)
        - justify-self: start
        - align-self: start
      icon:
        - width: 50%
        - color: var(--icon-off)
      name:
        - font-size: 13px
        - opacity: 1
        - font-weight: 500
        - color: var(--text-on)
        - width: 100%
        - text-align: left
        - align-self: end
        - filter: drop-shadow(1px 1px 1px rgba(0,0,0,0.5))
      state:
        - font-size: 13px
        - font-weight: 500
        - color: var(--text-on)
        - opacity: 0.8
        - width: 100%
        - text-align: left
        - align-self: start
        - filter: drop-shadow(1px 1px 1px rgba(0,0,0,0.5))
      label:
        - font-size: 13px
        - font-weight: 500
        - color: var(--text-on)
        - opacity: 0.8
        - width: 100%
        - text-align: left
        - align-self: start
        - filter: drop-shadow(1px 1px 1px rgba(0,0,0,0.5))
      card:
        - padding: 8px 10px 6px 8px
        - font-size: 100%
        - white-space: normal
      custom_fields:
        bouton:
          - position: absolute
          - top: 77%
          - left: 50%
          - width: calc(85% + 1px)
          - transform: translate(-50%, calc(-50% + 10px))
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)
          - '--ha-card-box-shadow': none
          - '--ha-card-border-width': 0px
        jauge-cercle:
          - top: '-02%'
          - left: 66%
          - width: 40%
          - position: absolute
          - opacity: 100%
          - z-index: 2
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)
          - '--ha-card-box-shadow': none
          - '--ha-card-border-width': 0px
        lock:
          - position: absolute
          - top: 7%
          - left: 88%
          - width: calc(15% + 0px)
          - transform: translate(-50%, calc(-50% + 10px))
          - z-index: 1
          - opacity: 100%
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)
          - '--ha-card-box-shadow': none
          - '--ha-card-border-width': 0px
        graph_temp:
          - position: absolute
          - top: 80%
          - left: 50%
          - width: calc(100% + 15px)
          - transform: translate(-50%, calc(-50% + 10px))
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)
          - '--ha-card-box-shadow': none
          - '--ha-card-border-width': 0px
        notification:
          - border-radius: 50%
          - position: absolute
          - left: 30px
          - top: 4%
          - height: 15px
          - width: 15px
          - font-size: 80%
          - line-height: 15px
          - font-weight: null
          - background-color: |
              [[[
                if (entity.state == "off")
                  return 'rgba(0,0,0,0)';
               return 'var(--notification) ';
              ]]]
          - color: |
              [[[
                if (entity.state == "off")
                  return 'rgba(0,0,0,0)';
               return 'var(--text-on)';
              ]]]
    tap_action:
      action: more-info
    double_tap_action:
      action: toggle
  base_high:
    aspect_ratio: 1.53/1
  graph_temp:
    custom_fields:
      graph_temp:
        card:
          type: custom:mini-graph-card
          height: 250
          line_width: 4
          lower_bound: 10
          points_per_hour: 1
          hours_to_show: 24
          show:
            fill: false
            icon: false
            name: false
            state: false
            legend: false
            points: false
            labels: false
  sub_button:
    show_name: false
    show_state: false
    show_label: false
    show_icon: true
    template:
      - police
    styles:
      card:
        - border-radius: 10px
        - height: 27px
        - padding: 01px
        - line-height: 77%
        - border-color: rgba(0, 0, 0, 0.1)
        - border-style: outset
        - border-width: 1px
      icon:
        - color: var(--icon-off)
        - width: 14px
        - filter: drop-shadow(1px 2px 1px rgba(0,0,0,0.3))
    double_tap_action:
      action: more-info
    tap_action:
      action: more-info
  room_card:
    variables:
      var_label: |
        [[[ 
          if (entity.state == 'on' )
            return variables.temp_state +"° - "  
          if (entity.state == 'off'  )           
            return variables.temp_state +"°"            
        ]]]
    label: |
      [[[
        if( entity.state == "unavailable"  )
          return "Indisponible"
        if( entity.state == "off")
          return variables.var_label
        var lum = states[entity.entity_id].attributes.brightness/2.54;
        var roundLum =  Math.round(lum * 1) / 1; 
        return variables.var_label + "  " + roundLum + "%" ]]] 
    styles:
      label:
        - color: |
            [[[           
              if (variables.temp_state < 18.9)
                return 'var(--icon-blue)'
              if (variables.temp_state  > 26.9)
                return 'var(--red)'                 
              if (variables.temp_state  > 24.9)
                return 'var(--orange)'               
              return "var(--text-off)"
            ]]]
      custom_fields:
        notification:
          - border-radius: 50%
          - position: absolute
          - left: 32px
          - top: 5%
          - height: 15px
          - width: 15px
          - font-size: 80%
          - line-height: 15px
          - font-weight: null
          - background-color: |
              [[[
                if (entity.state == "off")
                  return 'rgba(0,0,0,0)';
               return 'var(--notification) ';
              ]]]
          - color: |
              [[[
                if (entity.state == "off")
                  return 'rgba(0,0,0,0)';
               return 'var(--text-on)';
              ]]]
    state:
      - value: 'on'
        styles:
          card:
            - background-color: |-
                [[[ 
                    var color = '255,215,0'; // Default Color
                    if( states[entity.entity_id].attributes.rgb_color != undefined)
                      color = states[entity.entity_id].attributes.rgb_color;               
                    return 'rgb(' + color + ',0.15)';
                ]]]
          img_cell:
            - background-color: |-
                [[[ 
                  var color = '255,215,0'; // Default Color

                  if( states[entity.entity_id].attributes.rgb_color != undefined)
                    color = states[entity.entity_id].attributes.rgb_color; 
                  
                  return 'rgb(' + color + ',0.3)';
                ]]]
          icon:
            - color: |-
                [[[ 
                  var color = '255,215,0'; // Default Color

                  if( states[entity.entity_id].attributes.rgb_color != undefined)
                    color = states[entity.entity_id].attributes.rgb_color; 
                  
                  return 'rgb(' + color + ',1)';
                ]]]
  room_card_slider:
    custom_fields:
      slider:
        card:
          type: custom:my-slider-v2
          entity: '[[[ return variables.slider ]]]'
          colorMode: brightness
          min: 1
          max: 100
          styles:
            container:
              - background: none
              - border-radius: 100px
              - overflow: visible
            card:
              - height: 7px
              - padding: 0 8px
              - background: |
                  [[[
                    if (entity.state == "on") return "linear-gradient(90deg, rgba(255,255,255, 0.05) 0%, rgba(255,255,255, 0.2) 100%)";
                    else return "var(--card-background-color)";
                  ]]]
              - box-shadow: none
            track:
              - overflow: visible
              - background: none
            progress:
              - background: none
            thumb:
              - background: |
                  [[[                 
                    if (entity.state === 'off') return "linear-gradient(90deg, rgba(255,255,255, 0.05) 0%, rgba(255,255,255, 0.1) 100%)";
                    if( states[entity.entity_id].attributes.rgb_color == undefined)
                    return 'rgba(255, 218, 120, 0.5)'                    
                    if( states[entity.entity_id].attributes.rgb_color != undefined)
                    var color = '255,215,0'; // Default Color
                    color = states[entity.entity_id].attributes.rgb_color
                    return 'rgb(' + color + ',0.5)'
                  ]]]
              - top: '-2.5px'
              - right: '-6px'
              - height: 12px
              - width: 12px
              - border-radius: 100px
    styles:
      custom_fields:
        slider:
          - position: absolute
          - width: 85%
          - top: 53%
          - left: 7.5%
          - z-index: 1
  room_card_graph:
    styles:
      custom_fields:
        graph:
          - opacity: 90%
          - position: absolute
          - top: 50%
          - left: 50%
          - width: calc(110% + 15px)
          - transform: translate(-50%, calc(-50% + 10px))
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)
          - '--ha-card-box-shadow': none
          - '--ha-card-border-width': 0px
          - z-index: 0
    custom_fields:
      graph:
        card:
          type: custom:mini-graph-card
          entities:
            - entity: '[[[ return variables.temp ]]]'
          height: 50
          line_width: 1
          points_per_hour: 1
          hours_to_show: 24
          show:
            fill: false
            icon: false
            name: false
            state: false
            legend: false
            points: false
            labels: false
          color_thresholds:
            - value: 0
              color: var(--graph-line)
  slider_brightness:
    entity: '[[[ return variables.entity ]]]'
    template:
      - police
    show_name: false
    show_icon: false
    name: Luminosité
    icon: mdi:brightness-4
    custom_fields:
      slider:
        card:
          type: custom:my-slider-v2
          entity: '[[[ return variables.slider ]]]'
          colorMode: brightness
          styles:
            container:
              - border-radius: 100px
              - overflow: visible
              - background: none
            card:
              - height: 15px
              - padding: 0 20px
              - background: |
                  [[[
                    if (entity.state == "on") return "linear-gradient(90deg, rgba(255,255,255, 0.05) 0%, rgba(255,255,255, 0.2) 100%)";
                    else return "var(--card-background-color)";
                  ]]]
            track:
              - overflow: visible
              - background: none
            progress:
              - background: none
            thumb:
              - background: |
                  [[[                 
                    if (entity.state === 'off') return "var(--img-cell-off)";
                    if( states[entity.entity_id].attributes.rgb_color == undefined)
                    return 'rgba(255, 218, 120, 0.7)'                    
                    if( states[entity.entity_id].attributes.rgb_color != undefined)
                    var color = '255,215,0'; // Default Color
                    color = states[entity.entity_id].attributes.rgb_color
                    return 'rgb(' + color + ',0.7)'
                  ]]]          
              - top: '-02px'
              - right: '-18px'
              - height: 20px
              - width: 20px
              - border-radius: 100px
    styles:
      grid:
        - grid-template-areas: '"n" "slider"'
        - grid-template-columns: 1fr
        - grid-template-rows: 1fr min-content min-content min-content
      card:
        - padding: 14px
        - '--mdc-ripple-press-opacity': 0
      name:
        - justify-self: start
        - font-size: 14px
        - margin: 4px 0 10px 4px
        - color: var(--text-on)
  ball_card:
    entity: '[[[ return variables.entity ]]]'
    icon: '[[[ return variables.icon ]]]'
    template:
      - base
    show_state: true
    show_label: false
    styles:
      state:
        - white-space: nowrap
      label:
        - white-space: nowrap
      card:
        - border-radius: 50px
        - padding: 6px
      img_cell:
        - place_self: middle
        - align-self: middle
      custom_fields:
        notification:
          - padding: 1px
          - left: 26px
          - top: 5%
          - height: 15px
          - width: 15px
          - font-size: 75%
          - line-height: 15px
    double_tap_action:
      action: toggle
    tap_action:
      action: more-info
  ball_light_card:
    template:
      - ball_card
    show_state: false
    show_label: true
    label: |
      [[[
        if( entity.state == "unavailable")
          return "Indisponible"
        if( entity.state == "off")
          return "Eteint"
        var lum = states[entity.entity_id].attributes.brightness/2.54;
        var roundLum =  Math.round(lum * 1) / 1; 
        return roundLum + "%" ]]] 
    tap_action:
      action: more-info
    double_tap_action:
      action: toggle
  mini_card:
    variables:
      var_name_temp: Temp
      var_name_hum: Hum
      var_name_lum: Lum
      var_name_mouv: Mouv
    show_icon: true
    show_name: false
    show_state: false
    show_label: true
    template:
      - police
      - no_style
    styles:
      img_cell:
        - border-radius: 50%
        - width: 35px
        - height: 35px
        - background-color: var(--img-cell-off)
        - color: var(--text-on)
      icon:
        - width: 50%
        - color: var(--icon-off)
      label:
        - font-weight: 500
        - font-size: 13px
        - opacity: 0.8
        - color: var(--text-on)
        - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
        - white-space: normal
      state:
        - font-weight: 500
        - font-size: 13px
        - opacity: 0.8
        - color: var(--text-on)
        - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
      name:
        - font-weight: 500
        - font-size: 13px
        - opacity: 1
        - color: var(--text-on)
        - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
      card:
        - border-radius: 0px
        - height: auto
      custom_fields:
        notification:
          - border-radius: 50%
          - position: absolute
          - left: 60%
          - top: 4%
          - height: 17px
          - width: 17px
          - font-size: 10px
          - line-height: 16px
          - font-weight: null
          - background-color: |
              [[[
                if (entity.state == "off" || entity.state == "locked" || entity.state == 0 )
                  return 'rgba(0,0,0,0)';
               return 'var(--notification) ';
              ]]]
          - color: |
              [[[
                if (entity.state == "off" || entity.state == "locked" || entity.state == 0)
                  return 'rgba(0,0,0,0)';
               return 'var(--text-on)';
              ]]]
    double_tap_action:
      action: toggle
    tap_action:
      action: more-info
  climat_card:
    entity: '[[[ return variables.temp ]]]'
    show_name: false
    show_icon: false
    template:
      - temperature_state
      - no_style
    custom_fields:
      icon:
        card:
          type: custom:button-card
          entity: '[[[ return variables.temp ]]]'
          icon: '[[[ return variables.icon ]]]'
          show_icon: true
          show_state: false
          show_name: false
          show_label: true
          template:
            - no_style
          styles:
            icon:
              - width: 20px
              - color: |
                  [[[ 
                    if (variables.temp_state > 26)   
                      return "var(--icon-red)"
                    if (variables.temp_state < 19)   
                      return "var(--icon-blue)" 
                    return "var(--icon-off)"
                  ]]]               
      temp:
        card:
          type: custom:button-card
          entity: '[[[ return variables.temp ]]]'
          show_state: false
          show_name: false
          show_label: true
          show_icon: false
          label: |
            [[[ return (entity.state* 1).toFixed(1) +"°"  ]]]           
          template:
            - police
            - no_style
          styles:
            label:
              - font-size: 35px
              - font-weight: null
              - color: |
                  [[[ 
                    if (variables.temp_state > 26)   
                      return "var(--red)"
                    if (variables.temp_state < 19)   
                      return "var(--blue)"                      
                  ]]]  
      hum:
        card:
          type: custom:button-card
          entity: '[[[ return variables.hum ]]]'
          show_state: false
          show_name: false
          show_label: true
          show_icon: false
          label: |
            [[[
               return `<ha-icon
               icon="mdi:water"
               style="width: 15px; height: 13px; ">
               </ha-icon>` + (variables.hum_state* 1).toFixed(0) +"%" 
            ]]]
          template:
            - police
            - no_style
          styles:
            label:
              - font-size: 20px
              - font-weight: null
              - opacity: 0.8
              - color: |
                  [[[ 
                    if (variables.hum_state > 70)   
                      return "var(--red)"
                    if (variables.hum_state < 40)   
                      return "var(--blue)"
                    return "var(--text-on)"
                  ]]]    
      title:
        card:
          type: custom:button-card
          template:
            - title_card
          entity: '[[[ return variables.temp ]]]'
          name: |
            [[[ return variables.temp_trend + variables.name  ]]] 
          styles:
            name:
              - justify-self: center
              - font-size: 13px
              - color: var(--text-off)
              - font-weight: 500
            card:
              - padding: 0
      gauge:
        card:
          type: custom:apexcharts-card
          header:
            show: false
            title: '[[[ return variables.name ]]]'
            show_states: true
            colorize_states: true
          experimental:
            brush: false
            color_threshold: true
          chart_type: radialBar
          series:
            - entity: '[[[ return variables.temp ]]]'
              name: température
              color: var(--blue)
              max: 30
              fill_raw: last
            - entity: '[[[ return variables.hum ]]]'
              name: humidité
              color: var(--blue)
              max: 100
              fill_raw: last
          apex_config:
            chart:
              height: 220
            legend:
              show: false
            colors:
              - var(--black)
            plotOptions:
              radialBar:
                hollow:
                  margin: 0
                  size: 70%
                  background: var(--ha-card-background)
                track:
                  dropShadow:
                    enabled: true
                    top: 2
                    left: 0
                    blur: 4
                    opacity: 0.15
                dataLabels:
                  show: false
                  name:
                    offsetY: -10
                    color: '#fff'
                    fontSize: 13px
                  value:
                    color: '#fff'
                    fontSize: 30px
                    show: true
            fill:
              type: gradient
              gradient:
                shade: dark
                type: vertical
                gradientToColors:
                  - var(--orange)
                  - var(--dark-blue)
                stops:
                  - 0
                  - 100
            stroke:
              lineCap: round
          card_mod:
            style: |
              ha-card {
                 font-family: Avenir;
                 background-color: transparent;
                 box-shadow: none;
               }
    styles:
      card:
        - height: 200px
        - padding: 0
      custom_fields:
        icon:
          - position: absolute
          - width: 100%
          - top: 8%
          - left: 0%
          - opacity: 100%
          - z-index: 1
        title:
          - position: absolute
          - width: 100%
          - top: 25%
          - left: '-02%'
          - opacity: 100%
          - z-index: 2
        temp:
          - position: absolute
          - width: 100%
          - top: 29%
          - left: 0%
          - opacity: 100%
          - z-index: 2
        hum:
          - position: absolute
          - width: 100%
          - top: 50%
          - left: '-02%'
          - opacity: 100%
          - z-index: 2
        gauge:
          - position: absolute
          - width: 100%
          - top: '-06%'
          - left: '-01%'
          - opacity: 100%
          - z-index: 0
  battery_level_card:
    entity: '[[[ return variables.entity ]]]'
    name: |
      [[[
        var name = entity.attributes.friendly_name ;
        return name ;
      ]]]
    label: |
      [[[
        var unit = entity.attributes.unit_of_measurement || '';
        if ( variables.charge == "Charging" || variables.charge == "Charged" || variables.charge == "Full"   )
          return `<ha-icon
          icon="mdi:flash"
          style="width: 14px; height: 16px; color: var(--yellow); margin-top: -01px ;vertical-align: top;"> 
          </ha-icon> <span> ${(entity.state * 1).toFixed(0) + unit} </span>`         
        return (entity.state * 1).toFixed(0) + unit;
      ]]]
    show_icon: false
    show_state: false
    show_label: true
    template:
      - no_style
      - police
    tap_action:
      action: more-info
    double_tap_action:
      action: toggle
    custom_fields:
      barre:
        card:
          type: custom:bar-card
          entities:
            - entity: '[[[ return variables.entity ]]]'
              color: var(--card-red)
          direction: right
          unit_of_measurement: '%'
          max: 100
          positions:
            name: 'off'
            indicator: 'off'
            value: 'off'
          height: 15px
          width: 100%
          icon: 'off'
          entity_row: true
          severity:
            - color: var(--img-cell-red)
              from: 0
              to: 30
            - color: var(--img-cell-yellow)
              from: 30.1
              to: 50
            - color: var(--img-cell-blue)
              from: 50.1
              to: 99.9
            - color: var(--img-cell-green)
              from: 100
              to: 100
    styles:
      card:
        - height: 30px
        - padding: 5.5px
      name:
        - font-size: 13px
        - color: var(--text-on)
        - font-weight: 500
        - justify-self: start
        - align-self: start
        - margin-left: 20px
      label:
        - font-size: 13px
        - color: |
            [[[ 
              var state = entity.state ;
                if (state <= 30)   
                return "var(--red)"              
                if (state <= 50)   
                return "var(--orange)"
                return "var(--text-on)"
             ]]]
        - font-weight: 600
        - justify-self: end
        - align-self: end
        - margin-right: 20px
        - margin-bottom: 1px
      custom_fields:
        barre:
          - top: '-19%'
          - left: '-50%'
          - width: 100%
          - position: absolute
          - z-index: 0
    state:
      - value: unknown
        styles:
          name:
            - color: var(--red)
          label:
            - color: var(--red)
          card:
            - animation: blink 0.8s ease infinite
      - value: unavailable
        styles:
          name:
            - color: var(--red)
          label:
            - color: var(--red)
          card:
            - animation: blink 0.8s ease infinite
  sensor_level_card:
    entity: '[[[ return variables.entity ]]]'
    show_icon: false
    show_state: false
    show_label: true
    label: |
      [[[
        var unit = entity.attributes.unit_of_measurement || '';
        return (entity.state * 1).toFixed(1) + unit;
      ]]]
    template:
      - no_style
      - police
    tap_action:
      action: more-info
    double_tap_action:
      action: toggle
    custom_fields:
      barre:
        card:
          type: custom:bar-card
          entities:
            - entity: '[[[ return variables.entity ]]]'
          direction: right
          max: 100
          positions:
            name: 'off'
            indicator: 'off'
            value: 'off'
          height: 15px
          width: 100%
          icon: 'off'
          entity_row: true
          severity:
            - color: var(--img-cell-green)
              from: 0
              to: 30
            - color: var(--img-cell-blue)
              from: 30.1
              to: 65
            - color: var(--img-cell-orange)
              from: 65.1
              to: 85
            - color: var(--img-cell-red)
              from: 85.1
              to: 100
    styles:
      card:
        - height: 30px
        - padding: 5.5px
      name:
        - font-size: 13px
        - color: var(--text-on)
        - font-weight: 500
        - justify-self: start
        - align-self: start
        - margin-left: 20px
        - margin-top: 1px
      label:
        - color: var(--text-on)
        - font-size: 13px
        - font-weight: 600
        - justify-self: end
        - align-self: end
        - margin-right: 20px
        - margin-bottom: 0px
      custom_fields:
        barre:
          - top: '-18%'
          - left: '-50%'
          - width: 100%
          - position: absolute
    state:
      - value: unknown
        styles:
          name:
            - color: var(--red)
          label:
            - color: var(--red)
          card:
            - animation: blink 0.8s ease infinite
      - value: unavailable
        styles:
          name:
            - color: var(--red)
          label:
            - color: var(--red)
          card:
            - animation: blink 0.8s ease infinite
  music_progression:
    entity: '[[[ return variables.entity ]]]'
    show_icon: false
    show_state: false
    show_label: false
    show_name: false
    template:
      - no_style
    tap_action:
      action: more-info
    double_tap_action:
      action: more-info
    custom_fields:
      barre:
        card:
          type: custom:bar-card
          entities:
            - entity: '[[[ return variables.entity ]]]'
              color: rgba(255, 255, 255, 0.35)
          direction: right
          unit_of_measurement: '%'
          max: 100
          positions:
            name: 'off'
            indicator: 'off'
            value: 'off'
          height: 5px
          width: 100%
          icon: 'off'
          entity_row: true
          card_mod:
            style: |
              bar-card-backgroundbar {
                filter: drop-shadow(1px 1px 1px rgba(0,0,0,0.9));
              }
    styles:
      card:
        - height: 30px
        - padding: 5.5px
      custom_fields:
        barre:
          - top: '-19%'
          - left: '-50%'
          - width: 100%
          - position: absolute
          - z-index: 0
    state:
      - value: unknown
        styles:
          name:
            - color: var(--red)
          label:
            - color: var(--red)
          card:
            - animation: blink 0.8s ease infinite
      - value: unavailable
        styles:
          name:
            - color: var(--red)
          label:
            - color: var(--red)
          card:
            - animation: blink 0.8s ease infinite
  media_controls:
    template:
      - no_style
    show_name: false
    styles:
      icon:
        - width: 21px
        - color: var(--text-on)
        - filter: drop-shadow(1px 1px 1px rgba(0,0,0,1))
        - opacity: 70%
      img_cell:
        - width: 30px
        - height: 30px
        - border-radius: 50px
      card:
        - padding: 0
  title_card:
    show_icon: false
    show_name: true
    show_state: false
    show_label: true
    template:
      - police
      - no_style
    styles:
      name:
        - color: var(--title)
        - font-size: 14px
        - font-weight: 500
        - justify-self: start
        - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
      label:
        - color: var(--text-off)
        - font-size: 14px
        - font-weight: 500
        - justify-self: start
        - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
      card:
        - height: auto
        - padding: 0 0 0 15px
        - border-radius: 0px
        - line-height: 100%
        - '--ha-card-border-width': 0px
        - background: none
    tap_action:
      action: toggle
    double-tap_action:
      action: more-info
  badge_card:
    template:
      - police
    show_label: true
    show_name: false
    label: |
      [[[
        var unit = entity.attributes.unit_of_measurement || '';
        return entity.state + unit;
      ]]]    
    styles:
      grid:
        - grid-template-areas: '"i gutter l"'
        - grid-template-columns: min-content 5px min-content
        - grid-template-rows: min-content
      card:
        - padding: 6px 5px
        - line-height: 18px
        - border-radius: 50px
      label:
        - color: var(--text-on)
        - font-size: 13px
        - font-weight: 500
      img_cell:
        - border-radius: 50px
        - height: 20px
        - width: 20px
        - background-color: var(--img-cell-off)
      icon:
        - width: 18px
        - color: var(--icon-off)
  badge_auto_card:
    template:
      - badge_card
    styles:
      card:
        - width: auto
  light_mini_card_state:
    state:
      - value: 'on'
        styles:
          img_cell:
            - background-color: |-
                [[[ 
                  var color = '255,215,0'; // Default Color

                  if( states[entity.entity_id].attributes.rgb_color != undefined)
                    color = states[entity.entity_id].attributes.rgb_color; 
                  
                  return 'rgb(' + color + ',0.3)';
                ]]]
          icon:
            - color: |-
                [[[ 
                  var color = '255,215,0'; // Default Color

                  if( states[entity.entity_id].attributes.rgb_color != undefined)
                    color = states[entity.entity_id].attributes.rgb_color; 
                  
                  return 'rgb(' + color + ',1)';
                ]]]
      - value: 'off'
        color: grey
        styles:
          img_cell:
            - background-color: var(--img-cell-off)
          icon:
            - color: var(--icon-off)
      - operator: template
        value: >-
          [[[ return entity.state == "unavailable"  || entity.state == "jammed"
          || entity.state == "unknown" ]]]
        styles:
          img_cell:
            - background-color: var(--img-cell-red)
          icon:
            - color: var(--icon-red)
            - animation: blink 0.8s ease infinite
          name:
            - color: var(--icon-red)
  light_card_state:
    state:
      - value: 'on'
        styles:
          card:
            - background-color: |-
                [[[ 
                  var color = '255,215,0'; // Default Color

                  if( states[entity.entity_id].attributes.rgb_color != undefined)
                    color = states[entity.entity_id].attributes.rgb_color; 
                  
                  return 'rgb(' + color + ',0.2)';
                ]]]        
          img_cell:
            - background-color: |-
                [[[ 
                  var color = '255,215,0'; // Default Color

                  if( states[entity.entity_id].attributes.rgb_color != undefined)
                    color = states[entity.entity_id].attributes.rgb_color; 
                  
                  return 'rgb(' + color + ',0.3)';
                ]]]
          icon:
            - color: |-
                [[[ 
                  var color = '255,215,0'; // Default Color

                  if( states[entity.entity_id].attributes.rgb_color != undefined)
                    color = states[entity.entity_id].attributes.rgb_color; 
                  
                  return 'rgb(' + color + ',1)';
                ]]]
      - value: 'off'
        color: grey
        styles:
          img_cell:
            - background-color: var(--img-cell-off)
          icon:
            - color: var(--icon-off)
      - operator: template
        value: >-
          [[[ return entity.state == "unavailable"   || entity.state ==
          "unknown" ]]]
        styles:
          card:
            - border-color: rgba(255, 0, 0, 0.5)
            - background-color: var(--card-red)
          img_cell:
            - background-color: var(--img-cell-red)
          icon:
            - color: var(--icon-red)
            - animation: blink 0.8s ease infinite
          name:
            - color: var(--icon-red)
  person_state:
    state:
      - operator: template
        value: >-
          [[[ return entity.state == "home" || entity.state == "Maison" ||
          entity.state == "Présent"  ]]]
        styles:
          state:
            - color: var(--text-off)
          card:
            - background-color: var(--card-blue)
      - operator: template
        value: '[[[ return  entity.state == "not_home" || entity.state == "off" ]]]'
        styles:
          state:
            - color: var(--icon-orange)
      - operator: template
        value: '[[[ return  entity.state != "not_home" ]]]'
        styles:
          card:
            - background-color: var(--card-green)
      - operator: template
        value: >-
          [[[ return entity.state == "unavailable"   || entity.state ==
          "unknown" ]]]
        styles:
          card:
            - border-color: var(--card-red)
            - background-color: var(--card-red)
          img_cell:
            - background-color: var(--img-cell-red)
          icon:
            - color: var(--icon-red)
            - animation: blink 0.8s ease infinite
          name:
            - color: var(--icon-red)
  electricity_state:
    styles:
      card:
        - background-color: |
            [[[
              if (states["sensor.linky_verif_j1"].state == "false") return ''
              if (states["sensor.linky_TON_PDL_consumption"].state < 6) return 'var(--card-green)';          
              if (states["sensor.linky_TON_PDL_consumption"].state < 9) return 'var(--card-blue)';
              if (states["sensor.linky_TON_PDL_consumption"].state < 12) return 'var(--card-yellow)'; 
              if (states["sensor.linky_TON_PDL_consumption"].state < 15) return 'var(--card-orange)';
              if (states["sensor.linky_TON_PDL_consumption"].state >= 15) return 'var(--card-red)';          
              else return 'var(--img-cell-red)';
            ]]]
      img_cell:
        - background-color: |
            [[[
              if (states["sensor.linky_verif_j1"].state == "false") return 'var(--img-cell-off)'
              if (states["sensor.linky_TON_PDL_consumption"].state < 6) return 'var(--img-cell-green)';          
              if (states["sensor.linky_TON_PDL_consumption"].state < 9) return 'var(--img-cell-blue)';
              if (states["sensor.linky_TON_PDL_consumption"].state < 12) return 'var(--img-cell-yellow)'; 
              if (states["sensor.linky_TON_PDL_consumption"].state < 15) return 'var(--img-cell-orange)';
              if (states["sensor.linky_TON_PDL_consumption"].state >= 15) return 'var(--img-cell-red)';          
              else return 'var(--img-cell-red)';
            ]]]
      icon:
        - color: |
            [[[
              if (states["sensor.linky_verif_j1"].state == "false") return 'var(--icon-off)'
              if (states["sensor.linky_TON_PDL_consumption"].state < 6) return 'var(--icon-green)';          
              if (states["sensor.linky_TON_PDL_consumption"].state < 9) return 'var(--icon-blue)';
              if (states["sensor.linky_TON_PDL_consumption"].state < 12) return 'var(--icon-yellow)'; 
              if (states["sensor.linky_TON_PDL_consumption"].state < 15) return 'var(--icon-orange)';
              if (states["sensor.linky_TON_PDL_consumption"].state >= 15) return 'var(--icon-red)';          
              else return 'var(--img-cell-red)';
            ]]]   
  air_state:
    styles:
      card:
        - background-color: |
            [[[
              if (states['sensor.qualite_air_pourcentage'].state >= 98.8  )
                return 'var(--card-green)'
              if (states['sensor.qualite_air_pourcentage'].state < 98.8 && states['sensor.qualite_air_pourcentage'].state > 96 )
                return 'var(--card-blue)'
              if (states['sensor.qualite_air_pourcentage'].state <= 96 && states['sensor.qualite_air_pourcentage'].state > 88 )
                return 'var(--card-yellow)'
              if (states['sensor.qualite_air_pourcentage'].state <= 88 && states['sensor.qualite_air_pourcentage'].state > 60 )
                return 'var(--card-orange)'
              if (states['sensor.qualite_air_pourcentage'].state <= 60  )
                return 'var(--card-red)'
              return ''
            ]]]            
      img_cell:
        - background-color: |
            [[[
              if (states['sensor.qualite_air_pourcentage'].state >= 98.8  )
                return 'var(--img-cell-green)'
              if (states['sensor.qualite_air_pourcentage'].state < 98.8 && states['sensor.qualite_air_pourcentage'].state > 96 )
                return 'var(--img-cell-blue)'
              if (states['sensor.qualite_air_pourcentage'].state <= 96 && states['sensor.qualite_air_pourcentage'].state > 88 )
                return 'var(--img-cell-yellow)'
              if (states['sensor.qualite_air_pourcentage'].state <= 88 && states['sensor.qualite_air_pourcentage'].state > 60 )
                return 'var(--img-cell-orange)'
              if (states['sensor.qualite_air_pourcentage'].state <= 60  )
                return 'var(--img-cell-red)'
              return 'var(--img-cell-off)'
            ]]] 
      icon:
        - color: |
            [[[
              if (states['sensor.qualite_air_pourcentage'].state >= 98.8  )
                return 'var(--icon-green)'
              if (states['sensor.qualite_air_pourcentage'].state < 98.8 && states['sensor.qualite_air_pourcentage'].state > 96 )
                return 'var(--icon-blue)'
              if (states['sensor.qualite_air_pourcentage'].state <= 96 && states['sensor.qualite_air_pourcentage'].state > 88 )
                return 'var(--icon-yellow)'
              if (states['sensor.qualite_air_pourcentage'].state <= 88 && states['sensor.qualite_air_pourcentage'].state > 60 )
                return 'var(--icon-orange)'
              if (states['sensor.qualite_air_pourcentage'].state <= 60  )
                return 'var(--icon-red)'
              return 'var(--icon-off)'
            ]]]   
  air_mini_card_state:
    styles:
      img_cell:
        - background-color: |
            [[[
              if (states['sensor.qualite_air_pourcentage'].state >= 98.8  )
                return 'var(--img-cell-off)'
              if (states['sensor.qualite_air_pourcentage'].state < 98.8 && states['sensor.qualite_air_pourcentage'].state > 96 )
                return 'var(--img-cell-off)'
              if (states['sensor.qualite_air_pourcentage'].state <= 96 && states['sensor.qualite_air_pourcentage'].state > 88 )
                return 'var(--img-cell-yellow)'
              if (states['sensor.qualite_air_pourcentage'].state <= 88 && states['sensor.qualite_air_pourcentage'].state > 60 )
                return 'var(--img-cell-orange)'
              if (states['sensor.qualite_air_pourcentage'].state <= 60  )
                return 'var(--img-cell-red)'
              return 'var(--img-cell-off)'
            ]]] 
      icon:
        - color: |
            [[[
              if (states['sensor.qualite_air_pourcentage'].state >= 98.8  )
                return 'var(--icon-off)'
              if (states['sensor.qualite_air_pourcentage'].state < 98.8 && states['sensor.qualite_air_pourcentage'].state > 96 )
                return 'var(--icon-off)'
              if (states['sensor.qualite_air_pourcentage'].state <= 96 && states['sensor.qualite_air_pourcentage'].state > 88 )
                return 'var(--icon-yellow)'
              if (states['sensor.qualite_air_pourcentage'].state <= 88 && states['sensor.qualite_air_pourcentage'].state > 60 )
                return 'var(--icon-orange)'
              if (states['sensor.qualite_air_pourcentage'].state <= 60  )
                return 'var(--icon-red)'
              return 'var(--icon-off)'
            ]]]              
  temperature_state:
    state:
      - value: 26.9
        operator: '>'
        icon: mdi:thermometer-chevron-up
        styles:
          icon:
            - color: var(--red)
          img_cell:
            - background-color: var(--img-cell-red)
          card:
            - background-color: var(--card-red)
      - value: 24.9
        operator: '>'
        icon: mdi:thermometer-chevron-up
        styles:
          icon:
            - color: var(--icon-yellow)
          img_cell:
            - background-color: var(--img-cell-yellow)
          card:
            - background-color: var(--card-yellow)
      - value: 18.2
        operator: <
        icon: mdi:thermometer-chevron-down
        styles:
          icon:
            - color: var(--icon-blue)
          img_cell:
            - background-color: var(--img-cell-blue)
          card:
            - background-color: var(--card-blue)
      - operator: template
        value: >-
          [[[ return entity.state == "unavailable"   || entity.state ==
          "unknown" ]]]
        styles:
          card:
            - border-color: rgba(255, 0, 0, 0.5)
            - background-color: var(--card-red)
          img_cell:
            - background-color: var(--img-cell-red)
          icon:
            - color: var(--icon-red)
            - animation: blink 0.8s ease infinite
          name:
            - color: var(--icon-red)
  temperature_mini_card_state:
    state:
      - value: 26.9
        operator: '>'
        styles:
          state:
            - color: var(--red)
          icon:
            - color: var(--icon-red)
          img_cell:
            - background-color: var(--img-cell-red)
      - value: 24.9
        operator: '>'
        styles:
          state:
            - color: var(--orange)
          icon:
            - color: var(--icon-orange)
          img_cell:
            - background-color: var(--img-cell-orange)
      - value: 18.2
        operator: <
        styles:
          state:
            - color: var(--blue)
          icon:
            - color: var(--icon-blue)
          img_cell:
            - background-color: var(--img-cell-blue)
      - operator: template
        value: >-
          [[[ return entity.state == "unavailable"   || entity.state ==
          "unknown" ]]]
        styles:
          img_cell:
            - background-color: var(--img-cell-red)
          icon:
            - color: var(--icon-red)
            - animation: blink 0.8s ease infinite
  outside_temperature_state:
    state:
      - value: 28
        operator: '>'
        styles:
          icon:
            - color: var(--red)
          img_cell:
            - background-color: var(--img-cell-red)
          state:
            - font-weight: bold
      - value: 12
        operator: <
        styles:
          icon:
            - color: var(--icon-blue)
          img_cell:
            - background-color: var(--img-cell-blue)
          state:
            - font-weight: bold
      - operator: template
        value: >-
          [[[ return entity.state == "unavailable"   || entity.state ==
          "unknown" ]]]
        styles:
          img_cell:
            - border-color: rgba(255, 0, 0, 0.5)
            - background-color: var(--card-red)
          icon:
            - color: var(--icon-red)
            - animation: blink 0.8s ease infinite
          name:
            - color: var(--icon-red)
  humidity_state:
    state:
      - value: 70
        operator: '>'
        styles:
          icon:
            - color: var(--red)
          img_cell:
            - background-color: var(--img-cell-red)
          card:
            - background-color: var(--card-red)
      - value: 40
        operator: <
        styles:
          icon:
            - color: var(--icon-blue)
          img_cell:
            - background-color: var(--img-cell-blue)
          card:
            - background-color: var(--card-blue)
      - operator: template
        value: >-
          [[[ return entity.state == "unavailable"  || entity.state == "jammed"
          || entity.state == "unknown" ]]]
        styles:
          card:
            - border-color: rgba(255, 0, 0, 0.5)
            - background-color: var(--card-red)
          img_cell:
            - background-color: var(--img-cell-red)
          icon:
            - color: var(--icon-red)
            - animation: blink 0.8s ease infinite
          name:
            - color: var(--icon-red)
  humidity_mini_card_state:
    state:
      - value: 70
        operator: '>'
        styles:
          state:
            - color: var(--red)
          icon:
            - color: var(--icon-red)
          img_cell:
            - background-color: var(--img-cell-red)
      - value: 40
        operator: <
        styles:
          state:
            - color: var(--blue)
          icon:
            - color: var(--icon-blue)
          img_cell:
            - background-color: var(--img-cell-blue)
      - operator: template
        value: >-
          [[[ return entity.state == "unavailable"  || entity.state == "jammed"
          || entity.state == "unknown" ]]]
        styles:
          img_cell:
            - background-color: var(--img-cell-red)
          icon:
            - color: var(--icon-red)
            - animation: blink 0.8s ease infinite
          state:
            - color: var(--red)
  brightness_state:
    state:
      - value: 100
        operator: '>'
        styles:
          icon:
            - color: var(--red)
          img_cell:
            - background-color: var(--img-cell-red)
          card:
            - background-color: var(--card-red)
      - value: 30
        operator: <
        icon: mdi:brightness-4
        styles:
          icon:
            - color: var(--icon-blue)
          img_cell:
            - background-color: var(--img-cell-blue)
          card:
            - background-color: var(--card-blue)
      - operator: template
        value: >-
          [[[ return entity.state == "unavailable"  || entity.state == "jammed"
          || entity.state == "unknown" ]]]
        styles:
          card:
            - border-color: rgba(255, 0, 0, 0.5)
            - background-color: var(--card-red)
          img_cell:
            - background-color: var(--img-cell-red)
          icon:
            - color: var(--icon-red)
            - animation: blink 0.8s ease infinite
          name:
            - color: var(--icon-red)
  sub_button_state:
    state:
      - operator: template
        value: >-
          [[[ return entity.state == "on" || entity.state > 0 || entity.state ==
          "home" || entity.state == "heat" || entity.state == "Run" ||
          entity.state == "armed_away" || entity.state == "playing" ||
          entity.state == "veille" || entity.state == "Wi-Fi"  || entity.state
          == "Mouvement" || entity.state == "Marche" || entity.state == "Vélo" 
          || entity.state == "Course" ]]]
        styles:
          icon:
            - color: var(--icon-blue)
          card:
            - background-color: var(--card-blue)
      - operator: template
        value: >-
          [[[ return entity.state == "Charging"  || entity.state == "unlocking" 
          || entity.state == "locking"   ]]]
        styles:
          icon:
            - color: var(--icon-yellow)
          card:
            - background-color: var(--card-yellow)
      - operator: template
        value: '[[[ return entity.state == "Full"    ]]]'
        styles:
          icon:
            - color: var(--icon-green)
          card:
            - background-color: var(--card-green)
      - operator: template
        value: >-
          [[[ return entity.state == "Charged"  || entity.state == "unlocked" 
          || entity.state == "Conduite" || entity.state == "Cellular"  ]]]
        styles:
          icon:
            - color: var(--icon-red)
          card:
            - background-color: var(--card-red)
      - operator: template
        value: >-
          [[[ return entity.state == "unavailable"  || entity.state == "jammed"
          || entity.state == "unknown" ]]]
        styles:
          card:
            - background-color: var(--card-red)
          icon:
            - color: var(--icon-red)
            - animation: blink 0.8s ease infinite
          name:
            - color: var(--icon-red)
    tap_action:
      action: more-info
    double_tap_action:
      action: more-info
  mini_card_state:
    state:
      - operator: template
        value: >-
          [[[ return entity.state == "on" || entity.state == "home" ||
          entity.state == "cleaning" || entity.state == "returning"  ||
          entity.state == "playing"  || entity.state == "Wi-Fi" || entity.state
          > 0 || entity.state == "Mouvement" || entity.state == "Marche" ||
          entity.state == "Vélo"  || entity.state == "Course"]]]
        styles:
          img_cell:
            - background-color: var(--card-blue)
          icon:
            - color: var(--icon-blue)
      - operator: template
        value: >-
          [[[ return entity.state == "Cellular"  || entity.state == "Conduite"
          || entity.state == "not_home" ]]]
        styles:
          img_cell:
            - background-color: var(--card-red)
          icon:
            - color: var(--icon-red)
      - operator: template
        value: >-
          [[[ return entity.state == "idle" || entity.state == "paused" ||
          entity.state == "arming" ]]]
        styles:
          img_cell:
            - background-color: var(--card-yellow)
          icon:
            - color: var(--icon-yellow)
      - operator: template
        value: >-
          [[[ return entity.state == "unavailable"  || entity.state == "jammed"
          || entity.state == "unknown" ]]]
        styles:
          img_cell:
            - background-color: var(--card-red)
          icon:
            - color: var(--icon-red)
            - animation: blink 0.8s ease infinite
          name:
            - color: var(--icon-red)
  card_state:
    state:
      - operator: template
        value: >-
          [[[ return entity.state == "on" || entity.state == "home" ||
          entity.state == "cleaning" || entity.state == "returning"  ||
          entity.state == "playing"  || entity.state == "Wi-Fi" || entity.state
          == "Mouvement" || entity.state == "Marche" || entity.state == "Vélo" 
          || entity.state == "Course"]]]
        styles:
          card:
            - background-color: var(--card-blue)
          img_cell:
            - background-color: var(--img-cell-blue)
          icon:
            - color: var(--icon-blue)
      - operator: template
        value: >-
          [[[ return entity.state == "Cellulaire" || entity.state == 0 ||
          entity.state == "Conduite" ]]]
        styles:
          card:
            - background-color: var(--card-red)
          img_cell:
            - background-color: var(--img-cell-red)
          icon:
            - color: var(--icon-red)
      - operator: template
        value: '[[[ return entity.state > 0  ]]]'
        styles:
          card:
            - background-color: var(--card-green)
          img_cell:
            - background-color: var(--img-cell-green)
          icon:
            - color: var(--icon-green)
      - operator: template
        value: >-
          [[[ return entity.state == "idle" || entity.state == "paused" ||
          entity.state == "veille" ]]]
        styles:
          card:
            - background-color: var(--card-yellow)
          img_cell:
            - background-color: var(--img-cell-yellow)
          icon:
            - color: var(--icon-yellow)
      - operator: template
        value: >-
          [[[ return entity.state == "unavailable"  || entity.state == "jammed"
          || entity.state == "unknown" ]]]
        styles:
          card:
            - border-color: rgba(255, 0, 0, 0.5)
            - background-color: var(--card-red)
          img_cell:
            - background-color: var(--img-cell-red)
          icon:
            - color: var(--icon-red)
            - animation: blink 0.8s ease infinite
          name:
            - color: var(--icon-red)
  security_card_state:
    state:
      - operator: template
        value: >-
          [[[ entity.state == "arming"  || entity.state == "unlocking" ||
          entity.state == "locking" ]]]
        styles:
          card:
            - background-color: var(--card-yellow)
          img_cell:
            - background-color: var(--img-cell-yellow)
          icon:
            - color: var(--icon-yellow)
      - operator: template
        value: >-
          [[[ return entity.state == "on" || entity.state == "home" ||
          entity.state == "armed_away" || entity.state == "armed_home" || 
          entity.state == "armed_night" || entity.state == "unlocked" ]]]
        styles:
          card:
            - background-color: var(--card-red)
          img_cell:
            - background-color: var(--img-cell-red)
          icon:
            - color: var(--icon-red)
      - operator: template
        value: '[[[ return entity.state == "pending" ]]]'
        styles:
          card:
            - background-color: var(--card-orange)
          img_cell:
            - background-color: var(--img-cell-orange)
          icon:
            - color: var(--icon-orange)
      - operator: template
        value: '[[[ return entity.state == "triggered" ]]]'
        styles:
          card:
            - background-color: var(--card-dark-red)
          img_cell:
            - background-color: var(--img-cell-dark-red)
          icon:
            - color: var(--icon-red)
      - operator: template
        value: >-
          [[[ return entity.state == "unavailable"  || entity.state == "jammed"
          || entity.state == "unknown" ]]]
        styles:
          card:
            - border-color: rgba(255, 0, 0, 0.5)
            - background-color: var(--card-red)
          img_cell:
            - background-color: var(--img-cell-red)
          icon:
            - color: var(--icon-red)
            - animation: blink 0.8s ease infinite
          name:
            - color: var(--icon-red)
  security_mini_card_state:
    state:
      - operator: template
        value: >-
          [[[ return entity.state == "arming"  || entity.state == "unlocking" ||
          entity.state == "locking" ]]]
        styles:
          img_cell:
            - background-color: var(--img-cell-green)
          icon:
            - color: var(--icon-green)
            - animation: blink 1s ease infinite
      - operator: template
        value: >-
          [[[ return entity.state == "on" || entity.state == "home" ||
          entity.state == "armed_away" || entity.state == "armed_home" || 
          entity.state == "armed_night" || entity.state == "unlocked" ]]]
        styles:
          img_cell:
            - background-color: var(--img-cell-red)
          icon:
            - color: var(--icon-red)
      - operator: template
        value: '[[[ return entity.state == "triggered" ]]]'
        styles:
          img_cell:
            - background-color: var(--img-cell-red)
          icon:
            - color: var(--icon-red)
            - animation: blink 0.8s ease infinite
      - operator: template
        value: '[[[ return entity.state == "pending" ]]]'
        styles:
          img_cell:
            - background-color: var(--img-cell-orange)
          icon:
            - color: var(--icon-orange)
            - animation: blink 1s ease infinite
      - operator: template
        value: >-
          [[[ return entity.state == "unavailable"  || entity.state == "jammed"
          || entity.state == "unknown" || entity.state =="Sur batterie" ]]]
        styles:
          img_cell:
            - background-color: var(--img-cell-red)
          icon:
            - color: var(--icon-red)
            - animation: blink 0.8s ease infinite
          name:
            - color: var(--icon-red)
  person_gps_button:
    show_icon: false
    show_label: true
    template:
      - police
    styles:
      name:
        - color: var(--text-off)
        - font-size: 11px
      label:
        - font-weight: 500
        - font-size: 12px
        - margin-top: '-3px'
      img_cell:
        - justify-self: end
        - background: none
      card:
        - padding: 0px
        - border-radius: 10px
  person_complete_card:
    entity: '[[[  return variables.entity ]]]'
    template:
      - police
    icon: |
      [[[ 
        var f_n_zone = states[entity.entity_id].state;

        // Supprime les accents
        var b="áàâäãåçéèêëíïîìñóòôöõúùûüýÁÀÂÄÃÅÇÉÈÊËÍÏÎÌÑÓÒÔÖÕÚÙÛÜÝ",
        c="aaaaaaceeeeiiiinooooouuuuyAAAAAACEEEEIIIINOOOOOUUUUY",
        d="";
        for(var i = 0, j = f_n_zone.length; i < j; i++) {
          var e = f_n_zone.substr(i, 1);
          d += (b.indexOf(e) !== -1) ? c.substr(b.indexOf(e), 1) : e;
        }
        // Remplace " - " par "_"
        var id_zone = d.replaceAll(' - ', '_');
        // Remplace les espaces restants par "_"
        id_zone = id_zone.replaceAll(' ', '_');
        // Transforme le texte en minuscule 
        id_zone = id_zone.toLowerCase();

        if(states["zone." + id_zone] == undefined){
          return "mdi:home-export-outline"; 
        } else {
          return states["zone." + id_zone].attributes.icon; 
        }
      ]]]
    show_entity_picture: false
    show_name: false
    tap_action:
      action: more-info
    styles:
      grid:
        - grid-template-areas: '"info" "sensor" "gps" "map" "device"'
        - grid-template-columns: 1fr
        - grid-template-rows: min-content min-content 70px
      card:
        - padding: 10px
        - position: relative
        - '--mdc-ripple-press-opacity': 0
        - background-color: var(--card-background-color)
        - box-shadow: none
      img_cell:
        - position: absolute
      icon:
        - width: 30%
        - top: '-35%'
        - opacity: 0.4
        - filter: blur(7px)
        - color: |
            [[[
              if (states[entity.entity_id].state == 'home')
                return "var(--ocean-blue)"
              if (states[entity.entity_id].state == 'not_home')
                return "var(--icon-orange)" 
              return "var(--icon-green)"                 
            ]]] 
      custom_fields:
        battery:
          - position: absolute
          - width: 40%
          - left: 72%
          - top: '-01%'
          - z-index: 1
    custom_fields:
      battery:
        card:
          type: custom:hatc-gauge-card
          card_mod:
            style: |
              ha-card { 
               background: none;
               box-shadow: none;
               }             
          entity: '[[[ return variables.battery_level ]]]'
          card:
            height: 35px
          title:
            name: false
            icon: false
          gauge:
            icon: false
            font-size: 12px
            text-color: severity
            max_value: 100
            friendly_name: false
            unit_of_measurement: false
            severity:
              - color: var(--text-off)
              - color: var(--red)
                from: 0
                to: 30
              - color: var(--orange)
                from: 31
                to: 50
              - color: var(--text-off)
                from: 51
                to: 100
      info:
        card:
          type: custom:button-card
          entity: '[[[  return variables.entity ]]]'
          show_entity_picture: true
          entity_picture: null
          name: |
            [[[ return entity.attributes.friendly_name 
            ]]]
          label: '[[[  return variables.state ]]]'
          show_label: true
          show_icon: true
          custom_fields:
            info: '[[[ return variables.time ]]]'
          styles:
            grid:
              - grid-template-areas: '"i gutter n" "i gutter l" "i gutter info"'
              - grid-template-columns: min-content 10px 1fr
              - grid-template-rows: min-content auto
            card:
              - background: none
              - box-shadow: none
              - border-radius: 0
              - padding: 0px 35px 25px 8px
              - '--mdc-ripple-press-opacity': 0
            img_cell:
              - width: 65px
              - height: 65px
              - border-radius: 15px
            icon:
              - width: 100%
              - height: 100%
              - color: var(--dark-blue)
            name:
              - font-size: 13px
              - opacity: 1
              - font-weight: 500
              - color: var(--text-on)
              - width: 100%
              - text-align: left
              - align-self: end
              - filter: drop-shadow(1px 1px 1px rgba(0,0,0,0.9))
            label:
              - white-space: normal
              - font-size: 13px
              - font-weight: 600
              - color: |
                  [[[
                    if (states[entity.entity_id].state == 'home')
                      return "var(--ocean-blue)"
                    if (states[entity.entity_id].state == 'not_home')
                      return "var(--text-on)" 
                    return "var(--icon-green)"                 
                  ]]] 
              - opacity: 1
              - width: 100%
              - text-align: left
              - align-self: center
              - filter: drop-shadow(1px 1px 1px rgba(0,0,0,0.9))
            custom_fields:
              info:
                - white-space: normal
                - font-weight: 500
                - color: var(--text-on)
                - font-size: 11px
                - opacity: 1
                - font-style: italic
                - width: 90%
                - text-align: left
                - align-self: start
                - filter: drop-shadow(1px 1px 1px rgba(0,0,0,0.4))
                - max-height: 35px
      sensor:
        card:
          type: horizontal-stack
          cards:
            - type: custom:button-card
              tap_action:
                action: more-info
                entity: '[[[  return variables.gps ]]]'
              entity: '[[[  return variables.entity ]]]'
              template:
                - mini_card
                - mini_card_state
              show_label: false
              icon: |
                [[[ 
                  var f_n_zone = states[entity.entity_id].state;

                  // Supprime les accents
                  var b="áàâäãåçéèêëíïîìñóòôöõúùûüýÁÀÂÄÃÅÇÉÈÊËÍÏÎÌÑÓÒÔÖÕÚÙÛÜÝ",
                  c="aaaaaaceeeeiiiinooooouuuuyAAAAAACEEEEIIIINOOOOOUUUUY",
                  d="";
                  for(var i = 0, j = f_n_zone.length; i < j; i++) {
                    var e = f_n_zone.substr(i, 1);
                    d += (b.indexOf(e) !== -1) ? c.substr(b.indexOf(e), 1) : e;
                  }
                  // Remplace " - " par "_"
                  var id_zone = d.replaceAll(' - ', '_');
                  // Remplace les espaces restants par "_"
                  id_zone = id_zone.replaceAll(' ', '_');
                  // Transforme le texte en minuscule 
                  id_zone = id_zone.toLowerCase();

                  if(states["zone." + id_zone] == undefined){
                    return "mdi:home-export-outline"; 
                  } else {
                    return states["zone." + id_zone].attributes.icon; 
                  }
                ]]]
              styles:
                icon:
                  - color: |
                      [[[
                        if (states[entity.entity_id].state == 'home')
                          return "var(--ocean-blue)"
                        if (states[entity.entity_id].state == 'not_home')
                          return "var(--icon-orange)" 
                        return "var(--icon-green)"                 
                      ]]] 
                img_cell:
                  - background-color: |
                      [[[
                        if (states[entity.entity_id].state == 'home')
                          return "var(--img-cell-blue)"
                        if (states[entity.entity_id].state == 'not_home')
                          return "var(--img-cell-orange)" 
                        return "var(--img-cell-green)"                 
                      ]]]                       
            - type: custom:button-card
              template:
                - mini_card
                - mini_card_state
              show_label: false
              entity: '[[[ return variables.battery_state]]]'
              icon: mdi:battery-charging-medium
              state:
                - value: charging
                  styles:
                    icon:
                      - color: var(--yellow)
                    img_cell:
                      - background-color: var(--img-cell-yellow)
                - value: discharging
                  styles:
                    icon:
                      - color: var(--orange)
                    img_cell:
                      - background-color: var(--img-cell-orange)
                - value: full
                  styles:
                    icon:
                      - color: var(--green)
                    img_cell:
                      - background-color: var(--img-cell-green)
            - type: custom:button-card
              template:
                - mini_card
                - mini_card_state
              show_label: false
              entity: '[[[ return variables.phone_tracker ]]]'
              icon: mdi:cellphone
      gps:
        card:
          type: custom:button-card
          template:
            - person_gps_button
          label: '[[[  return  variables.proximity + " - " + variables.trajet  ]]]'
          name: '[[[  return "Trajet vers le " + variables.destination  ]]]'
          tap_action:
            action: more-info
          styles:
            card:
              - background-color: rgba(var(--black-rgb),var(--tint2))
      map:
        card:
          type: map
          entities:
            - entity: '[[[  return variables.entity ]]]'
          dark_mode: true
          aspect_ratio: '1.5'
          hours_to_show: 24
  person_card:
    show_entity_picture: true
    show_state: false
    template:
      - base
      - base_high
      - person_state
    styles:
      entity_picture:
        - width: 100%
      custom_fields:
        notification:
          - border-radius: 100%
          - position: absolute
          - left: 32px
          - top: 4%
          - width: 17.5px
          - height: 17.5px
          - line-height: 14px
          - background-color: |
              [[[
                if (entity.state == 'home') 
                  return "var(--img-cell-blue)"
                if (entity.state == 'not_home') 
                  return "var(--img-cell-orange)"
                return "var(--img-cell-green)"
              ]]]
    custom_fields:
      notification: |
        [[[
              var f_n_zone = states[entity.entity_id].state;

              // supprime les accents
              var b="áàâäãåçéèêëíïîìñóòôöõúùûüýÁÀÂÄÃÅÇÉÈÊËÍÏÎÌÑÓÒÔÖÕÚÙÛÜÝ",
              c="aaaaaaceeeeiiiinooooouuuuyAAAAAACEEEEIIIINOOOOOUUUUY",
              d="";
              for(var i = 0, j = f_n_zone.length; i < j; i++) {
                var e = f_n_zone.substr(i, 1);
                d += (b.indexOf(e) !== -1) ? c.substr(b.indexOf(e), 1) : e;
              }
              // remplace " - " par "_"
              var id_zone = d.replaceAll(' - ', '_');
              // remplace les espaces restants par "_"
              id_zone = id_zone.replaceAll(' ', '_');
              // transforme le texte en minuscule 
              id_zone = id_zone.toLowerCase();

              if(states["zone." + id_zone] == undefined){
                return `<ha-icon icon="mdi:home-export-outline" style="width: 13px; height: 13px; color: white;"></ha-icon>`;
              }else{
                return `<ha-icon icon="${states["zone." + id_zone].attributes.icon}" style="width: 13px; height: 13px; color: white;"></ha-icon>`;
              }
            ]]]
    tap_action:
      action: navigate
      navigation_path: /lovelace/Personnes
    double_tap_action:
      action: more-info
  person_card_var_activity:
    icon: |
      [[[
        if (variables.var_activity == 'Mouvement')
          return "mdi:human-handsdown"
        if (variables.var_activity == 'Stationnaire')
          return "mdi:human-male"
        if (variables.var_activity == 'Conduite')
          return "mdi:car"
        if (variables.var_activity == 'Marche')
          return "mdi:walk"
        if (variables.var_activity == 'Course')
          return "mdi:run-fast"
        if (variables.var_activity == 'Vélo')
          return "mdi:bike"
        return ""
      ]]]
  person_card_var_device:
    styles:
      card:
        - border: |
            [[[
              if (variables.var_state  == "Charging")
                return " 0.5px solid var(--yellow) " 
              if (variables.var_state  == "Full" || variables.var_state  == "Charged")
                return " 0.5px dashed var(--red) "                
              if (variables.var_level  < 30)
                return " 0.5px solid var(--red) "                        
              return ""
            ]]] 
    tap_action:
      action: navigate
      navigation_path: /lovelace/batteries
  person_card_jeremy:
    entity: person.jeremy
    template:
      - person_card
    label: |
      [[[return states["sensor.jeremy_gps_simple"].state]]]
    styles:
      label:
        - white-space: normal
    custom_fields:
      jauge-cercle:
        card:
          type: custom:hatc-gauge-card
          entity: sensor.pixel_6_jh_battery_level
          card:
            height: 30px
          title:
            name: false
            icon: false
          gauge:
            icon: false
            font-size: 11px
            text-color: severity
            max_value: 100
            friendly_name: false
            unit_of_measurement: false
            severity:
              - color: var(--text-off)
              - color: var(--blue)
                from: 99
                to: 51
              - color: var(--yellow)
                from: 31
                to: 50
              - color: var(--red)
                from: 0
                to: 30
      bouton:
        card:
          type: horizontal-stack
          cards:
            - type: custom:button-card
              entity: device_tracker.pixel_6_jh
              template:
                - sub_button
                - sub_button_state
                - person_card_var_device
              variables:
                var_state: |
                  [[[ 
                    return states['sensor.pixel_6_jh_battery_state'].state 
                  ]]]
                var_level: |
                  [[[ 
                    return states['sensor.pixel_6_jh_battery_level'].state 
                  ]]]
              icon: mdi:cellphone
            - type: custom:button-card
              entity: sensor.pixel_6_jh_network_type
              icon: |
                [[[
                  if (states['sensor.pixel_6_jh_wifi_connection'].state == '<not connected>')
                    return "mdi:signal-cellular-3";
                  return "mdi:wifi";
                ]]]  
              template:
                - sub_button
                - sub_button_state
            - type: custom:button-card
              entity: sensor.jeremy_activite
              variables:
                var_activity: |
                  [[[ 
                    return states['sensor.jeremy_activite'].state 
                  ]]]
              template:
                - sub_button
                - sub_button_state
                - person_card_var_activity
            - type: custom:button-card
              entity: device_tracker.acer_iconia_tab_a210
              template:
                - sub_button
                - sub_button_state
                - person_card_var_device
              variables:
                var_ping: |
                  [[[ 
                    return states['device_tracker.acer_iconia_tab_a210'].state 
                  ]]]
              icon: mdi:tablet
            - type: custom:button-card
              entity: device_tracker.jeremy_pc_gamer_ping
              variables:
                var_ping: |
                  [[[ 
                    return states['device_tracker.jeremy_pc_gamer_ping'].state 
                  ]]]
              icon: mdi:desktop-tower
              template:
                - sub_button
                - sub_button_state
                - person_card_var_device
  person_card_emma:
    entity: person.emma
    label: |
      [[[return states["sensor.emma_gps_simple"].state]]]
    template:
      - person_card
    styles:
      label:
        - white-space: normal
    custom_fields:
      jauge-cercle:
        card:
          type: custom:hatc-gauge-card
          entity: sensor.galaxy_s21_fe_battery_level
          card:
            height: 30px
          title:
            name: false
            icon: false
          gauge:
            icon: false
            font-size: 11px
            text-color: severity
            max_value: 100
            friendly_name: false
            unit_of_measurement: false
            severity:
              - color: var(--text-off)
              - color: var(--blue)
                from: 99
                to: 51
              - color: var(--yellow)
                from: 31
                to: 50
              - color: var(--red)
                from: 0
                to: 30
      bouton:
        card:
          type: horizontal-stack
          cards:
            - type: custom:button-card
              entity: device_tracker.galaxy_s21_fe
              template:
                - sub_button
                - sub_button_state
                - person_card_var_device
              variables:
                var_state: |
                  [[[ 
                    return states['sensor.galaxy_s21_fe_battery_state'].state 
                  ]]]
                var_level: |
                  [[[ 
                    return states['sensor.galaxy_s21_fe_battery_level'].state 
                  ]]]
              icon: mdi:cellphone
            - type: custom:button-card
              entity: sensor.galaxy_s21_fe_network_type
              icon: |
                [[[
                  if (states['sensor.galaxy_s21_fe_wifi_connection'].state == '<not connected>')
                    return "mdi:signal-cellular-3";
                  return "mdi:wifi";
                ]]]  
              template:
                - sub_button
                - sub_button_state
            - type: custom:button-card
              entity: sensor.emma_activite
              variables:
                var_activity: |
                  [[[ 
                    return states['sensor.emma_activite'].state 
                  ]]]
              template:
                - sub_button
                - sub_button_state
                - person_card_var_activity
            - type: custom:button-card
              entity: device_tracker.emma_pc_ping
              variables:
                var_ping: |
                  [[[ 
                    return states['device_tracker.emma_pc_ping'].state 
                  ]]]
              icon: mdi:laptop
              template:
                - sub_button
                - sub_button_state
                - person_card_var_device
  printer_card:
    type: custom:button-card
    entity: sensor.hp_deskjet_3630_series
    name: Imprimante
    icon: mdi:printer
    label: |
      [[[
        if (states['sensor.hp_deskjet_3630_series'].state == "unavailable")
          return "Éteint"
        if (states['sensor.hp_deskjet_3630_series'].state == "printing")
          return "Impression"
        if (states['sensor.hp_deskjet_3630_series'].state == "stopped")
          return "Arrêt"
        if (states['sensor.hp_deskjet_3630_series'].state == "idle")
          return "Veille"
        return states['sensor.hp_deskjet_3630_series'].state
      ]]]
    template:
      - base
      - base_high
      - card_state
    custom_fields:
      printer_bar_black:
        card:
          type: conditional
          conditions:
            - entity: sensor.hp_deskjet_3630_series
              state_not: unavailable
          card:
            type: custom:bar-card
            name: Noir
            entities:
              - entity: sensor.hp_deskjet_3630_series_black_ink
                color: rgb(29, 28, 26)
            entity_row: true
            direction: up
            unit_of_measurement: []
            max: 100
            positions:
              value: inside
              name: 'off'
              indicator: 'off'
            height: 50px
            width: 20%
            icon: 'off'
            card_mod:
              style: |-
                bar-card-value {
                  margin-left: 40px;
                  font-size: 12px;
                  font-weight: bold;
                  color: var(--text-off);
                }
      printer_bar_color:
        card:
          type: conditional
          conditions:
            - entity: sensor.hp_deskjet_3630_series
              state_not: unavailable
          card:
            type: custom:bar-card
            name: Couleur
            entities:
              - entity: sensor.hp_deskjet_3630_series_tri_color_ink
                color: rgb(0,206,209)
            entity_row: true
            direction: up
            unit_of_measurement: []
            max: 100
            positions:
              value: inside
              name: 'off'
              indicator: 'off'
            height: 50px
            width: 20%
            icon: 'off'
            card_mod:
              style: |-
                bar-card-value {
                  margin-left: 40px;
                  font-size: 12px;
                  font-weight: bold;
                  color: var(--text-off);
                  filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.7));
                }
    styles:
      custom_fields:
        printer_bar_black:
          - opacity: 100%
          - position: absolute
          - top: 82%
          - left: 6%
          - width: calc(100% + 0px)
          - transform: translate(-50%, calc(-50% + 10px))
          - z-index: 1
          - '--ha-card-border-width': 0px
        printer_bar_color:
          - opacity: 100%
          - position: absolute
          - top: 82%
          - left: 28%
          - width: calc(100% + 0px)
          - transform: translate(-50%, calc(-50% + 10px))
          - z-index: 1
          - '--ha-card-border-width': 0px
    tap_action:
      action: more-info
    double_tap_action:
      action: toggle
  system_card:
    aspect_ratio: 1/1
    show_state: false
    styles:
      custom_fields:
        graph:
          - position: absolute
          - opacity: 70%
          - top: 73%
          - left: 50%
          - width: calc(100% + 15px)
          - transform: translate(-50%, calc(-50% + 10px))
          - '--ha-card-border-width': 0px
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)
          - '--ha-card-box-shadow': none
        graph_bar:
          - position: absolute
          - opacity: 70%
          - top: 81%
          - left: 51%
          - width: calc(100% + 35px)
          - transform: translate(-50%, calc(-50% + 10px))
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)
          - '--ha-card-box-shadow': none
          - '--ha-card-border-width': 0px
        info:
          - top: 33%
          - z-index: 2
          - position: absolute
          - left: 7%
          - width: 100%
          - '--ha-card-border-width': 0px
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)
          - '--ha-card-box-shadow': none
  system_card_info:
    template:
      - badge_auto_card
      - no_style
    show_state: false
    show_label: true
    styles:
      icon:
        - width: 14px
      label:
        - font-size: 12px
        - color: var(--text-off)
        - align-self: end
      img_cell:
        - background-color: none
      card:
        - padding: 0
        - height: 17px
        - border-radius: 0
        - margin-bottom: '-5px'
  system_card_info_temp_state:
    state:
      - value: 19
        operator: <
        styles:
          icon:
            - color: var(--blue)
      - value: 27
        operator: '>'
        styles:
          icon:
            - color: var(--red)
      - value: 25
        operator: '>'
        styles:
          icon:
            - color: var(--orange)
  system_card_info_state:
    state:
      - value: 80
        operator: '>'
        styles:
          icon:
            - color: var(--red)
      - value: 70
        operator: '>'
        styles:
          icon:
            - color: var(--orange)
  state_thermostat_hors_gel:
    state:
      - value: Frost Guard
        styles:
          img_cell:
            - background-color: var(--red)
          icon:
            - color: var(--red)
            - transition: 1s ease
      - value: 'off'
        color: var(--text_off)
        styles:
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: var(--icon_off)
            - transition: 1s ease
  state_thermostat_absent:
    state:
      - value: away
        styles:
          img_cell:
            - background-color: var(---red)
          icon:
            - color: var(--red)
            - transition: 1s ease
      - value: 'off'
        color: var(--text_off)
        styles:
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: var(--icon_off)
            - transition: 1s ease
  state_thermostat_auto:
    state:
      - value: Schedule
        styles:
          img_cell:
            - background-color: var(--blue)
          icon:
            - color: var(--icon-blue)
            - transition: 1s ease
      - value: 'off'
        color: var(--text_off)
        styles:
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: var(--icon_off)
            - transition: 1s ease
  state_thermostat_on_off:
    state:
      - value: auto
        styles:
          img_cell:
            - background-color: var(--img-cell-blue)
          icon:
            - color: var(--icon-blue)
            - transition: 1s ease
      - value: 'off'
        styles:
          card:
            - animation: ball-scale 0.2s
            - background-color: var(--custom-card-color-red)
          img_cell:
            - background-color: var(--img-cell-red)
          icon:
            - color: var(--icon-red)
            - transition: 1s ease
  floorplan_mini_card:
    variables:
      var_name_temp: Temp
      var_name_hum: Hum
      var_name_lum: Lum
      var_name_mouv: Mouv
    show_icon: true
    show_name: false
    show_state: false
    show_label: true
    template:
      - police
      - no_style
    styles:
      img_cell:
        - border-radius: 50%
        - width: 25px
        - height: 25px
        - background-color: var(--img-cell-off)
        - color: var(--text-on)
      icon:
        - width: 60%
        - color: var(--icon-off)
      label:
        - font-weight: 500
        - font-size: 11px
        - opacity: 0.8
        - color: var(--text-on)
        - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
        - white-space: normal
      state:
        - font-weight: 500
        - font-size: 11px
        - opacity: 0.8
        - color: var(--text-on)
        - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
      name:
        - font-weight: 500
        - font-size: 11px
        - opacity: 1
        - color: var(--text-on)
        - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
      card:
        - border-radius: 0px
        - height: auto
      custom_fields:
        notification:
          - border-radius: 50%
          - position: absolute
          - left: 60%
          - top: 4%
          - height: 17px
          - width: 17px
          - font-size: 10px
          - line-height: 16px
          - font-weight: null
          - background-color: |
              [[[
                if (entity.state == "off" || entity.state == "locked" || entity.state == 0 )
                  return 'rgba(0,0,0,0)';
               return 'var(--notification) ';
              ]]]
          - color: |
              [[[
                if (entity.state == "off" || entity.state == "locked" || entity.state == 0)
                  return 'rgba(0,0,0,0)';
               return 'var(--text-on)';
              ]]]
    double_tap_action:
      action: toggle
    tap_action:
      action: more-info
  base_medium:
    aspect_ratio: 1.73/1
title: Appartement
views:
  - icon: mdi:home-outline
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        cards:
          - type: vertical-stack
            cards:
              - type: custom:button-card
                template:
                  - title_card
                styles:
                  card:
                    - margin-top: 3px
                  name:
                    - justify-self: middle
                name: |
                  [[[ return states['sensor.bonjour'].state ]]]
              - type: custom:vertical-stack-in-card
                cards:
                  - type: custom:button-card
                    template:
                      - around_card
                      - around_clear_card
                    styles:
                      card:
                        - padding: 0
                    custom_fields:
                      info:
                        card:
                          type: horizontal-stack
                          cards:
                            - type: custom:button-card
                              tap_action:
                                action: navigate
                                navigation_path: /lovelace/Calendrier
                              label: >
                                [[[return states['sensor.date_jour'].state + "
                                "+states['sensor.date_numero'].state + " " +
                                states['sensor.date_mois_court'].state ]]] 
                              template:
                                - badge_card
                                - no_style
                              show_icon: false
                              styles:
                                card:
                                  - padding: 0px 06px
                                label:
                                  - margin-top: 6px
                            - type: custom:button-card
                              tap_action:
                                action: navigate
                                navigation_path: /lovelace/air
                              entity: sensor.qualite_air_pourcentage
                              label: >
                                [[[return
                                (states['sensor.qualite_air_pourcentage'].state*1).toFixed(1)
                                + " %" ]]] 
                              icon: mdi:blur
                              template:
                                - badge_auto_card
                                - no_style
                                - air_mini_card_state
                            - type: custom:button-card
                              tap_action:
                                action: navigate
                                navigation_path: /lovelace/Temp
                              entity: sensor.temp_appartement
                              label: >
                                [[[return
                                (states['sensor.temp_appartement'].state*1).toFixed(1)
                                + " °C" ]]] 
                              icon: mdi:home-thermometer
                              template:
                                - badge_auto_card
                                - no_style
                                - temperature_mini_card_state
                  - type: custom:button-card
                    template:
                      - around_card
                      - around_clear_card
                    styles:
                      card:
                        - padding: 0
                    custom_fields:
                      info:
                        card:
                          type: horizontal-stack
                          cards:
                            - type: custom:button-card
                              tap_action:
                                action: navigate
                                navigation_path: /lovelace/Calendrier
                              label: |
                                [[[return states['sensor.time'].state  ]]]
                              template:
                                - badge_card
                                - no_style
                              show_icon: false
                              styles:
                                card:
                                  - line-height: 20px
                                label:
                                  - font-size: 20px
                                  - font-weight: 600
                            - type: custom:button-card
                              tap_action:
                                action: navigate
                                navigation_path: /lovelace/Calendrier
                              entity: weather.TA_VILLE
                              label: >
                                [[[return
                                states['sensor.weather_temperature'].state + "°
                                "
                                  +states['sensor.weather_conditions'].state]]]
                              template:
                                - badge_auto_card
                                - no_style
                                - weather_icon
                              show_entity_picture: true
                              styles:
                                img_cell:
                                  - overflow: visible
                                  - margin-right: 10px
                                icon:
                                  - width: 35px
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: sensor.DEPARTEMENT_weather_alert
                        state_not: Vert
                      - condition: state
                        entity: sensor.DEPARTEMENT_weather_alert
                        state_not: unavailable
                    card:
                      type: custom:button-card
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/Calendrier
                      entity: sensor.DEPARTEMENT_weather_alert
                      icon: mdi:alert
                      show_icon: true
                      template:
                        - badge_card
                        - no_style
                      label: |
                        [[[
                          let alerts = states['sensor.DEPARTEMENT_weather_alert'].attributes;
                          let alertMessages = [];

                          for (const attribut of ['Vent violent', 'Orages', 'Inondation', 'Pluie-inondation', 'Neige-verglas', 'Canicule', 'Grand-froid', 'Avalanches', 'Vagues-submersion']) {
                            if (alerts[attribut] !== 'Vert' && alerts[attribut] !== undefined) {
                              alertMessages.push(`${attribut}`);
                            }
                          }

                          if (states['sensor.DEPARTEMENT_weather_alert'].state != 'Vert')
                          return alertMessages.join(' / ');
                        ]]]
                      styles:
                        label:
                          - color: |
                              [[[
                                if (states['sensor.DEPARTEMENT_weather_alert'].state == 'Vert')
                                  return 'lightgrey';
                                if (states['sensor.DEPARTEMENT_weather_alert'].state == 'Jaune')
                                  return 'var(--yellow)';  
                                if (states['sensor.DEPARTEMENT_weather_alert'].state == 'Orange')
                                  return 'var(--orange)';     
                                if (states['sensor.DEPARTEMENT_weather_alert'].state == 'Rouge')
                                  return 'var(--red)';               
                              ]]]
                card_mod:
                  style: |
                    ha-card { 
                      padding: 0px;
                      border-radius: 0px !important;
                      margin: 05px 10px 0px 10px ;
                      background: none;
                      border-color: none;
                      box-shadow: none;

                    }
              - type: custom:button-card
                template:
                  - around_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          tap_action:
                            action: navigate
                            navigation_path: /lovelace/Alarmes
                          entity: alarm_control_panel.alarmo
                          double_tap_action:
                            action: more-info
                          show_label: false
                          template:
                            - mini_card
                            - security_mini_card_state
                            - custom_state
                          icon: |
                            [[[
                              var entity = states['alarm_control_panel.alarmo'].state;
                              if (entity == "disarmed" )
                                return "mdi:shield-off";
                              if (entity == "armed_away" )
                                return "mdi:shield-lock";
                              if (entity  == "armed_home" )
                                return "mdi:shield-home";
                              if (entity  == "armed_night" )
                                return "mdi:shield-moon";
                              if (entity  == "arming" )
                                return "mdi:shield-half-full";
                              if (entity  == "triggered" )
                                return "mdi:shield-alert";
                              return "mdi:shield-off";
                            ]]]
                          custom_fields:
                            notification: >
                              [[[ return
                              Math.floor(states['sensor.compteur_home'].state )
                              ]]]  
                        - type: custom:button-card
                          tap_action:
                            action: navigate
                            navigation_path: /lovelace/systeme
                          double_tap_action:
                            action: more-info
                          entity: sensor.etat_onduleur
                          icon: mdi:sine-wave
                          show_label: false
                          template:
                            - mini_card
                            - security_mini_card_state
                          name: Onduleur
                        - type: custom:button-card
                          tap_action:
                            action: navigate
                            navigation_path: /lovelace/Lumières
                          double_tap_action:
                            action: more-info
                          entity: light.tout
                          template:
                            - mini_card
                            - light_mini_card_state
                          show_name: false
                          show_label: false
                          custom_fields:
                            notification: >
                              [[[ return
                              Math.floor(states['sensor.compteur_lumiere'].state
                              ) ]]] 
                        - type: custom:button-card
                          tap_action:
                            action: navigate
                            navigation_path: /lovelace/porte_mouv_serrure
                          double_tap_action:
                            action: more-info
                          entity: binary_sensor.portes
                          show_label: false
                          template:
                            - mini_card
                            - security_mini_card_state
                            - custom_state
                            - custom_icon
                          custom_fields:
                            notification: >
                              [[[ return
                              Math.floor(states['sensor.compteur_portes'].state
                              ) ]]]                                   
                        - type: custom:button-card
                          tap_action:
                            action: navigate
                            navigation_path: /lovelace/porte_mouv_serrure
                          double_tap_action:
                            action: more-info
                          entity: binary_sensor.mouvements
                          show_label: false
                          template:
                            - mini_card
                            - security_mini_card_state
                            - custom_state
                            - custom_icon
                          name: Présences
                          custom_fields:
                            notification: >
                              [[[ return
                              Math.floor(states['sensor.compteur_mouvement'].state
                              ) ]]]  
              - type: conditional
                conditions:
                  - entity: alarm_control_panel.alarmo
                    state_not: disarmed
                card:
                  type: custom:vertical-stack-in-card
                  cards:
                    - square: false
                      columns: 2
                      type: grid
                      cards:
                        - type: custom:webrtc-camera
                          entity: camera.camera_cuisine_hd_stream
                          muted: true
                          ui: true
                          background: true
                          shortcuts:
                            - name: Entrée
                              icon: mdi:door
                              service: script.camera_cuisine_preset_entree
                              data: {}
                            - name: Salon
                              icon: mdi:sofa
                              service: script.camera_cuisine_preset_centre
                              data: {}
                            - name: Chatière
                              icon: mdi:cat
                              service: script.camera_cuisine_preset_chatiere
                              data: {}
                          card_mod:
                            style: |
                              ha-card { 
                                margin: 0px 3px;
                                overflow: hidden !important;
                                border-radius: 15px !important;
                              }
                              ha-card > div.box {
                                display: none;
                              }
                        - type: picture-glance
                          aspect_ratio: 60%
                          camera_image: camera.salon
                          camera_view: auto
                          entities: []
                          card_mod:
                            style: |
                              ha-card { 
                                margin: 0px 3px;
                                overflow: hidden !important;
                                border-radius: 15px !important;
                              }
                              ha-card > div.box {
                                display: none;
                              }
              - type: custom:vertical-stack-in-card
                cards:
                  - type: custom:button-card
                    template:
                      - title_activity_card
                    icon: mdi:calendar
                    label: |
                      [[[ return  "Aujourd'hui" ]]]
                  - type: custom:button-card
                    template:
                      - separator_activity_card
                  - type: custom:button-card
                    template:
                      - sensor_activity_card
                    entity: calendar.fetes_des_prenoms
                    icon: mdi:party-popper
                    name: Fête du jour
                    label: >
                      [[[ return "Nous fêtons les " +
                      states['calendar.fetes_des_prenoms'].attributes.message +
                      " aujourd'hui !" ]]]
                  - type: custom:button-card
                    template:
                      - title_activity_card
                    icon: mdi:calendar
                    label: |
                      [[[ return  "Programme" ]]]
                    tap_action:
                      action: navigate
                      navigation_path: /lovelace/Calendrier
                    styles:
                      card:
                        - - margin-top: 5px
                  - type: custom:button-card
                    template:
                      - separator_activity_card
                  - type: conditional
                    conditions:
                      - condition: and
                        conditions:
                          - condition: state
                            entity: sensor.calendrier_jours_feries
                            state_not: '0'
                          - condition: state
                            entity: input_boolean.header_show_feries
                            state: 'on'
                    card:
                      type: custom:button-card
                      template:
                        - sensor_activity_card
                      entity: sensor.calendrier_jours_feries
                      name: Jours fériés
                      label: >
                        [[[ return 
                        states['sensor.calendrier_jours_feries'].attributes.events
                        ]]]
                      icon: mdi:calendar
                  - type: conditional
                    conditions:
                      - condition: and
                        conditions:
                          - condition: state
                            entity: sensor.calendrier_anniversaires
                            state_not: '0'
                          - condition: state
                            entity: input_boolean.header_show_anniv
                            state: 'on'
                    card:
                      type: custom:button-card
                      template:
                        - sensor_activity_card
                      entity: sensor.calendrier_anniversaires
                      name: Anniversaire
                      label: >
                        [[[ return 
                        states['sensor.calendrier_anniversaires'].attributes.events
                        ]]]
                      icon: mdi:cake-layered
                  - type: conditional
                    conditions:
                      - condition: and
                        conditions:
                          - condition: state
                            entity: sensor.calendrier_jeremy
                            state_not: '0'
                          - condition: state
                            entity: input_boolean.header_show_calendrier
                            state: 'on'
                    card:
                      type: custom:button-card
                      template:
                        - sensor_activity_card
                      entity: sensor.calendrier_jeremy
                      name: Calendrier Jérémy
                      label: >
                        [[[ return 
                        states['sensor.calendrier_jeremy'].attributes.events ]]]
                      icon: mdi:calendar
                  - type: conditional
                    conditions:
                      - condition: and
                        conditions:
                          - condition: state
                            entity: sensor.calendrier_emma
                            state_not: '0'
                          - condition: state
                            entity: input_boolean.header_show_calendrier
                            state: 'on'
                    card:
                      type: custom:button-card
                      template:
                        - sensor_activity_card
                      entity: sensor.calendrier_emma
                      name: Calendrier Emma
                      label: >
                        [[[ return 
                        states['sensor.calendrier_emma'].attributes.events ]]]
                      icon: mdi:calendar
                  - type: conditional
                    conditions:
                      - condition: and
                        conditions:
                          - condition: state
                            entity: sensor.calendrier_boulot
                            state_not: '0'
                          - condition: state
                            entity: input_boolean.header_show_calendrier_boulot
                            state: 'on'
                    card:
                      type: custom:button-card
                      template:
                        - sensor_activity_card
                      entity: sensor.calendrier_boulot
                      name: Calendrier Boulot
                      label: >
                        [[[ return 
                        states['sensor.calendrier_boulot'].attributes.events ]]]
                      icon: mdi:calendar
                  - type: conditional
                    conditions:
                      - condition: and
                        conditions:
                          - condition: state
                            entity: sensor.calendrier_copro
                            state_not: '0'
                          - condition: state
                            entity: input_boolean.header_show_calendrier_copro
                            state: 'on'
                    card:
                      type: custom:button-card
                      template:
                        - sensor_activity_card
                      entity: sensor.calendrier_copro
                      name: Calendrier Copro
                      label: >
                        [[[ return 
                        states['sensor.calendrier_copro'].attributes.events ]]]
                      icon: mdi:calendar
                  - type: conditional
                    conditions:
                      - condition: and
                        conditions:
                          - condition: state
                            entity: sensor.verif_avertissement
                            state: 'false'
                    card:
                      type: custom:button-card
                      template:
                        - title_activity_card
                      icon: mdi:alert
                      label: |
                        [[[ return  "Avertissement" ]]]
                      styles:
                        icon:
                          - color: var(--red)
                        label:
                          - color: var(--red)
                  - type: conditional
                    conditions:
                      - condition: and
                        conditions:
                          - condition: state
                            entity: sensor.verif_avertissement
                            state: 'false'
                    card:
                      type: custom:button-card
                      template:
                        - separator_activity_card
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: sensor.systeme_avertissement
                        state_not: OK
                    card:
                      type: custom:button-card
                      template:
                        - sensor_alert_activity_card
                      entity: sensor.systeme_avertissement
                      name: Indisponibles
                      label: |
                        [[[
                          if (states['sensor.systeme_avertissement'].state == '')
                            return "Aucun" 
                          return states['sensor.systeme_avertissement'].state ;
                        ]]]    
                      icon: mdi:skull-crossbones-outline
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/systeme
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: sensor.avertissement_rpi
                        state_not: OK
                    card:
                      type: custom:button-card
                      template:
                        - sensor_alert_activity_card
                      entity: sensor.avertissement_rpi
                      name: Raspberry
                      label: >
                        [[[ return states['sensor.avertissement_rpi'].state
                        ]]]    
                      icon: mdi:raspberry-pi
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/systeme
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: sensor.spook
                        state_not: 'false'
                    card:
                      type: custom:button-card
                      template:
                        - sensor_alert_activity_card
                      entity: sensor.spook
                      name: Spook
                      label: |
                        [[[ return states['sensor.spook'].state ]]]    
                      icon: mdi:ghost-outline
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/systeme
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: sensor.batterie_faible
                        state_not: Aucune
                    card:
                      type: custom:button-card
                      template:
                        - sensor_alert_activity_card
                      entity: sensor.batterie_faible
                      name: Batteries faibles
                      label: >
                        [[[ return states['sensor.batterie_faible'].state
                        ]]]    
                      icon: mdi:battery-low
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/batteries
                  - type: custom:button-card
                    template:
                      - title_activity_card
                    icon: mdi:home-outline
                    label: |
                      [[[ return  "Maison" ]]]
                    tap_action:
                      action: navigate
                      navigation_path: /lovelace/Appareils
                  - type: custom:button-card
                    template:
                      - separator_activity_card
                  - type: conditional
                    conditions:
                      - condition: and
                        conditions:
                          - condition: state
                            entity: sensor.mouv_on
                            state_not: Aucun
                          - condition: state
                            entity: input_boolean.header_show_mouvement
                            state: 'on'
                    card:
                      type: custom:button-card
                      template:
                        - sensor_activity_card
                      entity: sensor.mouv_on
                      name: Mouvements
                      label: |
                        [[[ return states['sensor.mouv_on'].state  ]]]
                      icon: mdi:run-fast
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/porte_mouv_serrure
                  - type: conditional
                    conditions:
                      - condition: and
                        conditions:
                          - condition: state
                            entity: sensor.porte_on
                            state_not: Aucune
                          - condition: state
                            entity: input_boolean.header_show_porte
                            state: 'on'
                    card:
                      type: custom:button-card
                      template:
                        - sensor_activity_card
                      entity: binary_sensor.portes
                      name: Portes
                      label: |
                        [[[ return states['sensor.porte_on'].state  ]]]
                      icon: mdi:door-open
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/porte_mouv_serrure
                  - type: conditional
                    conditions:
                      - condition: and
                        conditions:
                          - condition: state
                            entity: sensor.temperature_basse
                            state_not: OK
                    card:
                      type: custom:button-card
                      template:
                        - sensor_activity_card
                      entity: sensor.temperature_basse
                      name: Témpérature basse
                      label: |
                        [[[ return states['sensor.temperature_basse'].state  ]]]
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/Temp
                  - type: conditional
                    conditions:
                      - condition: and
                        conditions:
                          - condition: state
                            entity: sensor.appareils_connectes
                            state_not: Aucun
                          - condition: state
                            entity: input_boolean.header_show_connecte
                            state: 'on'
                    card:
                      type: custom:button-card
                      template:
                        - sensor_activity_card
                      entity: group.connecte
                      name: Connectés
                      label: >
                        [[[ return states['sensor.appareils_connectes'].state 
                        ]]]
                      icon: mdi:wifi-strength-outline
                  - type: conditional
                    conditions:
                      - condition: and
                        conditions:
                          - condition: state
                            entity: sensor.appareils_charges
                            state_not: Aucun
                          - condition: state
                            entity: input_boolean.header_show_appareils_charges
                            state: 'on'
                    card:
                      type: custom:button-card
                      template:
                        - sensor_activity_card
                      entity: sensor.appareils_charges
                      name: Chargés
                      label: |
                        [[[ return states['sensor.appareils_charges'].state  ]]]
                      icon: mdi:battery-charging-outline
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/batteries
                  - type: conditional
                    conditions:
                      - condition: and
                        conditions:
                          - condition: state
                            entity: input_boolean.header_show_presence
                            state: 'on'
                          - condition: state
                            entity: person.jeremy
                            state_not: home
                          - condition: state
                            entity: sensor.presents
                            state_not: Personne
                    card:
                      type: custom:button-card
                      template:
                        - sensor_activity_card
                      entity: sensor.presents
                      name: Présence
                      label: |
                        [[[ return states['sensor.presents'].state  ]]]
                      icon: mdi:home-outline
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/Personnes
                  - type: conditional
                    conditions:
                      - condition: and
                        conditions:
                          - condition: state
                            entity: sensor.modes
                            state_not: Aucun
                          - condition: state
                            entity: input_boolean.header_show_mode
                            state: 'on'
                    card:
                      type: custom:button-card
                      template:
                        - sensor_activity_card
                      entity: sensor.modes
                      name: Modes
                      label: |
                        [[[ return states['sensor.modes'].state  ]]]
                      icon: mdi:order-bool-descending-variant
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/reglages
                  - type: conditional
                    conditions:
                      - condition: and
                        conditions:
                          - condition: state
                            entity: sensor.linky_verif_j1
                            state_not: 'false'
                    card:
                      type: custom:button-card
                      template:
                        - sensor_activity_card
                      entity: sensor.linky_TON_PDL_consumption
                      name: Conso électrique
                      label: >
                        [[[ return
                        states['sensor.electricite_cout_jour_avec_abo'].state +"
                        € / " + entity.state + " kWh" ]]]
                      icon: mdi:flash-outline
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/Energie
                      custom_fields:
                        bubble: ●
                      styles:
                        custom_fields:
                          bubble:
                            - color: |
                                [[[ 
                                  if (states["sensor.linky_verif_j1"].state == "false") return ''
                                  if (states["sensor.linky_TON_PDL_consumption"].state < 6) return 'transparent';          
                                  if (states["sensor.linky_TON_PDL_consumption"].state < 9) return 'var(--blue)';
                                  if (states["sensor.linky_TON_PDL_consumption"].state < 12) return 'var(--yellow)'; 
                                  if (states["sensor.linky_TON_PDL_consumption"].state < 15) return 'var(--orange)';
                                  if (states["sensor.linky_TON_PDL_consumption"].state >= 15) return 'var(--red)';          
                                  else return 'transparent';
                                ]]]        
                  - type: conditional
                    conditions:
                      - condition: or
                        conditions:
                          - condition: and
                            conditions:
                              - condition: state
                                entity: sensor.maj
                                state_not: Aucune mise à jour
                              - condition: state
                                entity: input_boolean.header_show_maj
                                state: 'on'
                          - condition: and
                            conditions:
                              - condition: state
                                entity: sensor.verif_avertissement
                                state: 'true'
                              - condition: state
                                entity: sensor.maj
                                state: Aucune mise à jour
                              - condition: state
                                entity: input_boolean.header_show_info
                                state: 'on'
                    card:
                      type: custom:button-card
                      template:
                        - title_activity_card
                      icon: mdi:information-outline
                      label: |
                        [[[ return  "Infos" ]]]
                  - type: conditional
                    conditions:
                      - condition: or
                        conditions:
                          - condition: and
                            conditions:
                              - condition: state
                                entity: sensor.maj
                                state_not: Aucune mise à jour
                              - condition: state
                                entity: input_boolean.header_show_maj
                                state: 'on'
                          - condition: and
                            conditions:
                              - condition: state
                                entity: sensor.verif_avertissement
                                state: 'true'
                              - condition: state
                                entity: sensor.maj
                                state: Aucune mise à jour
                              - condition: state
                                entity: input_boolean.header_show_info
                                state: 'on'
                    card:
                      type: custom:button-card
                      template:
                        - separator_activity_card
                  - type: conditional
                    conditions:
                      - condition: and
                        conditions:
                          - condition: state
                            entity: sensor.maj
                            state_not: Aucune mise à jour
                          - condition: state
                            entity: input_boolean.header_show_maj
                            state: 'on'
                    card:
                      type: custom:button-card
                      template:
                        - sensor_activity_card
                      entity: sensor.maj
                      name: Mises à jour
                      label: |
                        [[[ return states['sensor.maj'].state  ]]]
                      icon: mdi:update
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/systeme
                  - type: conditional
                    conditions:
                      - condition: and
                        conditions:
                          - condition: state
                            entity: input_boolean.header_show_info
                            state: 'on'
                    card:
                      type: custom:button-card
                      template:
                        - sensor_activity_card
                      entity: sensor.savoir_inutile
                      name: Le saviez-vous ?
                      label: |
                        [[[ return states['sensor.savoir_inutile'].state ]]]    
                      styles:
                        label:
                          - font-style: italic
                      icon: mdi:newspaper-variant-outline
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    card_mod:
                      style: |
                        ha-card { 
                          border-radius: 0px;
                          background: transparent !important;
                          box-shadow: none;         
                          margin-top: 10px !important;
                          margin-bottom: 2px !important;
                        }
                    cards:
                      - type: custom:vertical-stack-in-card
                        card_mod:
                          style: |
                            ha-card { 
                              border-radius: 10px;
                              margin: 2px;
                            }
                        cards:
                          - type: custom:button-card
                            entity: switch.adguard_home_protection
                            icon: mdi:shield-check-outline
                            show_label: false
                            template:
                              - sub_button
                              - sub_button_state
                      - type: custom:vertical-stack-in-card
                        card_mod:
                          style: |
                            ha-card { 
                              border-radius: 10px;
                              margin: 2px;
                            }
                        cards:
                          - type: custom:button-card
                            entity: update.home_assistant_core_update
                            icon: mdi:home-assistant
                            show_label: false
                            template:
                              - sub_button
                              - sub_button_state
                            styles:
                              icon:
                                - color: |
                                    [[[
                                      if (states['update.home_assistant_core_update'].state == "on" || states['update.home_assistant_supervisor_update'].state == "on" || states['update.home_assistant_operating_system_update'].state == "on")
                                        return 'var(--icon-blue)'
                                      return 'var(--icon-off)'
                                    ]]] 
                              card:
                                - background-color: |
                                    [[[
                                      if (states['update.home_assistant_core_update'].state == "on" || states['update.home_assistant_supervisor_update'].state == "on" || states['update.home_assistant_operating_system_update'].state == "on")
                                        return 'var(--card-blue)'
                                      return ''
                                    ]]]                  
                            tap_action:
                              action: navigate
                              navigation_path: /lovelace/systeme
                            double_tap_action:
                              action: call-service
                              service: input_boolean.toggle
                              service_data:
                                entity_id: input_boolean.header_show_maj
                      - type: custom:vertical-stack-in-card
                        card_mod:
                          style: |
                            ha-card { 
                              border-radius: 10px;
                              margin: 2px;
                            }
                        cards:
                          - type: custom:button-card
                            entity: sensor.hacs
                            icon: mdi:package-variant
                            show_label: false
                            template:
                              - sub_button
                              - sub_button_state
                            tap_action:
                              action: navigate
                              navigation_path: /lovelace/systeme
                            double_tap_action:
                              action: call-service
                              service: input_boolean.toggle
                              service_data:
                                entity_id: input_boolean.header_show_maj
                      - type: custom:vertical-stack-in-card
                        card_mod:
                          style: |
                            ha-card { 
                              border-radius: 10px;
                              margin: 2px;
                            }
                        cards:
                          - type: custom:button-card
                            icon: mdi:qrcode
                            show_label: false
                            template:
                              - sub_button
                            label: wifi
                            tap_action:
                              action: navigate
                              navigation_path: /lovelace/invités
                      - type: custom:vertical-stack-in-card
                        card_mod:
                          style: |
                            ha-card { 
                              border-radius: 10px;
                              margin: 2px;
                            }
                        cards:
                          - type: custom:button-card
                            entity: group.mode
                            icon: mdi:cog-outline
                            show_label: false
                            template:
                              - sub_button
                              - sub_button_state
                            tap_action:
                              action: navigate
                              navigation_path: /lovelace/reglages
                      - type: custom:vertical-stack-in-card
                        card_mod:
                          style: |
                            ha-card { 
                              border-radius: 10px;
                              margin: 2px;
                            }
                        cards:
                          - type: custom:button-card
                            entity: group.annonces
                            icon: mdi:message-processing-outline
                            show_label: false
                            template:
                              - sub_button
                              - sub_button_state
                            tap_action:
                              action: navigate
                              navigation_path: /lovelace/Annonces
                card_mod:
                  style: |
                    ha-card {
                      padding: 05px 18px 2px 18px!important;
                      margin-top: -3px;
                      margin-bottom: 0px;
                    }
        layout:
          width: 350
      - type: custom:layout-card
        layout_type: masonry
        cards:
          - type: vertical-stack
            cards:
              - cards:
                  - type: custom:button-card
                    template:
                      - title_card
                    name: |
                      [[[ return "Appartement" ]]]
                  - type: custom:decluttering-card
                    template: floorplan_2d
                  - type: grid
                    cards:
                      - type: custom:button-card
                        entity: sensor.temp_sejour_cuisine
                        variables:
                          temp: sensor.temp_sejour_cuisine
                          temp_state: >
                            [[[ return
                            (states['sensor.temp_sejour_cuisine'].state *
                            1).toFixed(1) ]]]
                        template:
                          - base
                          - base_medium
                          - room_card
                        name: Séjour
                        icon: mdi:sofa
                        label: |
                          [[[
                              if (states['sensor.temp_sejour_cuisine'].state == 'unavailable')
                                return " ?"
                              return `<ha-icon icon="mdi:thermometer" style="width: 14px; height: 14px; "> </ha-icon>` + states['sensor.temp_sejour_cuisine'].state +"°" +"  " +`<ha-icon icon="mdi:water" style="width: 14px; height: 14px; "> </ha-icon>` + states['sensor.moniteur_qualite_air_hum_arrondie'].state +"%" + `<br>`+`<ha-icon icon="mdi:blur" style="width: 14px; height: 14px; "> </ha-icon>` + states['sensor.moniteur_qualite_air_voc'].state +"ppb"
                          ]]]
                        custom_fields:
                          bouton:
                            card:
                              type: horizontal-stack
                              cards:
                                - type: custom:button-card
                                  entity: binary_sensor.mouvements
                                  template:
                                    - sub_button
                                    - sub_button_state
                                  icon: |
                                    [[[ 
                                      if (states['binary_sensor.mouvements'].state == 'on')
                                        return "mdi:run-fast"
                                      return "mdi:human-male"
                                    ]]] 
                                - type: custom:button-card
                                  entity: climate.ma_piece
                                  icon: mdi:thermostat
                                  template:
                                    - sub_button
                                    - sub_button_state
                                - type: custom:button-card
                                  entity: switch.on_off_cadrepi
                                  icon: mdi:projector-screen
                                  template:
                                    - sub_button
                                    - sub_button_state
                                - type: custom:button-card
                                  entity: switch.on_off_parsecpi
                                  icon: mdi:television
                                  template:
                                    - sub_button
                                    - sub_button_state
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Séjour
                      - type: custom:button-card
                        entity: sensor.thermo_sdb_temperature
                        variables:
                          temp: sensor.thermo_sdb_temperature
                          temp_state: >
                            [[[ return
                            (states['sensor.thermo_sdb_temperature'].state *
                            1).toFixed(1) ]]]
                        template:
                          - base
                          - base_medium
                          - room_card
                        name: Salle de bains
                        icon: mdi:shower-head
                        label: |
                          [[[
                              if (states['sensor.thermo_sdb_temperature'].state == 'unavailable')
                                return " ?"
                              return `<ha-icon icon="mdi:thermometer" style="width: 14px; height: 14px; "> </ha-icon>` + states['sensor.thermo_sdb_temperature'].state +"°" +"  " +`<ha-icon icon="mdi:water" style="width: 14px; height: 14px; "> </ha-icon>` + states['sensor.thermo_sdb_humidity'].state +"%"
                          ]]]
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/SDB
                      - type: custom:button-card
                        entity: light.lampe_chevet
                        variables:
                          slider: input_number.luminosite_lampe_chevet
                          temp: sensor.thermo_chambre_temperature
                          temp_state: >
                            [[[ return
                            (states['sensor.thermo_chambre_temperature'].state*
                            1).toFixed(1) ]]]  
                        template:
                          - base
                          - base_medium
                          - room_card
                          - room_card_slider
                        name: Chambre
                        icon: mdi:bed-king
                        label: |
                          [[[
                              if (states['sensor.thermo_chambre_temperature'].state == 'unavailable')
                                return " ?"
                              return `<ha-icon icon="mdi:thermometer" style="width: 14px; height: 14px; "> </ha-icon>` + states['sensor.thermo_chambre_temperature'].state +"°" +"  " +`<ha-icon icon="mdi:water" style="width: 14px; height: 14px; "> </ha-icon>` + states['sensor.thermo_chambre_humidity'].state +"%"
                          ]]]
                        custom_fields:
                          bouton:
                            card:
                              type: horizontal-stack
                              cards:
                                - type: custom:button-card
                                  entity: light.lampe_chevet
                                  icon: mdi:lamp
                                  template:
                                    - sub_button
                                    - sub_button_state
                                  styles:
                                    icon:
                                      - color: var(--icon-off)
                        double_tap_action:
                          action: toggle
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Chambre
                      - type: custom:button-card
                        entity: sensor.thermo_petite_chambre_temperature
                        variables:
                          temp: sensor.thermo_petite_chambre_temperature
                          temp_state: >
                            [[[ return
                            (states['sensor.thermo_petite_chambre_temperature'].state*
                            1).toFixed(1) ]]]  
                        template:
                          - base
                          - base_medium
                          - room_card
                        name: Petite chambre
                        icon: mdi:bed-single
                        label: |
                          [[[
                              if (states['sensor.thermo_petite_chambre_temperature'].state == 'unavailable')
                                return " ?"
                              return `<ha-icon icon="mdi:thermometer" style="width: 14px; height: 14px; "> </ha-icon>` + states['sensor.thermo_petite_chambre_temperature'].state +"°" +"  " +`<ha-icon icon="mdi:water" style="width: 14px; height: 14px; "> </ha-icon>` + states['sensor.thermo_petite_chambre_humidity'].state +"%"
                          ]]]
                        custom_fields:
                          bouton:
                            card:
                              type: horizontal-stack
                              cards:
                                - type: custom:button-card
                                  entity: switch.prise_diffuseur_he
                                  icon: mdi:air-humidifier
                                  template:
                                    - sub_button
                                    - sub_button_state
                                  styles:
                                    icon:
                                      - color: var(--icon-off)
                        double_tap_action:
                          action: toggle
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/petite_chambre
                      - type: custom:button-card
                        entity: light.vitrine
                        variables:
                          temp: sensor.thermo_petite_chambre_temperature
                          slider: input_number.luminosite_vitrine
                          temp_state: >
                            [[[ return
                            (states['sensor.thermo_petite_chambre_temperature'].state*
                            1).toFixed(1) ]]]  
                        template:
                          - base
                          - base_medium
                          - room_card
                          - room_card_slider
                        name: Couloir
                        icon: mdi:door
                        show_label: false
                        custom_fields:
                          bouton:
                            card:
                              type: horizontal-stack
                              cards:
                                - type: custom:button-card
                                  entity: light.vitrine
                                  icon: mdi:led-strip-variant
                                  template:
                                    - sub_button
                                    - sub_button_state
                                  styles:
                                    icon:
                                      - color: var(--icon-off)
                        double_tap_action:
                          action: toggle
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Couloir
                    columns: 2
                    square: false
                type: vertical-stack
        layout:
          width: 280
      - type: custom:layout-card
        layout_type: masonry
        cards:
          - cards:
              - type: conditional
                conditions:
                  - entity: media_player.spotify_TON_COMPTE
                    state: playing
                card:
                  type: custom:button-card
                  template:
                    - title_card
                  name: |
                    [[[ return "Multimédia" ]]]
              - type: custom:swipe-card
                parameters:
                  fadeEffect:
                    crossFade: true
                  autoplay:
                    delay: 3000
                  speed: 2000
                cards:
                  - type: conditional
                    conditions:
                      - entity: media_player.spotify_TON_COMPTE
                        state: playing
                    card:
                      type: custom:decluttering-card
                      template: music
                      variables:
                        - entity: media_player.spotify_TON_COMPTE
                        - gauge: sensor.spotify_progression
              - type: conditional
                conditions:
                  - entity: sensor.hp_deskjet_3630_series
                    state_not: unavailable
                card:
                  type: custom:button-card
                  template:
                    - title_card
                  name: |
                    [[[ return "Appareils" ]]]
              - type: conditional
                conditions:
                  - entity: sensor.hp_deskjet_3630_series
                    state_not: unavailable
                card:
                  type: grid
                  cards:
                    - type: custom:button-card
                      template:
                        - printer_card
                  columns: 2
                  square: false
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Personnes" ]]]
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    template:
                      - person_card_jeremy
                  - type: custom:button-card
                    template:
                      - person_card_emma
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Relevés" ]]]
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    entity: sensor.cpu_temperature
                    name: Système
                    icon: mdi:raspberry-pi
                    template:
                      - base
                      - system_card
                    label: |
                      [[[
                        var entity = states['sensor.cpu_temperature'].state;
                        var tendance = states['sensor.cpu_tendance_icon'].state;   
                        return entity + " °C"
                      ]]]
                    styles:
                      card:
                        - background-color: |
                            [[[
                              var temp = states['sensor.cpu_temperature'].state;
                              var ram = states['sensor.memory_use_percent'].state;
                              var cpu = states['sensor.processor_use'].state;
                              var ssd = states['sensor.disk_use_percent'].state;
                              
                              if (temp > 55 || ram > 70 || cpu > 70|| ssd > 50)
                                return 'var(--card-red)'
                              return ''
                            ]]]
                      img_cell:
                        - background-color: |
                            [[[
                              var temp = states['sensor.cpu_temperature'].state;
                              var ram = states['sensor.memory_use_percent'].state;
                              var cpu = states['sensor.processor_use'].state;
                              var ssd = states['sensor.disk_use_percent'].state;
                              
                              if (temp > 55 || ram > 70 || cpu > 70|| ssd > 50)
                                return 'var(--img-cell-red)'
                              return 'var(--img-cell-off)'
                            ]]]
                      icon:
                        - color: |
                            [[[
                              var temp = states['sensor.cpu_temperature'].state;
                              var ram = states['sensor.memory_use_percent'].state;
                              var cpu = states['sensor.processor_use'].state;
                              var ssd = states['sensor.disk_use_percent'].state;
                              
                              if (temp > 55 || ram > 70 || cpu > 70|| ssd > 50)
                                return 'var(--icon-red)'
                              return 'var(--icon-off)'
                            ]]]
                    custom_fields:
                      info:
                        card:
                          type: grid
                          square: false
                          columns: 1
                          cards:
                            - type: custom:button-card
                              entity: sensor.memory_use_percent
                              label: |
                                [[[ 
                                   var name = "Ram : ";
                                   var trend = states['sensor.memory_tendance_icon'].state+ " ";
                                   var state = states['sensor.memory_use_percent'].state + " ";
                                   var unit = states['sensor.memory_use_percent'].attributes.unit_of_measurement+ " " ;
                                   return name + state + unit + trend
                                ]]]
                              template:
                                - system_card_info
                                - system_card_info_state
                            - type: custom:button-card
                              entity: sensor.processor_use
                              label: |
                                [[[ 
                                   var name = "Cpu : ";
                                   var trend = states['sensor.processor_tendance_icon'].state+ " ";
                                   var state = states['sensor.processor_use'].state + " ";
                                   var unit = states['sensor.processor_use'].attributes.unit_of_measurement+ " " ;
                                   return name + state + unit + trend
                                ]]]
                              template:
                                - system_card_info
                                - system_card_info_state
                            - type: custom:button-card
                              entity: sensor.disk_use_percent
                              label: |
                                [[[ 
                                   var name = "Ssd : ";
                                   var trend = states['sensor.ssd_tendance_icon'].state+ " ";
                                   var state = states['sensor.disk_use_percent'].state + " ";
                                   var unit = states['sensor.disk_use_percent'].attributes.unit_of_measurement+ " " ;
                                   return name + state + unit + trend
                                ]]]
                              template:
                                - system_card_info
                                - system_card_info_state
                      graph:
                        card:
                          type: custom:mini-graph-card
                          entities:
                            - color: rgba(150,150,150,0.8)
                              entity: sensor.cpu_temperature
                          height: 150
                          line_width: 1
                          lower_bound: 20
                          points_per_hour: 1
                          hours_to_show: 24
                          show:
                            fill: fade
                            icon: false
                            name: false
                            state: false
                            legend: false
                            points: false
                            labels: false
                    tap_action:
                      action: navigate
                      navigation_path: /lovelace/systeme
                  - type: custom:button-card
                    entity: sensor.linky_TON_PDL_consumption
                    name: Électricité
                    icon: mdi:flash
                    template:
                      - base
                      - system_card
                      - electricity_state
                    show_state: false
                    label: |
                      [[[
                        if (states["sensor.linky_verif_j1"].state == "false") return 'Attente' 
                        else return states["sensor.electricite_cout_jour_avec_abo"].state+" €";
                      ]]]    
                    state:
                      - value: unavailable
                        styles:
                          label:
                            - color: red
                          state:
                            - color: red
                    custom_fields:
                      info:
                        card:
                          type: grid
                          square: false
                          columns: 1
                          cards:
                            - type: custom:button-card
                              entity: sensor.electricite_cout_semaine_avec_abo
                              label: |
                                [[[ 
                                   var name = "Semaine : ";
                                   var state = states['sensor.electricite_cout_semaine_avec_abo'].state + " ";
                                   var unit = "€" ;
                                   return name + state + unit
                                ]]]
                              template:
                                - system_card_info
                              icon: mdi:view-week
                            - type: custom:button-card
                              entity: sensor.electricite_cout_mois_avec_abo
                              label: |
                                [[[ 
                                   var name = "Mois : ";
                                   var state = states['sensor.electricite_cout_mois_avec_abo'].state + " ";
                                   var unit = "€" ;
                                   return name + state + unit
                                ]]]
                              template:
                                - system_card_info
                              icon: mdi:calendar-month
                            - type: custom:button-card
                              entity: sensor.electricite_cout_annee_avec_abo
                              label: |
                                [[[ 
                                   var name = "Année : ";
                                   var state = states['sensor.electricite_cout_annee_avec_abo'].state + " ";
                                   var unit = "€" ;
                                   return name + state + unit
                                ]]]
                              template:
                                - system_card_info
                              icon: mdi:calendar
                      graph_bar:
                        card:
                          type: custom:mini-graph-card
                          entities:
                            - entity: sensor.electricite_conso_j7
                              color: rgba(var(--ocean-blue-rgb),0.3)
                            - entity: sensor.electricite_conso_j6
                              color: rgba(var(--ocean-blue-rgb),0.4)
                            - entity: sensor.electricite_conso_j5
                              color: rgba(var(--ocean-blue-rgb),0.5)
                            - entity: sensor.electricite_conso_j4
                              color: rgba(var(--ocean-blue-rgb),0.6)
                            - entity: sensor.electricite_conso_j3
                              color: rgba(var(--ocean-blue-rgb),0.7)
                            - entity: sensor.electricite_conso_j2
                              color: rgba(var(--ocean-blue-rgb),0.8)
                            - entity: sensor.electricite_conso_veille
                              color: rgba(var(--ocean-blue-rgb),0.8)
                          group_by: date
                          height: 170
                          points_per_hour: 1
                          min_bound_range: 10
                          show:
                            graph: bar
                            fill: false
                            icon: false
                            name: false
                            state: false
                            legend: false
                            points: true
                            labels: false
                          style:
                            .: |
                              ha-card {
                                  font-family: Avenir
                    tap_action:
                      action: navigate
                      navigation_path: /lovelace/Energie
                  - type: custom:button-card
                    entity: sensor.temp_appartement
                    name: Climat
                    icon: mdi:home-thermometer
                    template:
                      - base
                      - system_card
                      - temperature_state
                    label: |
                      [[[
                        return states["sensor.temp_appartement"].state+" °C"
                      ]]]
                    custom_fields:
                      info:
                        card:
                          type: grid
                          square: false
                          columns: 1
                          cards:
                            - type: custom:button-card
                              entity: sensor.weather_temperature
                              label: |
                                [[[ 
                                   var name = "Dehors : ";
                                   var state = states['sensor.weather_temperature'].state + " ";
                                   var unit = "°C" ;
                                   return name + state + unit
                                ]]]
                              icon: mdi:weather-sunny
                              template:
                                - system_card_info
                              styles:
                                icon:
                                  - color: |
                                      [[[
                                        if (states['sensor.weather_temperature'].state < 15 )
                                          return "var(--icon-blue)" 
                                        if (states['sensor.weather_temperature'].state > 25 )
                                          return "var(--icon-orange)" 
                                        return "var(--icon-off)" 
                                      ]]]             
                            - type: custom:button-card
                              entity: sensor.temp_sejour_cuisine
                              label: |
                                [[[ 
                                   var name = "Coin jour : ";
                                   var state = states['sensor.temp_sejour_cuisine'].state + " ";
                                   var unit = "°C" ;
                                   return name + state + unit
                                ]]]
                              icon: mdi:sofa
                              template:
                                - system_card_info
                                - system_card_info_temp_state
                            - type: custom:button-card
                              entity: sensor.temp_coin_nuit
                              icon: mdi:bed-king
                              label: |
                                [[[ 
                                   var name = "Coin nuit : ";
                                   var state = states['sensor.temp_coin_nuit'].state + " ";
                                   var unit = "°C" ;
                                   return name + state + unit
                                ]]]
                              template:
                                - system_card_info
                                - system_card_info_temp_state
                      graph:
                        card:
                          type: custom:mini-graph-card
                          entities:
                            - color: rgba(var(--orange-rgb),0.8)
                              entity: sensor.temp_appartement
                          height: 150
                          line_width: 1
                          lower_bound: 20
                          points_per_hour: 1
                          hours_to_show: 24
                          show:
                            fill: fade
                            icon: false
                            name: false
                            state: false
                            legend: false
                            points: false
                            labels: false
                    tap_action:
                      action: navigate
                      navigation_path: /lovelace/Temp
            type: vertical-stack
        layout:
          width: 280
  - theme: Backend-selected
    title: Temperature
    path: Temp
    icon: mdi:thermometer
    subview: false
    layout:
      width: 350
      max_cols: 3
    type: custom:horizontal-layout
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 320
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Appartement
                  - icon: mdi:thermometer
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      square: false
                      type: grid
                      cards:
                        - type: custom:button-card
                          variables:
                            name: Séjour
                            icon: mdi:sofa
                            temp: sensor.netatmo_temperature_courante
                            temp_state: >-
                              [[[ return
                              states['sensor.netatmo_temperature_courante'].state
                              ]]]
                            hum_state: >-
                              [[[ return
                              states['sensor.moniteur_qualite_air_hum_arrondie'].state
                              ]]]
                            hum: sensor.moniteur_qualite_air_humidity
                            temp_trend: >-
                              [[[ return
                              states['sensor.temp_sejour_tendance_icon'].state
                              ]]]
                          template:
                            - climat_card
                        - type: custom:button-card
                          variables:
                            name: Cuisine
                            icon: mdi:food
                            temp: sensor.moniteur_qualite_air_temperature
                            hum: sensor.moniteur_qualite_air_humidity
                            temp_state: >-
                              [[[ return
                              states['sensor.moniteur_qualite_air_temp_arrondie'].state
                              ]]]
                            hum_state: >-
                              [[[ return
                              states['sensor.moniteur_qualite_air_hum_arrondie'].state
                              ]]]
                            temp_trend: >-
                              [[[ return
                              states['sensor.temp_cuisine_tendance_icon'].state
                              ]]]
                          template:
                            - climat_card
                        - type: custom:button-card
                          variables:
                            name: Salle de bains
                            icon: mdi:shower-head
                            temp: sensor.thermo_sdb_temperature
                            hum: sensor.thermo_sdb_humidity
                            temp_state: >-
                              [[[ return
                              states['sensor.thermo_sdb_temperature'].state ]]]
                            hum_state: >-
                              [[[ return
                              states['sensor.thermo_sdb_humidity'].state ]]]
                            temp_trend: >-
                              [[[ return
                              states['sensor.temp_sdb_tendance_icon'].state ]]]
                          template:
                            - climat_card
                        - type: custom:button-card
                          variables:
                            name: Chambre
                            icon: mdi:bed-king
                            temp: sensor.thermo_chambre_temperature
                            hum: sensor.thermo_chambre_humidity
                            temp_state: >-
                              [[[ return
                              states['sensor.thermo_chambre_temperature'].state
                              ]]]
                            hum_state: >-
                              [[[ return
                              states['sensor.thermo_chambre_humidity'].state ]]]
                            temp_trend: >-
                              [[[ return
                              states['sensor.temp_chambre_tendance_icon'].state
                              ]]]
                          template:
                            - climat_card
                        - type: custom:button-card
                          variables:
                            name: Petite Chambre
                            icon: mdi:bed-single
                            temp: sensor.thermo_petite_chambre_temperature
                            hum: sensor.thermo_petite_chambre_humidity
                            temp_state: >-
                              [[[ return
                              states['sensor.thermo_chambre_temperature'].state
                              ]]]
                            hum_state: >-
                              [[[ return
                              states['sensor.thermo_chambre_humidity'].state ]]]
                            temp_trend: >-
                              [[[ return
                              states['sensor.temp_chambre_tendance_icon'].state
                              ]]]
                          template:
                            - climat_card
                      columns: 2
  - title: Chauffage
    path: chauffage
    icon: mdi:heat-wave
    type: custom:horizontal-layout
    layout:
      width: 350
      max_cols: 4
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 300
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Thermostat
                  - icon: mdi:thermostat-box
              - type: custom:vertical-stack-in-card
                cards:
                  - type: custom:decluttering-card
                    template: thermostat_netatmo
              - type: custom:vertical-stack-in-card
                cards:
                  - type: grid
                    square: false
                    columns: 1
                    cards:
                      - type: custom:button-card
                        entity: climate.ma_piece
                        icon: mdi:application
                        name: App Netatmo
                        show_state: false
                        show_label: false
                        template:
                          - ball_card
                        tap_action:
                          action: url
                          url_path: app://com.netatmo.thermostat
          - type: custom:layout-card
            layout_type: masonry
            layout:
              width: 300
            cards:
              - type: entities
                card_mod:
                  style: |
                    ha-card { 
                     background-color: var(--card-background-color);
                     } 
                entities:
                  - type: custom:decluttering-card
                    template: header
                    variables:
                      - name: Climatisation
                      - icon: mdi:snowflake
                  - type: custom:swipe-card
                    cards:
                      - type: custom:decluttering-card
                        template: thermostat_mitsubishi
                        variables:
                          - name_clim: Salon
                          - climate: climate.salon
                          - clim_etat: sensor.clim_salon_etat
                          - clim_temp_consigne: sensor.clim_salon_temperature_consigne
                          - clim_fan_modes: sensor.clim_salon_fan_mode
                          - clim_position_verticale: sensor.clim_salon_position_verticale
                          - clim_position_horizontale: sensor.clim_salon_position_horizontale
                          - input_select_modes: input_select.clim_salon_modes
                          - input_select_fan_modes: input_select.clim_salon_fan_modes
                          - script_decrement_consigne: script.clim_salon_decrement_consigne
                          - script_increment_consigne: script.clim_salon_increment_consigne
                          - script_on_off: script.clim_salon_on_off
                      - type: custom:decluttering-card
                        template: thermostat_mitsubishi
                        variables:
                          - name_clim: Chambre
                          - climate: climate.chambre
                          - clim_etat: sensor.clim_chambre_etat
                          - clim_temp_consigne: sensor.clim_salon_temperature_consigne
                          - clim_fan_modes: sensor.clim_chambre_fan_mode
                          - clim_position_verticale: sensor.clim_chambre_position_verticale
                          - clim_position_horizontale: sensor.clim_chambre_position_horizontale
                          - input_select_modes: input_select.clim_chambre_modes
                          - input_select_fan_modes: input_select.clim_chambre_fan_modes
                          - script_decrement_consigne: script.clim_chambre_decrement_consigne
                          - script_increment_consigne: script.clim_chambre_increment_consigne
                          - script_on_off: script.clim_chambre_on_off
                  - type: custom:vertical-stack-in-card
                    cards:
                      - type: grid
                        square: false
                        columns: 1
                        cards:
                          - type: custom:button-card
                            entity: climate.ma_piece
                            icon: mdi:application
                            name: App MELCloud
                            show_state: false
                            show_label: false
                            template:
                              - ball_card
                            tap_action:
                              action: url
                              url_path: app://mitsubishi.wifi.android.mitsubishiwifiapp
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 300
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Thermostat chauffe
                  - icon: mdi:heat-wave
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: vertical-stack
                      cards:
                        - type: horizontal-stack
                          cards:
                            - type: custom:button-card
                              template:
                                - mini_card
                              show_label: true
                              show_state: false
                              show_name: true
                              icon: mdi:calendar-today
                              entity: sensor.thermostat_chauffe_duree_aujourd_hui
                              name: Ce jour
                              label: >
                                [[[  return
                                states['sensor.duree_thermostat_allume'].state
                                ]]]
                              styles:
                                name:
                                  - margin: 5px 0px -4px 0px
                                icon:
                                  - color: var(--icon-off)
                                img_cell:
                                  - background-color: var(--img-cell-off)
                              state:
                                - value: 14
                                  operator: '>'
                                  styles:
                                    img_cell:
                                      - background-color: var(--img-cell-red)
                                    icon:
                                      - color: var(--icon-red)
                                - value: 12
                                  operator: '>'
                                  styles:
                                    img_cell:
                                      - background-color: var(--img-cell-orange)
                                    icon:
                                      - color: var(--icon-orange)
                                - value: 10
                                  operator: '>'
                                  styles:
                                    img_cell:
                                      - background-color: var(--img-cell-yellow)
                                    icon:
                                      - color: var(--icon-yellow)
                                - value: 6
                                  operator: '>'
                                  styles:
                                    img_cell:
                                      - background-color: var(--img-cell-blue)
                                    icon:
                                      - color: var(--icon-blue)
                                - value: 0
                                  operator: '>'
                                  styles:
                                    img_cell:
                                      - background-color: var(--img-cell-green)
                                    icon:
                                      - color: var(--icon-green)
                            - type: custom:button-card
                              template:
                                - mini_card
                              show_label: true
                              show_state: false
                              show_name: true
                              icon: mdi:calendar-blank
                              entity: sensor.thermostat_chauffe_duree_hier
                              name: Hier
                              label: >
                                [[[  return
                                states['sensor.duree_thermostat_allume_hier'].state
                                ]]]
                              styles:
                                name:
                                  - margin: 5px 0px -4px 0px
                                icon:
                                  - color: var(--icon-off)
                                img_cell:
                                  - background-color: var(--img-cell-off)
                              state:
                                - value: 14
                                  operator: '>'
                                  styles:
                                    img_cell:
                                      - background-color: var(--img-cell-red)
                                    icon:
                                      - color: var(--icon-red)
                                - value: 12
                                  operator: '>'
                                  styles:
                                    img_cell:
                                      - background-color: var(--img-cell-orange)
                                    icon:
                                      - color: var(--icon-orange)
                                - value: 10
                                  operator: '>'
                                  styles:
                                    img_cell:
                                      - background-color: var(--img-cell-yellow)
                                    icon:
                                      - color: var(--icon-yellow)
                                - value: 6
                                  operator: '>'
                                  styles:
                                    img_cell:
                                      - background-color: var(--img-cell-blue)
                                    icon:
                                      - color: var(--icon-blue)
                                - value: 0
                                  operator: '>'
                                  styles:
                                    img_cell:
                                      - background-color: var(--img-cell-green)
                                    icon:
                                      - color: var(--icon-green)
                            - type: custom:button-card
                              template:
                                - mini_card
                              show_label: true
                              show_state: false
                              show_name: true
                              icon: mdi:calendar-week
                              entity: sensor.duree_thermostat_allume_7_jours
                              name: 7 jours
                              label: >
                                [[[  return
                                states['sensor.duree_thermostat_allume_7_jours'].state
                                ]]]
                              styles:
                                name:
                                  - margin: 5px 0px -4px 0px
                                icon:
                                  - color: var(--icon-off)
                                img_cell:
                                  - background-color: var(--img-cell-off)
                              state:
                                - value: 98
                                  operator: '>'
                                  styles:
                                    img_cell:
                                      - background-color: var(--img-cell-red)
                                    icon:
                                      - color: var(--icon-red)
                                - value: 84
                                  operator: '>'
                                  styles:
                                    img_cell:
                                      - background-color: var(--img-cell-orange)
                                    icon:
                                      - color: var(--icon-orange)
                                - value: 70
                                  operator: '>'
                                  styles:
                                    img_cell:
                                      - background-color: var(--img-cell-yellow)
                                    icon:
                                      - color: var(--icon-yellow)
                                - value: 42
                                  operator: '>'
                                  styles:
                                    img_cell:
                                      - background-color: var(--img-cell-blue)
                                    icon:
                                      - color: var(--icon-blue)
                                - value: 0
                                  operator: '>'
                                  styles:
                                    img_cell:
                                      - background-color: var(--img-cell-green)
                                    icon:
                                      - color: var(--icon-green)
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:decluttering-card
                      template:
                        - graph_duration
                      variables:
                        - entity: sensor.thermostat_chauffe_duree_aujourd_hui
                        - title: 10 derniers jours
                        - value1: 0
                        - value2: 6
                        - value3: 10
                        - value4: 12
                        - value5: 14
  - theme: Backend-selected
    title: Lumières
    path: Lumières
    icon: mdi:lightbulb-group-outline
    type: custom:horizontal-layout
    layout:
      width: 350
      max_cols: 4
    subview: false
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 300
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Les lumières
                  - icon: mdi:lightbulb-variant
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: vertical-stack
                      cards:
                        - square: false
                          type: grid
                          columns: 1
                          cards:
                            - variables:
                                entity: light.tout
                              type: custom:button-card
                              name: Toutes les lampes
                              template:
                                - ball_light_card
                                - light_card_state
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Appartement " ]]]
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: vertical-stack
                      cards:
                        - square: false
                          type: grid
                          columns: 2
                          cards:
                            - variables:
                                entity: light.vitrine
                              type: custom:button-card
                              name: Vitrine
                              icon: mdi:led-strip-variant
                              template:
                                - ball_light_card
                                - light_card_state
                              double_tap_action:
                                action: navigate
                                navigation_path: /lovelace/Couloir
                            - variables:
                                entity: light.lampe_chevet
                              name: Lampe chevet
                              type: custom:button-card
                              template:
                                - ball_light_card
                                - light_card_state
                              double_tap_action:
                                action: navigate
                                navigation_path: /lovelace/Chambre
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 300
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Lumières allumées
                  - icon: mdi:lightbulb-on
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: vertical-stack
                      cards:
                        - type: horizontal-stack
                          cards:
                            - type: custom:button-card
                              template:
                                - mini_card
                              show_label: true
                              show_state: false
                              show_name: true
                              icon: mdi:calendar-today
                              entity: sensor.lumieres_allumees_duree_aujourd_hui
                              name: Ce jour
                              label: >
                                [[[  return
                                states['sensor.duree_lumieres_allumees'].state
                                ]]]
                              styles:
                                name:
                                  - margin: 5px 0px -4px 0px
                                icon:
                                  - color: var(--icon-off)
                                img_cell:
                                  - background-color: var(--img-cell-off)
                              state:
                                - value: 14
                                  operator: '>'
                                  styles:
                                    img_cell:
                                      - background-color: var(--img-cell-red)
                                    icon:
                                      - color: var(--icon-red)
                                - value: 12
                                  operator: '>'
                                  styles:
                                    img_cell:
                                      - background-color: var(--img-cell-orange)
                                    icon:
                                      - color: var(--icon-orange)
                                - value: 10
                                  operator: '>'
                                  styles:
                                    img_cell:
                                      - background-color: var(--img-cell-yellow)
                                    icon:
                                      - color: var(--icon-yellow)
                                - value: 6
                                  operator: '>'
                                  styles:
                                    img_cell:
                                      - background-color: var(--img-cell-blue)
                                    icon:
                                      - color: var(--icon-blue)
                                - value: 0
                                  operator: '>'
                                  styles:
                                    img_cell:
                                      - background-color: var(--img-cell-green)
                                    icon:
                                      - color: var(--icon-green)
                            - type: custom:button-card
                              template:
                                - mini_card
                              show_label: true
                              show_state: false
                              show_name: true
                              icon: mdi:calendar-blank
                              entity: sensor.lumieres_allumees_duree_hier
                              name: Hier
                              label: >
                                [[[  return
                                states['sensor.duree_lumieres_allumees_hier'].state
                                ]]]
                              styles:
                                name:
                                  - margin: 5px 0px -4px 0px
                                icon:
                                  - color: var(--icon-off)
                                img_cell:
                                  - background-color: var(--img-cell-off)
                              state:
                                - value: 14
                                  operator: '>'
                                  styles:
                                    img_cell:
                                      - background-color: var(--img-cell-red)
                                    icon:
                                      - color: var(--icon-red)
                                - value: 12
                                  operator: '>'
                                  styles:
                                    img_cell:
                                      - background-color: var(--img-cell-orange)
                                    icon:
                                      - color: var(--icon-orange)
                                - value: 10
                                  operator: '>'
                                  styles:
                                    img_cell:
                                      - background-color: var(--img-cell-yellow)
                                    icon:
                                      - color: var(--icon-yellow)
                                - value: 6
                                  operator: '>'
                                  styles:
                                    img_cell:
                                      - background-color: var(--img-cell-blue)
                                    icon:
                                      - color: var(--icon-blue)
                                - value: 0
                                  operator: '>'
                                  styles:
                                    img_cell:
                                      - background-color: var(--img-cell-green)
                                    icon:
                                      - color: var(--icon-green)
                            - type: custom:button-card
                              template:
                                - mini_card
                              show_label: true
                              show_state: false
                              show_name: true
                              icon: mdi:calendar-week
                              entity: sensor.lumieres_allumees_duree_7_jours
                              name: 7 jours
                              label: >
                                [[[  return
                                states['sensor.duree_lumieres_allumees_7_jours'].state
                                ]]]
                              styles:
                                name:
                                  - margin: 5px 0px -4px 0px
                                icon:
                                  - color: var(--icon-off)
                                img_cell:
                                  - background-color: var(--img-cell-off)
                              state:
                                - value: 98
                                  operator: '>'
                                  styles:
                                    img_cell:
                                      - background-color: var(--img-cell-red)
                                    icon:
                                      - color: var(--icon-red)
                                - value: 84
                                  operator: '>'
                                  styles:
                                    img_cell:
                                      - background-color: var(--img-cell-orange)
                                    icon:
                                      - color: var(--icon-orange)
                                - value: 70
                                  operator: '>'
                                  styles:
                                    img_cell:
                                      - background-color: var(--img-cell-yellow)
                                    icon:
                                      - color: var(--icon-yellow)
                                - value: 42
                                  operator: '>'
                                  styles:
                                    img_cell:
                                      - background-color: var(--img-cell-blue)
                                    icon:
                                      - color: var(--icon-blue)
                                - value: 0
                                  operator: '>'
                                  styles:
                                    img_cell:
                                      - background-color: var(--img-cell-green)
                                    icon:
                                      - color: var(--icon-green)
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:decluttering-card
                      template:
                        - graph_duration
                      variables:
                        - entity: sensor.lumieres_allumees_duree_aujourd_hui
                        - title: 10 derniers jours
                        - value1: 0
                        - value2: 6
                        - value3: 10
                        - value4: 12
                        - value5: 14
  - theme: Backend-selected
    title: Batteries
    path: batteries
    icon: mdi:battery-outline
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    badge_cards: []
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - type: entities
                card_mod:
                  style: |
                    ha-card { 
                     background-color: var(--card-background-color);
                     } 
                entities:
                  - type: custom:decluttering-card
                    template: header
                    variables:
                      - name: Téléphones
                      - icon: mdi:cellphone-charging
                  - type: custom:button-card
                    template:
                      - around_card
                      - around_clear_card
                    custom_fields:
                      info:
                        card:
                          type: vertical-stack
                          cards:
                            - type: custom:button-card
                              name: Google Pixel 6
                              variables:
                                entity: sensor.pixel_6_jh_battery_level
                                charge: >-
                                  [[[ return
                                  states['sensor.pixel_6_jh_battery_level'].state
                                  ]]]
                              template:
                                - battery_level_card
                            - type: custom:button-card
                              name: Samsung Galaxy S21 FE
                              variables:
                                entity: sensor.galaxy_s21_fe_battery_level
                                charge: >-
                                  [[[ return
                                  states['sensor.galaxy_s21_fe_battery_level'].state
                                  ]]]
                              template:
                                - battery_level_card
                            - type: custom:button-card
                              name: Wallpanel
                              variables:
                                entity: sensor.wallpanel_battery_level
                                charge: >-
                                  [[[ return
                                  states['sensor.wallpanel_battery_level'].state
                                  ]]]
                              template:
                                - battery_level_card
              - type: entities
                card_mod:
                  style: |
                    ha-card { 
                     background-color: var(--card-background-color);
                     } 
                entities:
                  - type: custom:decluttering-card
                    template: header
                    variables:
                      - name: Appareils
                      - icon: mdi:home-battery
                  - type: custom:button-card
                    template:
                      - around_card
                      - around_clear_card
                    custom_fields:
                      info:
                        card:
                          type: vertical-stack
                          cards:
                            - type: custom:button-card
                              variables:
                                entity: sensor.moniteur_qualite_air_battery
                              name: Moniteur qualité d'air
                              template:
                                - battery_level_card
                            - type: custom:button-card
                              variables:
                                entity: sensor.thermostat_battery_percent
                              name: Thermostat
                              template:
                                - battery_level_card
              - type: entities
                card_mod:
                  style: |
                    ha-card { 
                     background-color: var(--card-background-color);
                     } 
                entities:
                  - type: custom:decluttering-card
                    template: header
                    variables:
                      - name: Portes
                      - icon: mdi:door-open
                  - type: custom:button-card
                    template:
                      - around_card
                      - around_clear_card
                    custom_fields:
                      info:
                        card:
                          type: vertical-stack
                          cards:
                            - type: custom:button-card
                              variables:
                                entity: sensor.porte_entree_battery
                              name: Porte entrée
                              template:
                                - battery_level_card
                            - type: custom:button-card
                              variables:
                                entity: sensor.porte_coin_nuit_battery
                              name: Porte coin nuit
                              template:
                                - battery_level_card
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 border-radius: var(--ha-card-border-radius) !important;
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Thermomètres
                  - icon: mdi:thermometer-lines
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: vertical-stack
                      cards:
                        - type: custom:button-card
                          template:
                            - battery_level_card
                          variables:
                            entity: sensor.thermo_chambre_battery
                          name: Chambre
                        - type: custom:button-card
                          template:
                            - battery_level_card
                          variables:
                            entity: sensor.thermo_petite_chambre_battery
                          name: Petite chambre
                        - type: custom:button-card
                          template:
                            - battery_level_card
                          variables:
                            entity: sensor.thermo_sdb_battery
                          name: SdB
  - title: Todolist
    path: todolist
    icon: mdi:clipboard
    type: custom:horizontal-layout
    badges: []
    cards:
      - type: vertical-stack
        cards:
          - type: conditional
            conditions:
              - condition: screen
                media_query: '(min-width: 0px) and (max-width: 1023px)'
            card:
              type: custom:layout-card
              layout_type: masonry
              layout:
                width: 340
              cards:
                - type: entities
                  card_mod:
                    style: |
                      ha-card { 
                       background-color: var(--card-background-color);
                       } 
                  entities:
                    - type: custom:decluttering-card
                      template: header
                      variables:
                        - name: À faire
                        - icon: mdi:clipboard-outline
                    - type: custom:vertical-stack-in-card
                      cards:
                        - type: entity
                          entity: todo.home_assistant
                          state_color: true
                        - type: todo-list
                          entity: todo.home_assistant
          - type: conditional
            conditions:
              - condition: screen
                media_query: '(min-width: 1024px)'
            card:
              type: custom:layout-card
              layout_type: masonry
              layout:
                width: 1200
              cards:
                - type: custom:decluttering-card
                  template: header
                  variables:
                    - name: À faire
                    - icon: mdi:clipboard-outline
                - type: custom:vertical-stack-in-card
                  cards:
                    - type: entity
                      entity: todo.home_assistant
                      state_color: true
                    - type: todo-list
                      entity: todo.home_assistant
  - theme: Backend-selected
    subview: true
    title: Energie
    path: Energie
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:flash
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 330
        cards:
          - type: entities
            show_header_toggle: false
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                }
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Electricité
                  - icon: mdi:flash
              - type: custom:button-card
                entity: sensor.linky_mise_a_jour
                template:
                  - title_card
                show_label: false
                show_state: false
                name: |
                  [[[ return " Mise à jour :  "+
                      states['sensor.linky_mise_a_jour'].state ]]] 
                tap_action:
                  action: more-info
                styles:
                  name:
                    - justify-self: null
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:content-card-linky
                      entity: sensor.linky_TON_PDL_consumption
                      showHistory: true
                      showHeader: true
                      showPeakOffPeak: false
                      showIcon: false
                      showInTableUnit: true
                      showDayPrice: true
                      showDayPriceHCHP: false
                      showDayMaxPower: false
                      showDayHCHP: false
                      showDayName: short
                      showError: true
                      shoInformation: true
                      showPrice: true
                      showTitle: false
                      showCurrentMonthRatio: true
                      showMonthRatio: true
                      showWeekRatio: true
                      showYesterdayRatio: true
                      showTitleLine: true
                      showEcoWatt: true
                      showEcoWattJ12: true
                      showTempo: false
                      titleName: Linky
                      nbJoursAffichage: '7'
                      showYearRatio: true
                      showTitreLigne: true
                      ewEntity: sensor.rte_ecowatt_j0
                      ewEntityJ1: sensor.rte_ecowatt_j1
                      ewEntityJ2: sensor.rte_ecowatt_j2
                      card_mod:
                        style: |
                          ha-card {
                            color: lightgrey ;
                            font-size: 12px;
                            font-family: Avenir;
                card_mod:
                  style: |
                    ha-card { 
                      background-color: var(--card-background-color);
                      padding: 2px;
                      box-shadow: none;
                      border-radius: 25px;
                    }   
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: grid
                      columns: 2
                      square: false
                      cards:
                        - type: custom:button-card
                          entity: sensor.linky_TON_PDL_consumption
                          icon: mdi:calendar-today
                          template:
                            - ball_card
                            - electricity_state
                          show_label: true
                          show_state: false
                          name: >
                            [[[ return "Hier : "+
                            states['sensor.electricite_cout_jour_avec_abo'].state
                              +"€"]]] 
                          label: >
                            [[[ return
                            states['sensor.linky_TON_PDL_consumption'].state
                            +" kWh"]]] 
                        - type: custom:button-card
                          entity: sensor.linky_TON_PDL_consumption
                          icon: mdi:view-week
                          template:
                            - ball_card
                          show_label: true
                          show_state: false
                          name: >
                            [[[ return "Semaine :
                            "+states['sensor.electricite_cout_semaine_avec_abo'].state
                              +"€"]]]
                          label: >
                            [[[ return
                            states['sensor.linky_TON_PDL_consumption'].attributes.current_week
                            +" kWh"]]]              
                          styles:
                            img_cell:
                              - background-color: var(--img-cell-blue)
                            icon:
                              - color: var(--icon-blue)
                        - type: custom:button-card
                          entity: sensor.linky_TON_PDL_consumption
                          icon: mdi:calendar-month
                          template:
                            - ball_card
                          show_label: true
                          show_state: false
                          name: >
                            [[[ return "Mois :
                            "+states['sensor.electricite_cout_mois_avec_abo'].state
                              +"€"]]]
                          label: >
                            [[[ return
                            states['sensor.linky_TON_PDL_consumption'].attributes.current_month
                            +" kWh"]]] 
                          styles:
                            img_cell:
                              - background-color: var(--img-cell-blue)
                            icon:
                              - color: var(--icon-blue)
                        - type: custom:button-card
                          entity: sensor.linky_TON_PDL_consumption
                          icon: mdi:calendar
                          template:
                            - ball_card
                          show_label: true
                          show_state: false
                          name: >
                            [[[ return "Année :
                            "+states['sensor.electricite_cout_annee_avec_abo'].state
                              +"€"]]] 
                          label: >
                            [[[ return
                            states['sensor.linky_TON_PDL_consumption'].attributes.current_year
                            +" kWh"]]] 
                          styles:
                            img_cell:
                              - background-color: var(--img-cell-blue)
                            icon:
                              - color: var(--icon-blue)
                        - type: custom:button-card
                          entity: sensor.linky_TON_PDL_consumption
                          name: Max hier
                          template:
                            - ball_card
                            - electricity_state
                          show_label: true
                          show_state: false
                          label: >
                            [[[ return
                            states['sensor.enedis_max_power_j1'].state +"
                            kVA"]]]     
                        - type: custom:button-card
                          entity: sensor.linky_TON_PDL_consumption
                          name: Souscription
                          template:
                            - ball_card
                          show_label: true
                          show_state: false
                          label: >
                            [[[ return
                            states['sensor.linky_TON_PDL_consumption'].attributes.subscribed_power
                            ]]] 
                          styles:
                            img_cell:
                              - background-color: var(--img-cell-green)
                            icon:
                              - color: var(--icon-green)
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Réglages des tarifs" ]]]        
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: grid
                      columns: 2
                      square: false
                      cards:
                        - type: custom:button-card
                          template:
                            - ball_card
                          entity: input_number.prix_electricite
                          show_label: true
                          show_state: false
                          name: Prix du kWh
                          label: >
                            [[[ return
                            states['input_number.prix_electricite'].state +"
                            €/kWh"]]]   
                        - type: custom:button-card
                          template:
                            - ball_card
                          entity: input_number.prix_abo_electricite
                          show_label: true
                          show_state: false
                          name: Prix de l'abonnement
                          label: >
                            [[[ return
                            states['input_number.prix_abo_electricite'].state +"
                            €/mois"]]]  
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 330
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 overflow: visible !important;
                }
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Relevés
                  - icon: mdi:chart-bar
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:apexcharts-card
                      graph_span: 7d
                      span:
                        end: day
                        offset: '-1d'
                      experimental:
                        color_threshold: true
                      apex_config:
                        chart:
                          stacked: true
                          height: 200
                        legend:
                          show: false
                        grid:
                          show: true
                          strokeDashArray: 0
                          position: back
                          borderColor: rgba(200,200,200,0.3)
                        stroke:
                          width: 1
                        xaxis:
                          labels:
                            format: ddd dd
                            hideOverlappingLabels: true
                            showDuplicatges: true
                        dataLabels:
                          offsetY: -5
                          background:
                            enabled: true
                            opacity: 0.5
                        plotOptions:
                          bar:
                            borderRadius: 5
                            dataLabels:
                              position: top
                        yaxis:
                          - id: first
                            decimals: 1
                            min: 0
                            forceNiceScale: true
                            apex_config:
                              tickAmount: 2
                          - id: second
                            decimals: 0
                            max: 15
                            min: 0
                            forceNiceScale: false
                            apex_config:
                              tickAmount: 2
                            opposite: true
                            labels:
                              show: false
                      header:
                        show: true
                        title: 7 jours (avec abonnement)
                        show_states: true
                        standard_format: false
                        colorize_states: true
                      series:
                        - entity: sensor.linky_TON_PDL_consumption
                          yaxis_id: first
                          type: column
                          offset: +1d
                          show:
                            name_in_header: false
                            datalabels: true
                            legend_value: false
                            header_color_threshold: true
                          group_by:
                            func: max
                            duration: 1d
                          opacity: 0.6
                          color_threshold:
                            - value: 0
                              color: var(--icon-green)
                            - value: 6
                              color: var(--icon-blue)
                            - value: 9
                              color: var(--icon-yellow)
                            - value: 12
                              color: var(--icon-orange)
                            - value: 15
                              color: var(--icon-red)
                        - entity: sensor.electricite_cout_jour_avec_abo
                          yaxis_id: second
                          type: line
                          offset: +1d
                          color: var(--blue)
                          unit: €
                          stroke_width: 2
                          show:
                            datalabels: true
                            name_in_header: false
                          group_by:
                            func: last
                            duration: 1d
                          opacity: 0.8
                      card_mod:
                        style: |
                          ha-card {
                            font-family: Avenir;
              - type: custom:vertical-stack-in-card
                card_mod:
                  style: |
                    ha-card {
                      overflow: visible !important;
                      border-radius: var(--ha-card-border-radius);
                      padding: 5px;
                      margin: 0 0px 0 -05px;
                    }
                cards:
                  - type: custom:vertical-stack-in-card
                    card_mod:
                      style: |
                        ha-card {
                          box-shadow: none;
                          padding: 5px;
                          margin: 0 0px 0 -05px;
                          font-family: Avenir;
                          font-size: 13px;
                          overflow: visible !important;
                          border-radius: 0;
                        }
                    cards:
                      - type: energy-date-selection
                  - type: custom:vertical-stack-in-card
                    card_mod:
                      style: |
                        ha-card {              
                          box-shadow: none;                  
                          padding: 5px;
                          margin: 0 0px 0 -05px;
                          font-family: Avenir;
                          font-size: 13px;
                          overflow: visible !important;
                          border-radius: 0;
                        }
                    cards:
                      - type: energy-usage-graph
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 330
        cards:
          - type: entities
            show_header_toggle: false
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                }
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Eau
                  - icon: mdi:water
              - type: custom:button-card
                entity: sensor.water_last_update
                template:
                  - title_card
                show_label: false
                show_state: false
                name: |
                  [[[ return " Mise à jour :  "+ 
                      states['sensor.water_last_update'].state ]]] 
                tap_action:
                  action: more-info
                styles:
                  name:
                    - justify-self: null
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: energy-water-graph
                card_mod:
                  style: |
                    ha-card { 
                      background-color: var(--card-background-color);
                      padding: 2px;
                      box-shadow: none;
                      border-radius: 25px;
                    }   
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Relevé index" ]]]        
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:button-card
                      template:
                        - ball_card
                      entity: input_number.compteur_eau
                      show_label: true
                      show_state: false
                      name: Index compteur
                      label: >
                        [[[ return states['input_number.compteur_eau'].state +"
                        m³"]]]   
      - type: entities
        entities:
          - type: custom:decluttering-card
            template: header
            variables:
              - name: Durée de fonctionnement
              - icon: mdi:timer
          - type: custom:decluttering-card
            template: graph_duration
            variables:
              - entity: sensor.lumieres_allumees_duree_aujourd_hui
              - title: Lumières
              - value1: 0
              - value2: 6
              - value3: 10
              - value4: 12
              - value5: 14
        show_header_toggle: false
        card_mod:
          style: |
            ha-card { 
             background-color: var(--card-background-color);
            }
  - theme: Backend-selected
    title: Alarmes
    path: Alarmes
    icon: mdi:shield-lock-open-outline
    type: custom:horizontal-layout
    layout:
      width: 350
      max_cols: 4
    subview: true
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Sécurité
                  - icon: mdi:shield-home
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Alarmes" ]]]
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          entity: alarm_control_panel.alarmo
                          name: Alarme
                          icon: |
                            [[[
                              if (states['alarm_control_panel.alarmo'].state == "disarmed" )
                                return "mdi:shield-off";
                              if (states['alarm_control_panel.alarmo'].state == "armed_away" )
                                return "mdi:shield-lock";
                              if (states['alarm_control_panel.alarmo'].state == "armed_home" )
                                return "mdi:shield-home";
                              if (states['alarm_control_panel.alarmo'].state == "armed_night" )
                                return "mdi:shield-moon";
                              if (states['alarm_control_panel.alarmo'].state== "arming" )
                                return "mdi:shield-half-full";
                              if (states['alarm_control_panel.alarmo'].state == "triggered" )
                                return "mdi:shield-alert";
                              return "mdi:shield-off";
                            ]]]
                          template:
                            - ball_card
                            - custom_state
                            - security_card_state
                          tap_action:
                            action: more-info
                          double_tap_action:
                            action: navigate
                            navigation_path: /lovelace/Alarmes
              - type: custom:button-card
                template: divider
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Personnes" ]]]
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: grid
                      columns: 2
                      square: false
                      cards:
                        - type: custom:button-card
                          entity: person.jeremy
                          name: Jérémy
                          label: >
                            [[[return
                            states["sensor.jeremy_gps_simple"].state]]]
                          template:
                            - ball_card
                            - person_state
                          show_entity_picture: true
                          show_label: true
                          show_state: false
                          styles:
                            label:
                              - white-space: null
                            entity_picture:
                              - width: 100%
                              - border-radius: 100%
                          tap_action:
                            action: navigate
                            navigation_path: /lovelace/Personnes
                        - type: custom:button-card
                          entity: person.emma
                          name: Emma
                          label: |
                            [[[return states["sensor.emma_gps_simple"].state]]]
                          template:
                            - ball_card
                            - person_state
                          show_entity_picture: true
                          show_label: true
                          show_state: false
                          styles:
                            entity_picture:
                              - width: 100%
                              - border-radius: 100%
                          tap_action:
                            action: navigate
                            navigation_path: /lovelace/Personnes
              - type: custom:button-card
                template: divider
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Appareils" ]]]
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: grid
                      square: false
                      columns: 2
                      cards:
                        - type: custom:button-card
                          entity: binary_sensor.portes
                          name: Ouvertures
                          template:
                            - ball_card
                            - security_card_state
                          custom_fields:
                            notification: >
                              [[[ return
                              Math.floor(states['sensor.compteur_portes'].state)
                              ]]]              
                          tap_action:
                            action: navigate
                            navigation_path: /lovelace/porte_mouv_serrure
                        - type: custom:button-card
                          entity: binary_sensor.mouvements
                          name: Mouvement
                          template:
                            - ball_card
                            - custom_state
                            - security_card_state
                          custom_fields:
                            notification: >
                              [[[ return
                              Math.floor(states['sensor.compteur_mouvement'].state)
                              ]]]               
                          tap_action:
                            action: navigate
                            navigation_path: /lovelace/porte_mouv_serrure
                        - type: custom:button-card
                          entity: switch.prise_sirene
                          icon: mdi:bullhorn-variant
                          name: Sirène 110dB
                          template:
                            - ball_card
                            - security_card_state
                        - type: custom:button-card
                          entity: binary_sensor.sirene_alarm
                          icon: mdi:bullhorn
                          name: Sirène 85dB
                          template:
                            - ball_card
                            - security_card_state
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Direct
                  - icon: mdi:video
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: vertical-stack
                      cards:
                        - type: custom:webrtc-camera
                          entity: camera.camera_cuisine_hd_stream
                          muted: true
                          ui: true
                          background: true
                          shortcuts:
                            - name: Entrée
                              icon: mdi:door
                              service: script.camera_cuisine_preset_entree
                              data: {}
                            - name: Salon
                              icon: mdi:sofa
                              service: script.camera_cuisine_preset_centre
                              data: {}
                            - name: Chatière
                              icon: mdi:cat
                              service: script.camera_cuisine_preset_chatiere
                              data: {}
                          card_mod:
                            style: |
                              ha-card { 
                                margin: 0px 3px;
                                overflow: hidden !important;
                                border-radius: 15px !important;
                              }
                              ha-card > div.box {
                                display: none;
                              }
                        - type: grid
                          square: false
                          columns: 2
                          cards:
                            - type: custom:button-card
                              entity: switch.cameras_privacy_on_off
                              name: Privé
                              show_name: true
                              label: false
                              template:
                                - mini_card
                                - mini_card_state
                              tap_action:
                                confirmation:
                                  text: '[[[ return `Changer mode privé ?` ]]]'
                                action: toggle
                            - type: custom:button-card
                              entity: select.camera_cuisine_patrol_mode
                              name: Patrouille
                              show_name: true
                              label: false
                              template:
                                - mini_card
                              tap_action:
                                action: more-info
                        - type: custom:webrtc-camera
                          entity: camera.salon
                          muted: true
                          ui: true
                          background: true
                          card_mod:
                            style: |

                              ha-card { 
                                margin: 5px 0px 0px 0px;
                                border-radius: 24px !important;
                              }
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Enregistrements
                  - icon: mdi:filmstrip
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Cuisine" ]]]
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      square: false
                      columns: 2
                      type: grid
                      cards:
                        - show_state: false
                          show_name: false
                          camera_view: live
                          type: picture-entity
                          entity: camera.cuisine_detection
                          card_mod:
                            style: |
                              ha-card > div.box {
                                background: none;
                              }
                              ha-card { 
                                margin: 5px 0px 0px 0px;
                                border-radius: 18px !important;
                              }            
                        - show_state: false
                          show_name: false
                          camera_view: live
                          type: picture-entity
                          entity: camera.cuisine_verifiee
                          card_mod:
                            style: |
                              ha-card > div.box {
                                background: none;
                              }
                              ha-card { 
                                margin: 5px 0px 0px 0px;
                                border-radius: 18px !important;
                              }
                        - type: custom:decluttering-card
                          template: timestamp_camera
                          variables:
                            - input: input_datetime.horodatage_cam_salon_detection
                        - type: custom:decluttering-card
                          template: timestamp_camera
                          variables:
                            - input: input_datetime.horodatage_cam_cuisine
              - type: custom:button-card
                template: divider
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Salon" ]]]
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      square: false
                      columns: 2
                      type: grid
                      cards:
                        - show_state: false
                          show_name: false
                          camera_view: live
                          type: picture-entity
                          entity: camera.salon_detection
                          card_mod:
                            style: |
                              ha-card > div.box {
                                background: none;
                              }
                              ha-card { 
                                margin: 5px 0px 0px 0px;
                                border-radius: 18px !important;
                              }            
                        - show_state: false
                          show_name: false
                          camera_view: live
                          type: picture-entity
                          entity: camera.salon_verifiee
                          card_mod:
                            style: |
                              ha-card > div.box {
                                background: none;
                              }
                              ha-card { 
                                margin: 5px 0px 0px 0px;
                                border-radius: 18px !important;
                              }
                        - type: custom:decluttering-card
                          template: timestamp_camera
                          variables:
                            - input: input_datetime.horodatage_cam_salon_detection
                        - type: custom:decluttering-card
                          template: timestamp_camera
                          variables:
                            - input: input_datetime.horodatage_cam_salon
  - theme: Backend-selected
    subview: true
    icon: mdi:sofa
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    title: Sejour
    path: Séjour
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        cards:
          - type: entities
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Séjour
                  - icon: mdi:sofa
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          entity: sensor.netatmo_temperature_courante
                          template:
                            - badge_card
                            - temperature_state
                          label: |
                            [[[
                              return states['sensor.netatmo_temperature_courante'].state +"°"
                            ]]]
                          tap_action:
                            action: navigate
                            navigation_path: /Thermostat
                        - type: custom:button-card
                          entity: sensor.moniteur_qualite_air_hum_arrondie
                          label: |
                            [[[
                              return states['sensor.moniteur_qualite_air_hum_arrondie'].state+"%"
                            ]]]
                          template:
                            - badge_card
                            - humidity_state
                          tap_action:
                            action: more-info
              - type: custom:button-card
                template:
                  - title_card
                name: Appareils
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          entity: media_player.chromecast_salon
                          name: Chromecast
                          icon: mdi:television
                          template:
                            - ball_card
                            - card_state
                            - last_changed
                          show_label: true
                          show_state: false
                        - type: custom:button-card
                          entity: switch.on_off_parsecpi
                          name: ParsecPi
                          icon: mdi:raspberry-pi
                          template:
                            - ball_card
                            - card_state
                            - last_changed
                          show_label: true
                          show_state: false
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          entity: switch.pc_gamer
                          name: PC Gamer
                          icon: mdi:desktop-tower
                          template:
                            - ball_card
                            - card_state
                            - last_changed
                          show_label: true
                          show_state: false
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
        layout:
          width: 280
      - type: custom:layout-card
        layout_type: masonry
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Annonce" ]]]
              - type: custom:decluttering-card
                template: announce
                variables:
                  - entity: input_text.annonce_dans_sejour
                  - script: script.annonce_dans_sejour
        layout:
          width: 280
      - type: custom:layout-card
        layout_type: masonry
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Caméras
                  - icon: mdi:cctv
              - type: custom:webrtc-camera
                entity: camera.camera_cuisine_hd_stream
                muted: true
                ui: true
                background: true
                shortcuts:
                  - name: Entrée
                    icon: mdi:door
                    service: script.camera_cuisine_preset_entree
                    data: {}
                  - name: Salon
                    icon: mdi:sofa
                    service: script.camera_cuisine_preset_centre
                    data: {}
                  - name: Chatière
                    icon: mdi:cat
                    service: script.camera_cuisine_preset_chatiere
                    data: {}
                card_mod:
                  style: |

                    ha-card { 
                      margin: 5px 0px 0px 0px;
                      border-radius: 24px !important;
                    }
              - type: custom:webrtc-camera
                entity: camera.salon
                muted: true
                ui: true
                background: true
                card_mod:
                  style: |

                    ha-card { 
                      margin: 5px 0px 0px 0px;
                      border-radius: 24px !important;
                    }
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 border-radius: var(--ha-card-border-radius) !important;
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Relevé
                  - icon: mdi:chart-line
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:decluttering-card
                      template: graph
                      variables:
                        - temp: sensor.netatmo_temperature_courante
                        - hum: sensor.moniteur_qualite_air_humidity
        layout:
          width: 280
  - theme: Backend-selected
    subview: true
    icon: mdi:account
    title: Personnes
    path: Personnes
    layout:
      width: 350
      max_cols: 5
    type: custom:horizontal-layout
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 290
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:button-card
                variables:
                  entity: person.jeremy
                  state: '[[[ return states[''sensor.jeremy_gps''].state ]]]'
                  battery_level: sensor.pixel_6_jh_battery_level
                  battery_state: sensor.pixel_6_jh_battery_state
                  phone_tracker: device_tracker.pixel_6_jh
                  phone_connection: sensor.pixel_6_jh_network_type
                  phone_activity: sensor.pixel_6_jh_detected_activity
                  phone_focus: sensor.pixel_6_jh_do_not_disturb_sensor
                  gps: sensor.jeremy_gps
                  time: '[[[ return states[''sensor.jeremy_duree''].state ]]]'
                  proximity: '[[[ return states["sensor.proximity_jeremy"].state  ]]]'
                  trajet: '[[[ return states[''sensor.jeremy_trajet''].state ]]]'
                  trajet_travail: >-
                    [[[ return (states["sensor.jeremy_trajet_travail"].state ) 
                    ]]]
                  trajet_domicile: >-
                    [[[ return (states["sensor.jeremy_trajet_domicile"].state ) 
                    ]]]
                  destination: >-
                    [[[ if (states['person.jeremy'].state == "home") { return
                    "travail" } else { return "domicile" } ]]]
                entity: '[[[  return variables.entity ]]]'
                template:
                  - person_complete_card
                custom_fields:
                  sensor:
                    card:
                      cards:
                        - type: custom:button-card
                          template:
                            - mini_card
                            - mini_card_state
                          show_label: false
                          entity: '[[[  return variables.phone_connection ]]]'
                          icon: |
                            [[[
                              var sensor = variables.phone_connection;
                              if (sensor = "vpn") return 'mdi:wifi';
                              if (sensor = "cellular") return 'mdi:signal-cellular-3';
                            ]]]
                        - type: custom:button-card
                          template:
                            - mini_card
                            - mini_card_state
                          show_label: false
                          entity: '[[[  return variables.phone_activity ]]]'
                        - type: custom:button-card
                          template:
                            - mini_card
                            - mini_card_state
                          show_label: false
                          entity: '[[[  return variables.phone_focus ]]]'
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: device_tracker.jeremy_pc_gamer_ping
                          icon: mdi:desktop-tower
                          name: PC Gamer
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: device_tracker.c210_4b595f
                          icon: mdi:laptop
                          show_state: true
                          show_label: false
                          name: Tablette
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 290
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:button-card
                variables:
                  entity: person.emma
                  state: '[[[ return states[''sensor.emma_gps''].state ]]]'
                  battery_level: sensor.galaxy_s21_fe_battery_level
                  battery_state: sensor.galaxy_s21_fe_battery_state
                  phone_tracker: device_tracker.galaxy_s21_fe
                  phone_connection: sensor.galaxy_s21_fe_network_type
                  phone_activity: sensor.galaxy_s21_fe_detected_activity
                  phone_focus: binary_sensor.galaxy_s21_fe_doze_mode
                  gps: sensor.emma_gps
                  time: '[[[ return states[''sensor.emma_duree''].state ]]]'
                  proximity: '[[[ return states["sensor.proximity_emma"].state  ]]]'
                  trajet: '[[[ return states[''sensor.emma_trajet''].state ]]]'
                  trajet_travail: '[[[ return ""]]]'
                  trajet_domicile: >-
                    [[[ return (states["sensor.emma_trajet_domicile"].state ) 
                    ]]]
                  destination: >-
                    [[[ if (states['person.emma'].state == "home") { return
                    "travail" } else { return "domicile" } ]]]
                entity: '[[[  return variables.entity ]]]'
                template:
                  - person_complete_card
                custom_fields:
                  sensor:
                    card:
                      cards:
                        - type: custom:button-card
                          template:
                            - mini_card
                            - mini_card_state
                          show_label: false
                          entity: '[[[  return variables.phone_connection ]]]'
                          icon: |
                            [[[
                              var sensor = variables.phone_connection;
                              if (sensor = "vpn") return 'mdi:wifi';
                              if (sensor = "cellular") return 'mdi:signal-cellular-3';
                            ]]]
                        - type: custom:button-card
                          template:
                            - mini_card
                            - mini_card_state
                          show_label: false
                          entity: '[[[  return variables.phone_activity ]]]'
                        - type: custom:button-card
                          template:
                            - mini_card
                            - mini_card_state
                          show_label: false
                          entity: '[[[  return variables.phone_focus ]]]'
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: device_tracker.emma_pc_ping
                          icon: mdi:desktop-tower
                          name: PC Portable
  - theme: Backend-selected
    subview: true
    icon: mdi:door-open
    path: porte_mouv_serrure
    title: Portes mouv serrures
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Ouvertures
                  - icon: mdi:door-open
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ if (states['sensor.compteur_portes'].state < 2)
                    return states['sensor.compteur_portes'].state+" porte"         
                  return states['sensor.compteur_portes'].state+" portes" ]]]
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: grid
                      square: false
                      columns: 2
                      cards:
                        - type: custom:button-card
                          entity: binary_sensor.porte_entree_contact
                          name: Entrée
                          template:
                            - ball_card
                            - security_card_state
                            - last_changed
                            - custom_icon
                          show_label: true
                          show_state: false
                        - type: custom:button-card
                          entity: binary_sensor.porte_coin_nuit_contact
                          name: Coin nuit
                          template:
                            - ball_card
                            - security_card_state
                            - last_changed
                            - custom_icon
                          show_label: true
                          show_state: false
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Présence
                  - icon: mdi:run
              - type: custom:button-card
                template:
                  - title_card
                name: Séjour
              - type: custom:button-card
                template:
                  - around_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          entity: binary_sensor.camera_cuisine_cell_motion_detection
                          name: Cuisine
                          template:
                            - mini_card
                            - mini_card_state
                            - no_style
                          show_label: false
                          show_name: true
  - theme: Backend-selected
    subview: true
    path: Annonces
    title: Annonces
    icon: mdi:speaker-message
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                }
            entities:
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Séjour" ]]]                  
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:decluttering-card
                      template: announce
                      variables:
                        - entity: input_text.annonce_dans_sejour
                        - script: script.annonce_dans_sejour
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:decluttering-card
                      template: announce_volume
                      variables:
                        - entity: media_player.vlc_telnet
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Groupe Telegram" ]]]                  
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:decluttering-card
                      template: announce
                      variables:
                        - entity: input_text.annonce_telegram_group
                        - script: script.annonce_geralt_groupe
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
  - theme: Backend-selected
    subview: true
    title: SDB
    path: SDB
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:shower-head
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 }
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Relevés
                  - icon: mdi:chart-line
              - type: custom:vertical-stack-in-card
                card_mod:
                  style: |
                    ha-card { 
                      background-color: var(--card-background-color);
                    }
                cards:
                  - type: custom:decluttering-card
                    template: graph
                    variables:
                      - temp: sensor.thermo_sdb_temperature
                      - hum: sensor.thermo_sdb_humidity
  - theme: Backend-selected
    title: Entrée
    subview: true
    path: Entrée
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:spotlight-beam
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 border-radius: var(--ha-card-border-radius) !important;
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Entrée
                  - icon: mdi:home-outline
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Appareils" ]]] 
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          entity: device_tracker.cadrepi_ping
                          name: CadrePi
                          icon: mdi:laptop
                          template:
                            - ball_card
                            - card_state
                            - last_changed
                          show_label: true
                          show_state: false
                        - type: custom:button-card
                          entity: binary_sensor.porte_entree_contact
                          name: null
                          template:
                            - ball_card
                            - security_card_state
                            - last_changed
                            - custom_icon
                          show_label: true
                          show_state: false
  - theme: Backend-selected
    title: Chambre
    path: Chambre
    subview: true
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:bed-king
    badge_cards: []
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Chambre parentale
                  - icon: mdi:bed-king
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          entity: sensor.thermo_chambre_temperature
                          template:
                            - badge_card
                            - temperature_state
                          label: |
                            [[[
                              return states['sensor.thermo_chambre_temperature'].state+"°"
                            ]]]
                          tap_action:
                            action: more-info
                        - type: custom:button-card
                          entity: sensor.thermo_chambre_humidity
                          template:
                            - badge_card
                            - humidity_state
                          label: |
                            [[[
                              return states['sensor.thermo_chambre_humidity'].state+"%"
                            ]]]
                          tap_action:
                            action: more-info
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Appareils " ]]] 
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          entity: device_tracker.emma_pc_ping
                          name: PC Emma
                          icon: mdi:laptop
                          template:
                            - ball_card
                            - card_state
                            - last_changed
                          show_label: true
                          show_state: false
              - type: custom:button-card
                template: divider
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Lumières" ]]]       
              - type: custom:button-card
                template:
                  - slider_brightness
                  - no_style
                variables:
                  entity: light.lampe_chevet
                  slider: input_number.luminosite_lampe_chevet
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:button-card
                      variables:
                        entity: light.lampe_chevet
                      name: Lampe chevet
                      template:
                        - ball_light_card
                        - light_card_state
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Relevé
                  - icon: mdi:chart-line
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:decluttering-card
                      template: graph
                      variables:
                        - temp: sensor.thermo_chambre_temperature
                        - hum: sensor.thermo_chambre_humidity
  - theme: Backend-selected
    title: Petite Chambre
    path: petite_chambre
    subview: true
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:bed-single
    badge_cards: []
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Petite chambre
                  - icon: mdi:bed-single
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          entity: sensor.thermo_petite_chambre_temperature
                          template:
                            - badge_card
                            - temperature_state
                          label: |
                            [[[
                              return states['sensor.thermo_petite_chambre_temperature'].state+"°"
                            ]]]
                          tap_action:
                            action: more-info
                        - type: custom:button-card
                          entity: sensor.thermo_petite_chambre_humidity
                          template:
                            - badge_card
                            - humidity_state
                          label: |
                            [[[
                              return states['sensor.thermo_petite_chambre_humidity'].state+"%"
                            ]]]
                          tap_action:
                            action: more-info
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Appareils " ]]] 
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          entity: switch.prise_diffuseur_he
                          name: Diffuseur huiles essentielles
                          icon: mdi:air-humidifier
                          template:
                            - ball_card
                            - card_state
                            - last_changed
                          show_label: true
                          show_state: false
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Relevé
                  - icon: mdi:chart-line
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:decluttering-card
                      template: graph
                      variables:
                        - temp: sensor.thermo_petite_chambre_temperature
                        - hum: sensor.thermo_petite_chambre_humidity
  - theme: Backend-selected
    subview: true
    title: Système
    path: systeme
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:raspberry-pi
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 330
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Système
                  - icon: mdi:home-assistant
              - type: custom:button-card
                entity: sensor.uptime
                template:
                  - badge_card
                label: |
                  [[[
                    var sensorState = states['sensor.uptime'].state;
                    var date = new Date(sensorState);
                    var day = date.getDate();
                    var month = date.getMonth() + 1;
                    var year = date.getFullYear();
                    var hours = date.getHours();
                    var minutes = date.getMinutes();
                    var now = new Date();
                    var timeDifference = now - date;
                    var daysDiff = Math.floor(timeDifference / (24 * 3600000));
                    var hoursDiff = Math.floor((timeDifference % (24 * 3600000)) / 3600000);
                    var minutesDiff = Math.round((timeDifference % 3600000) / 60000);
                    
                    return "Démarré le " + (day < 10 ? '0' : '') + day + '/' + (month < 10 ? '0' : '') + month + '/' + year + ' à ' + (hours < 10 ? '0' : '') + hours + ':' + (minutes < 10 ? '0' : '') + minutes + ' (' + daysDiff + 'j ' + hoursDiff + 'h ' + minutesDiff + 'm)';
                  ]]]
                styles:
                  label:
                    - color: var(--text-off)
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:button-card
                      entity: sensor.cpu_temperature
                      name: >
                        [[[ return "TEMPERATURE
                        "+states['sensor.cpu_tendance_icon'].state ]]]          
                      template:
                        - no_style
                        - police
                      show_label: false
                      show_icon: false
                      show_state: true
                      styles:
                        name:
                          - font-size: 13px
                          - color: var(--text-off)
                          - justify-self: start
                          - padding-left: 70px
                          - margin-top: 0px
                        state:
                          - font-size: 13px
                          - color: var(--text-off)
                          - justify-self: start
                          - padding-left: 70px
                          - font-weight: 600
                        custom_fields:
                          gauge:
                            - position: absolute
                            - top: 10%
                            - left: 02%
                      custom_fields:
                        gauge:
                          card:
                            type: custom:hatc-gauge-card
                            entity: sensor.cpu_temperature
                            card:
                              height: 40px
                            title:
                              name: false
                              icon: false
                            gauge:
                              icon: false
                              state: false
                              font-size: 15px
                              text-color: severity
                              max_value: 100
                              friendly_name: false
                              unit_of_measurement: °
                              severity:
                                - color: var(--text-off)
                                - color: var(--blue)
                                  from: 0
                                  to: 60
                                - color: var(--yellow)
                                  from: 60.1
                                  to: 70
                                - color: var(--red)
                                  from: 70.1
                                  to: 100
                            card_mod:
                              style: |
                                ha-card {  
                                  background-color: none;
                                  background: none;
                                  box-shadow: none;
                                }
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: grid
                      square: false
                      columns: 1
                      cards:
                        - type: custom:button-card
                          variables:
                            entity: sensor.disk_use_percent
                          name: >
                            [[[ return "SSD
                            "+states['sensor.ssd_tendance_icon'].state ]]]
                          template:
                            - sensor_level_card
                        - type: custom:button-card
                          variables:
                            entity: sensor.processor_use
                          name: >
                            [[[ return "CPU
                            "+states['sensor.processor_tendance_icon'].state ]]]
                          template:
                            - sensor_level_card
                        - type: custom:button-card
                          variables:
                            entity: sensor.memory_use_percent
                          name: >
                            [[[ return "RAM
                            "+states['sensor.memory_tendance_icon'].state ]]]
                          template:
                            - sensor_level_card
                        - type: custom:button-card
                          variables:
                            entity: sensor.swap_use_percent
                          name: |
                            [[[ return "SWAP " ]]]
                          template:
                            - sensor_level_card
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:mini-graph-card
                      entities:
                        - color: rgba(200,200,200,0.5)
                          entity: sensor.memory_use_percent
                      name: Processeur
                      height: 100
                      line_width: 1
                      points_per_hour: 1
                      hours_to_show: 72
                      align_state: right
                      align_icon: right
                      min_bound_range: 2
                      smoothing: true
                      show:
                        fill: fade
                        icon: false
                        name: false
                        state: false
                        legend: false
                        points: false
                        labels: false
                      card_mod:
                        style: |
                          ha-card {  
                            opacity: 70%;
                            margin-top: -20px;
                            background-color: transparent;
                            box-shadow: none;
                            border-radius: 0px !important;
                          } 
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Freebox Mini 4K
                  - icon: mdi:router-wireless
              - type: custom:button-card
                entity: sensor.uptime
                template:
                  - badge_card
                label: |
                  [[[
                    var sensorState = states['sensor.freebox_uptime'].state;
                    var date = new Date(sensorState);
                    var day = date.getDate();
                    var month = date.getMonth() + 1;
                    var year = date.getFullYear();
                    var hours = date.getHours();
                    var minutes = date.getMinutes();
                    var now = new Date();
                    var timeDifference = now - date;
                    var daysDiff = Math.floor(timeDifference / (24 * 3600000));
                    var hoursDiff = Math.floor((timeDifference % (24 * 3600000)) / 3600000);
                    var minutesDiff = Math.round((timeDifference % 3600000) / 60000);
                    
                    return "Démarré le " + (day < 10 ? '0' : '') + day + '/' + (month < 10 ? '0' : '') + month + '/' + year + ' à ' + (hours < 10 ? '0' : '') + hours + ':' + (minutes < 10 ? '0' : '') + minutes + ' (' + daysDiff + 'j ' + hoursDiff + 'h ' + minutesDiff + 'm)';
                  ]]]
                styles:
                  label:
                    - color: var(--text-off)
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:button-card
                      entity: sensor.freebox_temp_moyenne
                      name: >
                        [[[ return "TEMPERATURE
                        "+states['sensor.freebox_cpu_tendance_icon'].state
                        ]]]          
                      template:
                        - no_style
                        - police
                      show_label: false
                      show_icon: false
                      show_state: true
                      styles:
                        name:
                          - font-size: 13px
                          - color: var(--text-off)
                          - justify-self: start
                          - padding-left: 70px
                          - margin-top: 0px
                        state:
                          - font-size: 13px
                          - color: var(--text-off)
                          - justify-self: start
                          - padding-left: 70px
                          - font-weight: 600
                        custom_fields:
                          gauge:
                            - position: absolute
                            - top: 10%
                            - left: 02%
                      custom_fields:
                        gauge:
                          card:
                            type: custom:hatc-gauge-card
                            entity: sensor.freebox_temp_moyenne
                            card:
                              height: 40px
                            title:
                              name: false
                              icon: false
                            gauge:
                              icon: false
                              state: false
                              font-size: 15px
                              text-color: severity
                              max_value: 100
                              friendly_name: false
                              unit_of_measurement: °
                              severity:
                                - color: var(--text-off)
                                - color: var(--blue)
                                  from: 0
                                  to: 60
                                - color: var(--yellow)
                                  from: 60.1
                                  to: 70
                                - color: var(--red)
                                  from: 70.1
                                  to: 100
                            card_mod:
                              style: |
                                ha-card {  
                                  background-color: none;
                                  background: none;
                                  box-shadow: none;
                                }
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: grid
                      square: false
                      columns: 1
                      cards:
                        - type: custom:button-card
                          variables:
                            entity: sensor.ssd_240go_disk_use_percent
                          name: >
                            [[[ return "SSD
                            "+states['sensor.freebox_ssd_tendance_icon'].state
                            ]]]
                          template:
                            - sensor_level_card
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:mini-graph-card
                      entities:
                        - color: rgba(200,200,200,0.5)
                          entity: sensor.freebox_temp_moyenne
                      name: Processeur
                      height: 100
                      line_width: 1
                      points_per_hour: 1
                      hours_to_show: 72
                      align_state: right
                      align_icon: right
                      min_bound_range: 2
                      smoothing: true
                      show:
                        fill: fade
                        icon: false
                        name: false
                        state: false
                        legend: false
                        points: false
                        labels: false
                      card_mod:
                        style: |
                          ha-card {  
                            opacity: 70%;
                            margin-top: -20px;
                            background-color: transparent;
                            box-shadow: none;
                            border-radius: 0px !important;
                          } 
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      square: false
                      columns: 2
                      type: grid
                      cards:
                        - type: custom:button-card
                          entity: binary_sensor.freebox_server_wan_status
                          name: Freebox
                          template:
                            - ball_card
                            - card_state
                        - type: custom:button-card
                          entity: switch.freebox_wifi
                          name: Wi-Fi
                          icon: mdi:wifi
                          template:
                            - ball_card
                            - card_state
                        - type: custom:button-card
                          entity: button.mark_calls_as_read
                          icon: mdi:phone
                          name: Appels
                          show_label: true
                          show_state: false
                          template:
                            - ball_card
                            - card_state
                          label: |
                            [[[ 
                              return states['sensor.freebox_missed_calls'].state
                            ]]]
                          styles:
                            card:
                              - background: |
                                  [[[
                                    var sensor = states['sensor.freebox_missed_calls'].state;
                                    if (sensor = 0) return 'var(--card-green)';
                                    if (sensor > 1) return 'var(--card-red)';
                                  ]]]
                            img_cell:
                              - background-color: |
                                  [[[
                                    var sensor = states['sensor.freebox_missed_calls'].state;
                                    if (sensor = 0) return 'var(--img-cell-green)';
                                    if (sensor > 1) return 'var(--img-cell-red)';
                                  ]]]
                            icon:
                              - color: |
                                  [[[
                                    var sensor = states['sensor.freebox_missed_calls'].state;
                                    if (sensor = 0) return 'var(--icon-green)';
                                    if (sensor > 1) return 'var(--icon-red)';
                                  ]]]
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 330
        cards:
          - type: conditional
            conditions:
              - condition: state
                entity: sensor.parsecpi_sensors_parsecpi_temperature
                state_not: unavailable
            card:
              type: entities
              card_mod:
                style: |
                  ha-card { 
                   background-color: var(--card-background-color);
                   } 
              entities:
                - type: custom:decluttering-card
                  template: header
                  variables:
                    - name: ParsecPi
                    - icon: mdi:raspberry-pi
                - type: custom:button-card
                  entity: sensor.uptime
                  template:
                    - badge_card
                  label: |
                    [[[
                      var sensorState = states['sensor.parsecpi_sensors_parsecpi_last_boot'].state;
                      var date = new Date(sensorState);
                      var day = date.getDate();
                      var month = date.getMonth() + 1;
                      var year = date.getFullYear();
                      var hours = date.getHours();
                      var minutes = date.getMinutes();
                      var now = new Date();
                      var timeDifference = now - date;
                      var daysDiff = Math.floor(timeDifference / (24 * 3600000));
                      var hoursDiff = Math.floor((timeDifference % (24 * 3600000)) / 3600000);
                      var minutesDiff = Math.round((timeDifference % 3600000) / 60000);
                      
                      return "Démarré le " + (day < 10 ? '0' : '') + day + '/' + (month < 10 ? '0' : '') + month + '/' + year + ' à ' + (hours < 10 ? '0' : '') + hours + ':' + (minutes < 10 ? '0' : '') + minutes + ' (' + daysDiff + 'j ' + hoursDiff + 'h ' + minutesDiff + 'm)';
                    ]]]
                  styles:
                    label:
                      - color: var(--text-off)
                - type: custom:button-card
                  template:
                    - around_card
                    - around_clear_card
                  custom_fields:
                    info:
                      card:
                        type: custom:button-card
                        entity: sensor.parsecpi_sensors_parsecpi_temperature
                        name: >
                          [[[ return "TEMPERATURE
                          "+states['sensor.parsecpi_cpu_tendance_icon'].state
                          ]]]          
                        template:
                          - no_style
                          - police
                        show_label: false
                        show_icon: false
                        show_state: true
                        styles:
                          name:
                            - font-size: 13px
                            - color: var(--text-off)
                            - justify-self: start
                            - padding-left: 70px
                            - margin-top: 0px
                          state:
                            - font-size: 13px
                            - color: var(--text-off)
                            - justify-self: start
                            - padding-left: 70px
                            - font-weight: 600
                          custom_fields:
                            gauge:
                              - position: absolute
                              - top: 10%
                              - left: 02%
                        custom_fields:
                          gauge:
                            card:
                              type: custom:hatc-gauge-card
                              entity: sensor.parsecpi_sensors_parsecpi_temperature
                              card:
                                height: 40px
                              title:
                                name: false
                                icon: false
                              gauge:
                                icon: false
                                state: false
                                font-size: 15px
                                text-color: severity
                                max_value: 100
                                friendly_name: false
                                unit_of_measurement: °
                                severity:
                                  - color: var(--text-off)
                                  - color: var(--blue)
                                    from: 0
                                    to: 60
                                  - color: var(--yellow)
                                    from: 60.1
                                    to: 70
                                  - color: var(--red)
                                    from: 70.1
                                    to: 100
                              card_mod:
                                style: |
                                  ha-card {  
                                    background-color: none;
                                    background: none;
                                    box-shadow: none;
                                  }
                - type: custom:button-card
                  template:
                    - around_card
                    - around_clear_card
                  custom_fields:
                    info:
                      card:
                        type: grid
                        square: false
                        columns: 1
                        cards:
                          - type: custom:button-card
                            variables:
                              entity: sensor.parsecpi_sensors_parsecpi_disk_use
                            name: >
                              [[[ return "SD
                              "+states['sensor.parsecpi_sd_tendance_icon'].state
                              ]]]
                            template:
                              - sensor_level_card
                          - type: custom:button-card
                            variables:
                              entity: sensor.parsecpi_sensors_parsecpi_cpu_usage
                            name: >
                              [[[ return "CPU
                              "+states['sensor.parsecpi_processor_tendance_icon'].state
                              ]]]
                            template:
                              - sensor_level_card
                          - type: custom:button-card
                            variables:
                              entity: sensor.parsecpi_sensors_parsecpi_memory_use
                            name: >
                              [[[ return "RAM
                              "+states['sensor.parsecpi_memory_tendance_icon'].state
                              ]]]
                            template:
                              - sensor_level_card
                - type: custom:button-card
                  template:
                    - around_card
                    - around_clear_card
                  custom_fields:
                    info:
                      card:
                        type: custom:mini-graph-card
                        entities:
                          - color: rgba(200,200,200,0.5)
                            entity: sensor.parsecpi_sensors_parsecpi_temperature
                        name: Processeur
                        height: 100
                        line_width: 1
                        points_per_hour: 1
                        hours_to_show: 72
                        align_state: right
                        align_icon: right
                        min_bound_range: 2
                        smoothing: true
                        show:
                          fill: fade
                          icon: false
                          name: false
                          state: false
                          legend: false
                          points: false
                          labels: false
                        card_mod:
                          style: |
                            ha-card {  
                              opacity: 70%;
                              margin-top: -20px;
                              background-color: transparent;
                              box-shadow: none;
                              border-radius: 0px !important;
                            } 
                - type: custom:button-card
                  template:
                    - around_card
                    - around_clear_card
                  custom_fields:
                    info:
                      card:
                        square: false
                        columns: 1
                        type: grid
                        cards:
                          - type: custom:button-card
                            entity: >-
                              binary_sensor.parsecpi_sensors_parsecpi_under_voltage
                            name: Alim RPi
                            icon: mdi:raspberry-pi
                            template:
                              - ball_card
                              - card_state
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Eaton 3S 550
                  - icon: mdi:sine-wave
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: grid
                      square: false
                      columns: 2
                      cards:
                        - type: custom:button-card
                          entity: sensor.eaton3s550_autonomie_de_la_batterie
                          name: Autonomie batterie
                          template:
                            - ball_card
                        - type: custom:button-card
                          entity: sensor.eaton3s550_tension_de_sortie
                          name: Tension
                          template:
                            - ball_card
                        - type: custom:button-card
                          entity: sensor.etat_onduleur
                          name: Onduleur
                          template:
                            - ball_card
                          styles:
                            card:
                              - background: |
                                  [[[
                                    var sensor = states['sensor.etat_onduleur'].state;
                                    if (sensor = "Sur secteur") return 'var(--card-green)';
                                    if (sensor = "Sur batterie") return 'var(--card-red)';
                                  ]]]
                            img_cell:
                              - background-color: |
                                  [[[
                                    var sensor = states['sensor.etat_onduleur'].state;
                                    if (sensor = "Sur secteur") return 'var(--img-cell-green)';
                                    if (sensor = "Sur batterie") return 'var(--img-cell-red)';
                                  ]]]
                            icon:
                              - color: |
                                  [[[
                                    var sensor = states['sensor.etat_onduleur'].state;
                                    if (sensor = "Sur secteur") return 'var(--icon-green)';
                                    if (sensor = "Sur batterie") return 'var(--icon-red)';
                                  ]]]
                              - animation: |
                                  [[[
                                    var sensor = states['sensor.etat_onduleur'].state;
                                    if (sensor = "Sur secteur") return '';
                                    if (sensor = "Sur batterie") return 'blink 0.8s ease infinite';
                                  ]]]
                        - type: custom:button-card
                          entity: sensor.eaton3s550_puissance_reelle_actuelle
                          name: Puissance actuelle
                          template:
                            - ball_card
                        - type: custom:button-card
                          entity: sensor.eaton3s550_charge
                          name: Charge onduleur
                          template:
                            - ball_card
                          styles:
                            card:
                              - background: |
                                  [[[
                                    var sensor = states['sensor.eaton3s550_charge'].state;
                                    if (sensor > 80) return 'var(--card-red)';
                                    if (sensor > 60) return 'var(--card-orange)';
                                    if (sensor > 40) return 'var(--card-yellow)';
                                    if (sensor > 20) return 'var(--card-blue)';
                                    if (sensor <= 20) return 'var(--card-green)';
                                  ]]]
                            img_cell:
                              - background-color: |
                                  [[[
                                    var sensor = states['sensor.eaton3s550_charge'].state;
                                    if (sensor > 80) return 'var(--img-cell-red)';
                                    if (sensor > 60) return 'var(--img-cell-orange)';
                                    if (sensor > 40) return 'var(--img-cell-yellow)';
                                    if (sensor > 20) return 'var(--img-cell-blue)';
                                    if (sensor <= 20) return 'var(--img-cell-green)';
                                  ]]]
                            icon:
                              - color: |
                                  [[[
                                    var sensor = states['sensor.eaton3s550_charge'].state;
                                    if (sensor > 80) return 'var(--icon-red)';
                                    if (sensor > 60) return 'var(--icon-orange)';
                                    if (sensor > 40) return 'var(--icon-yellow)';
                                    if (sensor > 20) return 'var(--icon-blue)';
                                    if (sensor <= 20) return 'var(--icon-green)';
                                  ]]]
                        - type: custom:button-card
                          entity: sensor.eaton3s550_charge_de_la_batterie
                          name: Charge batterie
                          template:
                            - ball_card
                          styles:
                            card:
                              - background: |
                                  [[[
                                    var sensor = states['sensor.eaton3s550_charge_de_la_batterie'].state;
                                    if (sensor > 80) return 'var(--card-green)';
                                    if (sensor > 60) return 'var(--card-blue)';
                                    if (sensor > 40) return 'var(--card-yellow)';
                                    if (sensor > 20) return 'var(--card-orange)';
                                    if (sensor <= 20) return 'var(--card-red)';
                                  ]]]
                            img_cell:
                              - background-color: |
                                  [[[
                                    var sensor = states['sensor.eaton3s550_charge_de_la_batterie'].state;
                                    if (sensor > 80) return 'var(--img-cell-green)';
                                    if (sensor > 60) return 'var(--img-cell-blue)';
                                    if (sensor > 40) return 'var(--img-cell-yellow)';
                                    if (sensor > 20) return 'var(--img-cell-orange)';
                                    if (sensor <= 20) return 'var(--img-cell-red)';
                                  ]]]
                            icon:
                              - color: |
                                  [[[
                                    var sensor = states['sensor.eaton3s550_charge_de_la_batterie'].state;
                                    if (sensor > 80) return 'var(--icon-green)';
                                    if (sensor > 60) return 'var(--icon-blue)';
                                    if (sensor > 40) return 'var(--icon-yellow)';
                                    if (sensor > 20) return 'var(--icon-orange)';
                                    if (sensor <= 20) return 'var(--icon-red)';
                                  ]]]
                              - animation: |
                                  [[[
                                    var sensor = states['sensor.eaton3s550_charge_de_la_batterie'].state;
                                    if (sensor > 20) return '';
                                    if (sensor <= 30) return 'blink 0.8s ease infinite';
                                  ]]]
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 330
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Maintenance
                  - icon: mdi:wrench
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      square: false
                      columns: 2
                      type: grid
                      cards:
                        - type: custom:button-card
                          icon: mdi:home-assistant
                          entity: script.backup_full_ha
                          name: Sauvegarde HA
                          label: |
                            [[[
                              const lastTriggered = states['script.backup_full_ha'].attributes.last_triggered;
                              if (lastTriggered) {
                                const duration = Math.floor((new Date() - new Date(lastTriggered)) / 1000);
                                const hours = Math.floor(duration / 3600);
                                const minutes = Math.floor((duration % 3600) / 60);
                                const seconds = duration % 60;
                                return `${hours > 0 ? hours + 'h ' : ''}${minutes > 0 ? minutes + 'm ' : ''}${seconds}s`;
                              } else {
                                return 'Jamais';
                              }
                            ]]]
                          template:
                            - ball_card
                            - card_state
                          show_label: true
                          show_state: false
                          tap_action:
                            confirmation:
                              text: '[[[ return `Sauvegarde HA ?` ]]]'
                            action: call-service
                            service: script.turn_on
                            service_data:
                              entity_id: script.backup_full_ha
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          show_label: true
                          show_state: false
                          icon: mdi:restart
                          entity: script.ha_reboot
                          name: Redémarrer HA
                          label: |
                            [[[
                              const lastTriggered = states['script.ha_reboot'].attributes.last_triggered;
                              if (lastTriggered) {
                                const duration = Math.floor((new Date() - new Date(lastTriggered)) / 1000);
                                const hours = Math.floor(duration / 3600);
                                const minutes = Math.floor((duration % 3600) / 60);
                                const seconds = duration % 60;
                                return `${hours > 0 ? hours + 'h ' : ''}${minutes > 0 ? minutes + 'm ' : ''}${seconds}s`;
                              } else {
                                return 'Jamais';
                              }
                            ]]]
                          tap_action:
                            confirmation:
                              text: '[[[ return `Redémarrer HA ?` ]]]'
                            action: call-service
                            service: script.turn_on
                            service_data:
                              entity_id: script.ha_reboot
                        - type: custom:button-card
                          icon: mdi:home-assistant
                          entity: button.reboot_freebox
                          name: Redémarrer Freebox
                          label: |
                            [[[
                              const lastTriggered = states['button.reboot_freebox'].attributes.last_triggered;
                              if (lastTriggered) {
                                const duration = Math.floor((new Date() - new Date(lastTriggered)) / 1000);
                                const hours = Math.floor(duration / 3600);
                                const minutes = Math.floor((duration % 3600) / 60);
                                const seconds = duration % 60;
                                return `${hours > 0 ? hours + 'h ' : ''}${minutes > 0 ? minutes + 'm ' : ''}${seconds}s`;
                              } else {
                                return 'Jamais';
                              }
                            ]]]
                          template:
                            - ball_card
                          show_label: true
                          show_state: false
                          tap_action:
                            confirmation:
                              text: '[[[ return `Redémarrer Freebox ?` ]]]'
                            service: button.press
                            target:
                              entity_id: button.reboot_freebox
                            data: {}
                        - type: custom:button-card
                          icon: mdi:home-assistant
                          entity: button.camera_cuisine_reboot
                          name: Redémarrer C210
                          label: |
                            [[[
                              const lastTriggered = states['button.camera_cuisine_reboot'].attributes.last_triggered;
                              if (lastTriggered) {
                                const duration = Math.floor((new Date() - new Date(lastTriggered)) / 1000);
                                const hours = Math.floor(duration / 3600);
                                const minutes = Math.floor((duration % 3600) / 60);
                                const seconds = duration % 60;
                                return `${hours > 0 ? hours + 'h ' : ''}${minutes > 0 ? minutes + 'm ' : ''}${seconds}s`;
                              } else {
                                return 'Jamais';
                              }
                            ]]]
                          template:
                            - ball_card
                          show_label: true
                          show_state: false
                          tap_action:
                            confirmation:
                              text: '[[[ return `Redémarrer C210 ?` ]]]'
                            service: button.press
                            target:
                              entity_id: button.camera_cuisine_reboot
                          data: {}
                        - type: custom:button-card
                          icon: mdi:home-assistant
                          entity: button.vitrine_restart
                          name: Redémarrer Vitrine
                          label: |
                            [[[
                              const lastTriggered = states['button.vitrine_restart'].attributes.last_triggered;
                              if (lastTriggered) {
                                const duration = Math.floor((new Date() - new Date(lastTriggered)) / 1000);
                                const hours = Math.floor(duration / 3600);
                                const minutes = Math.floor((duration % 3600) / 60);
                                const seconds = duration % 60;
                                return `${hours > 0 ? hours + 'h ' : ''}${minutes > 0 ? minutes + 'm ' : ''}${seconds}s`;
                              } else {
                                return 'Jamais';
                              }
                            ]]]
                          template:
                            - ball_card
                          show_label: true
                          show_state: false
                          tap_action:
                            confirmation:
                              text: '[[[ return `Redémarrer Vitrine ?` ]]]'
                            service: button.press
                            target:
                              entity_id: button.vitrine_restart
                            data: {}
                        - type: custom:button-card
                          icon: mdi:home-assistant
                          entity: button.google_assistant_synchroniser_les_appareils
                          name: MàJ Google Home
                          label: |
                            [[[
                              const lastTriggered = states['button.google_assistant_synchroniser_les_appareils'].attributes.last_triggered;
                              if (lastTriggered) {
                                const duration = Math.floor((new Date() - new Date(lastTriggered)) / 1000);
                                const hours = Math.floor(duration / 3600);
                                const minutes = Math.floor((duration % 3600) / 60);
                                const seconds = duration % 60;
                                return `${hours > 0 ? hours + 'h ' : ''}${minutes > 0 ? minutes + 'm ' : ''}${seconds}s`;
                              } else {
                                return 'Jamais';
                              }
                            ]]]
                          template:
                            - ball_card
                          show_label: true
                          show_state: false
                          tap_action:
                            confirmation:
                              text: >-
                                [[[ return `Redémarrer MàJ appareils Google Home
                                ?` ]]]
                            action: call-service
                            service: button.press
                            target:
                              entity_id: >-
                                button.google_assistant_synchroniser_les_appareils
                            data: {}
              - type: custom:button-card
                template: divider
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      square: false
                      columns: 2
                      type: grid
                      cards:
                        - type: custom:button-card
                          icon: mdi:home-assistant
                          entity: script.yaml_reload
                          name: Recharger YAML
                          label: |
                            [[[
                              const lastTriggered = states['script.yaml_reload'].attributes.last_triggered;
                              if (lastTriggered) {
                                const duration = Math.floor((new Date() - new Date(lastTriggered)) / 1000);
                                const hours = Math.floor(duration / 3600);
                                const minutes = Math.floor((duration % 3600) / 60);
                                const seconds = duration % 60;
                                return `${hours > 0 ? hours + 'h ' : ''}${minutes > 0 ? minutes + 'm ' : ''}${seconds}s`;
                              } else {
                                return 'Jamais';
                              }
                            ]]]
                          template:
                            - ball_card
                          show_label: true
                          show_state: false
                          tap_action:
                            confirmation:
                              text: '[[[ return `Recharger YAML ?` ]]]'
                            action: call-service
                            service: script.turn_on
                            service_data:
                              entity_id: script.yaml_reload
                        - type: custom:button-card
                          icon: mdi:home-assistant
                          entity: script.template_reload
                          name: Recharger Templates
                          label: |
                            [[[
                              const lastTriggered = states['script.template_reload'].attributes.last_triggered;
                              if (lastTriggered) {
                                const duration = Math.floor((new Date() - new Date(lastTriggered)) / 1000);
                                const hours = Math.floor(duration / 3600);
                                const minutes = Math.floor((duration % 3600) / 60);
                                const seconds = duration % 60;
                                return `${hours > 0 ? hours + 'h ' : ''}${minutes > 0 ? minutes + 'm ' : ''}${seconds}s`;
                              } else {
                                return 'Jamais';
                              }
                            ]]]
                          template:
                            - ball_card
                          show_label: true
                          show_state: false
                          tap_action:
                            confirmation:
                              text: '[[[ return `Recharger Templates ?` ]]]'
                            action: call-service
                            service: script.turn_on
                            service_data:
                              entity_id: script.template_reload
              - type: custom:button-card
                template: divider
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:button-card
                      entity: sensor.systeme_avertissement
                      show_label: true
                      show_name: false
                      show_state: false
                      show_icon: false
                      template:
                        - police
                      label: |
                        [[[
                          if (states['sensor.systeme_avertissement'].state == 'OK')
                            return "Aucun avertissement"
                          return "AVERTISSEMENT <br><br>"+states['sensor.systeme_avertissement'].state
                        ]]]
                      styles:
                        label:
                          - justify-self: start
                          - text-align: left
                        card:
                          - font-size: 13px
                          - padding: 10px
                          - background-color: |
                              [[[
                                if (states['sensor.systeme_avertissement'].state == 'OK')
                                  return ""
                                return "var(--card-red)"
                              ]]]                          
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 330
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Mises à jour
                  - icon: mdi:update
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      square: false
                      type: grid
                      cards:
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: update.home_assistant_core_update
                          icon: mdi:home-assistant
                          name: Core
                          custom_fields:
                            jauge-cercle:
                              card:
                                type: custom:hatc-gauge-card
                                entity: sensor.home_assistant_core_memory_percent
                                card:
                                  height: 35px
                                title:
                                  name: false
                                  icon: false
                                gauge:
                                  icon: false
                                  font-size: 10px
                                  text-color: severity
                                  max_value: 100
                                  friendly_name: false
                                  unit_of_measurement: false
                                  severity:
                                    - color: var(--text-off)
                                    - color: var(--blue)
                                      from: 0
                                      to: 30
                                    - color: var(--yellow)
                                      from: 31
                                      to: 50
                                    - color: var(--red)
                                      from: 50
                                      to: 100
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: update.home_assistant_supervisor_update
                          icon: mdi:home-assistant
                          name: Supervisor
                          custom_fields:
                            jauge-cercle:
                              card:
                                type: custom:hatc-gauge-card
                                entity: >-
                                  sensor.home_assistant_supervisor_memory_percent
                                card:
                                  height: 35px
                                title:
                                  name: false
                                  icon: false
                                gauge:
                                  icon: false
                                  font-size: 10px
                                  text-color: severity
                                  max_value: 100
                                  friendly_name: false
                                  unit_of_measurement: false
                                  severity:
                                    - color: var(--text-off)
                                    - color: var(--blue)
                                      from: 0
                                      to: 30
                                    - color: var(--yellow)
                                      from: 31
                                      to: 50
                                    - color: var(--red)
                                      from: 50
                                      to: 100
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: update.home_assistant_operating_system_update
                          icon: mdi:home-assistant
                          name: HAOS
                        - type: custom:button-card
                          template:
                            - ball_card
                          show_label: true
                          show_state: false
                          entity: sensor.hacs
                          icon: mdi:package
                          name: HACS
                          label: |
                            [[[
                              if (states['sensor.hacs'].state > 0)
                                return states['sensor.hacs'].state+" mises à jour"
                              return '0 mise à jour'
                            ]]]
                          styles:
                            card:
                              - background-color: |
                                  [[[
                                    if (states['sensor.hacs'].state > 0)
                                      return "var(--card-blue)"
                                    return ""
                                  ]]]                 
                            icon:
                              - color: |
                                  [[[
                                    if (states['sensor.hacs'].state > 0)
                                      return 'var(--icon-blue)'
                                    return 'var(--icon-off)'
                                  ]]]
                            img_cell:
                              - background-color: |
                                  [[[
                                    if (states['sensor.hacs'].state > 0)
                                      return 'var(--img-cell-blue)'
                                    return 'var(--img-cell-off)'
                                  ]]]
                          tap_action:
                            confirmation:
                              text: '[[[ return `Redirection vers HACS ?` ]]]'
                            action: navigate
                            navigation_path: /hacs/entry
                      columns: 2
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: conditional
                      conditions:
                        - entity: sensor.hacs
                          state_not: '0'
                      card:
                        type: custom:button-card
                        template:
                          - around_card
                          - around_clear_card
                        custom_fields:
                          info:
                            card:
                              type: markdown
                              content: >
                                {% if states('sensor.hacs') | float == 0  -%}
                                 Aucune mise à jour{%- else  %} 
                                 Mise à jour HACS :<b>
                                 {%
                                for repo in
                                states.sensor.hacs.attributes.repositories -%} •
                                {{ repo.display_name }} ({{
                                repo["available_version"] }}) <br> {% endfor %} 
                                {%- endif -%}
                              card_mod:
                                style: |
                                  ha-card {
                                    font-size: 13px;
                                    color: var(--text-on);
                                    font-family: var(--primary-font-family);
                                    background-color: 
                                      {% if states.sensor.hacs.state | float(0) == 0 %}  
                                        "";
                                      {% else %} 
                                        var(--card-red)
                                      {% endif %}
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Addons principaux
                  - icon: mdi:update
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: grid
                      columns: 2
                      square: false
                      cards:
                        - type: custom:button-card
                          entity: update.doods2_update
                          name: Doods2
                          icon: mdi:face-recognition
                          template:
                            - ball_card
                            - card_state
                          custom_fields:
                            jauge-cercle:
                              card:
                                type: custom:hatc-gauge-card
                                entity: sensor.doods2_memory_percent
                                card:
                                  height: 35px
                                title:
                                  name: false
                                  icon: false
                                gauge:
                                  icon: false
                                  font-size: 10px
                                  text-color: severity
                                  max_value: 100
                                  friendly_name: false
                                  unit_of_measurement: false
                                  severity:
                                    - color: var(--text-off)
                                    - color: var(--blue)
                                      from: 0
                                      to: 30
                                    - color: var(--yellow)
                                      from: 31
                                      to: 50
                                    - color: var(--red)
                                      from: 50
                                      to: 100
                        - type: custom:button-card
                          entity: update.motioneye_update
                          name: motionEye
                          icon: mdi:owl
                          template:
                            - ball_card
                            - card_state
                          custom_fields:
                            jauge-cercle:
                              card:
                                type: custom:hatc-gauge-card
                                entity: sensor.motioneye_memory_percent
                                card:
                                  height: 35px
                                title:
                                  name: false
                                  icon: false
                                gauge:
                                  icon: false
                                  font-size: 10px
                                  text-color: severity
                                  max_value: 100
                                  friendly_name: false
                                  unit_of_measurement: false
                                  severity:
                                    - color: var(--text-off)
                                    - color: var(--blue)
                                      from: 0
                                      to: 30
                                    - color: var(--yellow)
                                      from: 31
                                      to: 50
                                    - color: var(--red)
                                      from: 50
                                      to: 100
                        - type: custom:button-card
                          entity: update.myelectricaldata_update
                          name: MyElectricalData
                          icon: mdi:flash
                          template:
                            - ball_card
                            - card_state
                          custom_fields:
                            jauge-cercle:
                              card:
                                type: custom:hatc-gauge-card
                                entity: sensor.myelectricaldata_pourcentage_de_memoire
                                card:
                                  height: 35px
                                title:
                                  name: false
                                  icon: false
                                gauge:
                                  icon: false
                                  font-size: 10px
                                  text-color: severity
                                  max_value: 100
                                  friendly_name: false
                                  unit_of_measurement: false
                                  severity:
                                    - color: var(--text-off)
                                    - color: var(--blue)
                                      from: 0
                                      to: 30
                                    - color: var(--yellow)
                                      from: 31
                                      to: 50
                                    - color: var(--red)
                                      from: 50
                                      to: 100
                        - type: custom:button-card
                          entity: update.mariadb_update
                          name: MariaDB
                          icon: mdi:database
                          label: >
                            [[[ return states['sensor.mariadb_ha_size'].state+"
                            MB"

                            ]]]
                          show_state: false
                          show_label: true
                          template:
                            - ball_card
                            - card_state
                          custom_fields:
                            jauge-cercle:
                              card:
                                type: custom:hatc-gauge-card
                                entity: sensor.mariadb_memory_percent
                                card:
                                  height: 35px
                                title:
                                  name: false
                                  icon: false
                                gauge:
                                  icon: false
                                  font-size: 10px
                                  text-color: severity
                                  max_value: 100
                                  friendly_name: false
                                  unit_of_measurement: false
                                  severity:
                                    - color: var(--text-off)
                                    - color: var(--blue)
                                      from: 0
                                      to: 30
                                    - color: var(--yellow)
                                      from: 31
                                      to: 50
                                    - color: var(--red)
                                      from: 50
                                      to: 100
                        - type: custom:button-card
                          entity: update.studio_code_server_update
                          name: Studio Code
                          icon: mdi:code-array
                          template:
                            - ball_card
                            - card_state
                          custom_fields:
                            jauge-cercle:
                              card:
                                type: custom:hatc-gauge-card
                                entity: sensor.studio_code_server_memory_percent
                                card:
                                  height: 35px
                                title:
                                  name: false
                                  icon: false
                                gauge:
                                  icon: false
                                  font-size: 10px
                                  text-color: severity
                                  max_value: 100
                                  friendly_name: false
                                  unit_of_measurement: false
                                  severity:
                                    - color: var(--text-off)
                                    - color: var(--blue)
                                      from: 0
                                      to: 30
                                    - color: var(--yellow)
                                      from: 31
                                      to: 50
                                    - color: var(--red)
                                      from: 50
                                      to: 100
                        - type: custom:button-card
                          entity: update.zigbee2mqtt_update
                          name: Zigbee2MQTT
                          icon: mdi:zigbee
                          template:
                            - ball_card
                            - card_state
                          custom_fields:
                            jauge-cercle:
                              card:
                                type: custom:hatc-gauge-card
                                entity: sensor.zigbee2mqtt_pourcentage_de_memoire
                                card:
                                  height: 35px
                                title:
                                  name: false
                                  icon: false
                                gauge:
                                  icon: false
                                  font-size: 10px
                                  text-color: severity
                                  max_value: 100
                                  friendly_name: false
                                  unit_of_measurement: false
                                  severity:
                                    - color: var(--text-off)
                                    - color: var(--blue)
                                      from: 0
                                      to: 30
                                    - color: var(--yellow)
                                      from: 31
                                      to: 50
                                    - color: var(--red)
                                      from: 50
                                      to: 100
                        - type: custom:button-card
                          entity: update.mosquitto_broker_update
                          name: MQTT Broker
                          icon: mdi:message-bulleted
                          template:
                            - ball_card
                            - card_state
                          custom_fields:
                            jauge-cercle:
                              card:
                                type: custom:hatc-gauge-card
                                entity: sensor.mosquitto_broker_memory_percent
                                card:
                                  height: 35px
                                title:
                                  name: false
                                  icon: false
                                gauge:
                                  icon: false
                                  font-size: 10px
                                  text-color: severity
                                  max_value: 100
                                  friendly_name: false
                                  unit_of_measurement: false
                                  severity:
                                    - color: var(--text-off)
                                    - color: var(--blue)
                                      from: 0
                                      to: 30
                                    - color: var(--yellow)
                                      from: 31
                                      to: 50
                                    - color: var(--red)
                                      from: 50
                                      to: 100
                        - type: custom:button-card
                          entity: update.adguard_home_update
                          name: AdGuard
                          icon: mdi:shield-account
                          template:
                            - ball_card
                            - card_state
                          custom_fields:
                            jauge-cercle:
                              card:
                                type: custom:hatc-gauge-card
                                entity: sensor.adguard_home_memory_percent
                                card:
                                  height: 35px
                                title:
                                  name: false
                                  icon: false
                                gauge:
                                  icon: false
                                  font-size: 10px
                                  text-color: severity
                                  max_value: 100
                                  friendly_name: false
                                  unit_of_measurement: false
                                  severity:
                                    - color: var(--text-off)
                                    - color: var(--blue)
                                      from: 0
                                      to: 30
                                    - color: var(--yellow)
                                      from: 31
                                      to: 50
                                    - color: var(--red)
                                      from: 50
                                      to: 100
                        - type: custom:button-card
                          entity: update.home_assistant_google_drive_backup_update
                          name: G. Drive
                          icon: mdi:google-drive
                          template:
                            - ball_card
                            - card_state
                          custom_fields:
                            jauge-cercle:
                              card:
                                type: custom:hatc-gauge-card
                                entity: >-
                                  sensor.home_assistant_google_drive_backup_memory_percent
                                card:
                                  height: 35px
                                title:
                                  name: false
                                  icon: false
                                gauge:
                                  icon: false
                                  font-size: 10px
                                  text-color: severity
                                  max_value: 100
                                  friendly_name: false
                                  unit_of_measurement: false
                                  severity:
                                    - color: var(--text-off)
                                    - color: var(--blue)
                                      from: 0
                                      to: 30
                                    - color: var(--yellow)
                                      from: 31
                                      to: 50
                                    - color: var(--red)
                                      from: 50
                                      to: 100
                        - type: custom:button-card
                          entity: update.samba_share_update
                          name: Samba
                          icon: mdi:share-all
                          template:
                            - ball_card
                            - card_state
                          custom_fields:
                            jauge-cercle:
                              card:
                                type: custom:hatc-gauge-card
                                entity: sensor.samba_share_memory_percent
                                card:
                                  height: 35px
                                title:
                                  name: false
                                  icon: false
                                gauge:
                                  icon: false
                                  font-size: 10px
                                  text-color: severity
                                  max_value: 100
                                  friendly_name: false
                                  unit_of_measurement: false
                                  severity:
                                    - color: var(--text-off)
                                    - color: var(--blue)
                                      from: 0
                                      to: 30
                                    - color: var(--yellow)
                                      from: 31
                                      to: 50
                                    - color: var(--red)
                                      from: 50
                                      to: 100
                        - type: custom:button-card
                          entity: update.file_editor_update
                          name: File Editor
                          icon: mdi:file-edit
                          template:
                            - ball_card
                            - card_state
                          custom_fields:
                            jauge-cercle:
                              card:
                                type: custom:hatc-gauge-card
                                entity: sensor.file_editor_memory_percent
                                card:
                                  height: 35px
                                title:
                                  name: false
                                  icon: false
                                gauge:
                                  icon: false
                                  font-size: 10px
                                  text-color: severity
                                  max_value: 100
                                  friendly_name: false
                                  unit_of_measurement: false
                                  severity:
                                    - color: var(--text-off)
                                    - color: var(--blue)
                                      from: 0
                                      to: 30
                                    - color: var(--yellow)
                                      from: 31
                                      to: 50
                                    - color: var(--red)
                                      from: 50
                                      to: 100
                        - type: custom:button-card
                          entity: update.terminal_ssh_update
                          name: Terminal & SSH
                          icon: mdi:ssh
                          template:
                            - ball_card
                            - card_state
                          custom_fields:
                            jauge-cercle:
                              card:
                                type: custom:hatc-gauge-card
                                entity: sensor.terminal_ssh_memory_percent
                                card:
                                  height: 35px
                                title:
                                  name: false
                                  icon: false
                                gauge:
                                  icon: false
                                  font-size: 10px
                                  text-color: severity
                                  max_value: 100
                                  friendly_name: false
                                  unit_of_measurement: false
                                  severity:
                                    - color: var(--text-off)
                                    - color: var(--blue)
                                      from: 0
                                      to: 30
                                    - color: var(--yellow)
                                      from: 31
                                      to: 50
                                    - color: var(--red)
                                      from: 50
                                      to: 100
  - theme: Backend-selected
    subview: true
    title: Calendrier
    path: Calendrier
    icon: mdi:weather-partly-cloudy
    type: custom:horizontal-layout
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 300
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Météo
                  - icon: mdi:weather-sunny
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:button-card
                      template:
                        - police
                        - no_style
                      name: |
                        [[[ 
                          return states['sensor.date_jour'].state + " "+states['sensor.date_numero'].state + " " 
                          + states['sensor.date_mois'].state
                        ]]] 
                      styles:
                        card:
                          - padding: 0
                          - margin-bottom: '-10px'
                        name:
                          - font-size: 14px
                          - color: var(--text-on)
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: conditional
                      conditions:
                        - condition: state
                          entity: sensor.DEPARTEMENT_weather_alert
                          state_not: Vert
                      card:
                        type: custom:button-card
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Calendrier
                        entity: sensor.DEPARTEMENT_weather_alert
                        icon: mdi:alert
                        show_icon: true
                        template:
                          - badge_card
                        label: |
                          [[[
                            let alerts = states['sensor.DEPARTEMENT_weather_alert'].attributes;
                            let alertMessages = [];

                            for (const attribut of ['Vent violent', 'Orages', 'Inondation', 'Pluie-inondation', 'Neige-verglas', 'Canicule', 'Grand-froid', 'Avalanches', 'Vagues-submersion']) {
                              if (alerts[attribut] !== 'Vert' && alerts[attribut] !== undefined) {
                                alertMessages.push(`${attribut}`);
                              }
                            }

                            if (states['sensor.DEPARTEMENT_weather_alert'].state != 'Vert')
                            return alertMessages.join(' / ');
                          ]]]
                        styles:
                          label:
                            - white-space: normal
                            - color: |
                                [[[
                                  if (states['sensor.DEPARTEMENT_weather_alert'].state == 'Vert')
                                    return 'lightgrey';
                                  if (states['sensor.DEPARTEMENT_weather_alert'].state == 'Jaune')
                                    return 'var(--yellow)';  
                                  if (states['sensor.DEPARTEMENT_weather_alert'].state == 'Orange')
                                    return 'var(--orange)';     
                                  if (states['sensor.DEPARTEMENT_weather_alert'].state == 'Rouge')
                                    return 'var(--red)';               
                                ]]]  
                          icon:
                            - color: |
                                [[[
                                  if (states['sensor.DEPARTEMENT_weather_alert'].state == 'Vert')
                                    return 'var(--icon-off)';
                                  if (states['sensor.DEPARTEMENT_weather_alert'].state == 'Jaune')
                                    return 'var(--yellow)';  
                                  if (states['sensor.DEPARTEMENT_weather_alert'].state == 'Orange')
                                    return 'var(--orange)';     
                                  if (states['sensor.DEPARTEMENT_weather_alert'].state == 'Rouge')
                                    return 'var(--red)';               
                                ]]]                             
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          entity: weather.TA_VILLE
                          show_entity_picture: true
                          show_name: false
                          template:
                            - weather_icon
                            - no_style
                          styles:
                            card:
                              - padding: 0
                              - margin-top: '-15px'
                            entity_picture:
                              - width: 40%
                        - type: custom:button-card
                          entity: sensor.weather_temperature
                          name: >
                            [[[ return states['sensor.weather_conditions'].state
                            ]]]          
                          template:
                            - no_style
                            - police
                          show_label: false
                          show_icon: false
                          show_state: true
                          styles:
                            card:
                              - padding: 0
                            name:
                              - font-size: 14px
                              - color: var(--text-off)
                              - justify-self: start
                              - padding-left: 70px
                              - margin-top: 8px
                            state:
                              - font-size: 13px
                              - color: var(--text-on)
                              - justify-self: start
                              - padding-left: 70px
                              - font-weight: 600
                            custom_fields:
                              gauge:
                                - position: absolute
                                - top: 0%
                                - left: 02%
                          custom_fields:
                            gauge:
                              card:
                                type: custom:hatc-gauge-card
                                entity: sensor.weather_temperature
                                card:
                                  height: 40px
                                title:
                                  name: false
                                gauge:
                                  icon: false
                                  state: false
                                  font-size: 15px
                                  text-color: severity
                                  max_value: 40
                                  friendly_name: false
                                  unit_of_measurement: °
                                  severity:
                                    - color: var(--text-off)
                                    - color: var(--blue)
                                      from: 0
                                      to: 15
                                    - color: var(--green)
                                      from: 15.1
                                      to: 25
                                    - color: var(--yellow)
                                      from: 25.1
                                      to: 27
                                    - color: var(--red)
                                      from: 27.1
                                      to: 40
                                card_mod:
                                  style: |
                                    ha-card {  
                                      background-color: transparent;
                                      box-shadow: none;
                                    }
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          icon: mdi:weather-sunset
                          template:
                            - badge_card
                          label: |
                            [[[
                              const sunriseTime = new Date(states['sun.sun'].attributes.next_rising);
                              const formattedTime = sunriseTime.getHours().toString().padStart(2, '0') + ':' + sunriseTime.getMinutes().toString().padStart(2, '0');
                              return "Lever à "+formattedTime;
                            ]]] 
                        - type: custom:button-card
                          icon: mdi:weather-night
                          template:
                            - badge_card
                          label: |
                            [[[
                              const sunriseTime = new Date(states['sun.sun'].attributes.next_setting);
                              const formattedTime = sunriseTime.getHours().toString().padStart(2, '0') + ':' + sunriseTime.getMinutes().toString().padStart(2, '0');
                              return "Coucher à "+formattedTime;
                            ]]] 
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: grid
                      square: false
                      columns: 2
                      cards:
                        - type: custom:button-card
                          template:
                            - sensor_level_card
                          variables:
                            entity: sensor.weather_temp_max
                          name: |
                            [[[
                                return `<ha-icon
                                icon="mdi:thermometer-chevron-up"
                                style="width: 15px; height: 15px; color: var(--text-off); margin-top: -1px; vertical-align: top;"> 
                                </ha-icon> <span> Max </span>
                                <ha-icon`          
                            ]]]
                          label: >
                            [[[ return states['sensor.weather_temp_max'].state +
                            " °C" ]]]  
                          custom_fields:
                            barre:
                              card:
                                max: 40
                                severity:
                                  - color: var(--img-cell-blue)
                                    from: 0
                                    to: 25
                                  - color: var(--img-cell-yellow)
                                    from: 25.1
                                    to: 27
                                  - color: var(--img-cell-red)
                                    from: 27.1
                                    to: 40
                        - type: custom:button-card
                          template:
                            - sensor_level_card
                          variables:
                            entity: sensor.weather_conditions_vent
                          name: |
                            [[[
                                return `<ha-icon
                                icon="mdi:weather-windy"
                                style="width: 15px; height: 15px; color: var(--text-off); margin-top: -1px; vertical-align: top;"> 
                                </ha-icon> <span> Vent </span>
                                <ha-icon`          
                            ]]]
                          label: >
                            [[[ return
                            states['sensor.weather_conditions_vent'].state + "
                            km/h" ]]]  
                          custom_fields:
                            barre:
                              card:
                                max: 100
                                severity:
                                  - color: var(--img-cell-blue)
                                    from: 0
                                    to: 30
                                  - color: var(--img-cell-yellow)
                                    from: 30.1
                                    to: 60
                                  - color: var(--img-cell-red)
                                    from: 60.1
                                    to: 100
                        - type: custom:button-card
                          template:
                            - sensor_level_card
                          variables:
                            entity: sensor.weather_conditions_ciel
                          name: |
                            [[[
                                return `<ha-icon
                                icon="mdi:weather-cloudy"
                                style="width: 15px; height: 15px; color: var(--text-off); margin-top: -1px; vertical-align: top;"> 
                                </ha-icon> <span> Ciel </span>
                                <ha-icon`          
                            ]]]
                          label: >
                            [[[ return
                            states['sensor.weather_conditions_ciel'].state + "
                            %" ]]]  
                          custom_fields:
                            barre:
                              card:
                                max: 100
                                severity:
                                  - color: var(--img-cell-blue)
                                    from: 0
                                    to: 30
                                  - color: var(--img-cell-yellow)
                                    from: 30.1
                                    to: 60
                                  - color: var(--img-cell-red)
                                    from: 60.1
                                    to: 100
                        - type: custom:button-card
                          template:
                            - sensor_level_card
                          variables:
                            entity: sensor.weather_conditions_pluie
                          name: |
                            [[[
                                return `<ha-icon
                                icon="mdi:weather-pouring"
                                style="width: 15px; height: 15px; color: var(--text-off); margin-top: -1px; vertical-align: top;"> 
                                </ha-icon> <span> Pluie </span>
                                <ha-icon`          
                            ]]]
                          label: >
                            [[[ return
                            states['sensor.weather_conditions_pluie'].state + "
                            %" ]]]  
                          custom_fields:
                            barre:
                              card:
                                max: 100
                                severity:
                                  - color: var(--img-cell-blue)
                                    from: 0
                                    to: 30
                                  - color: var(--img-cell-yellow)
                                    from: 30.1
                                    to: 60
                                  - color: var(--img-cell-red)
                                    from: 60.1
                                    to: 100
                        - type: custom:button-card
                          template:
                            - sensor_level_card
                          variables:
                            entity: sensor.weather_conditions_uv
                          name: |
                            [[[
                                return `<ha-icon
                                icon="mdi:weather-sunny-alert"
                                style="width: 15px; height: 15px; color: var(--text-off); margin-top: -1px; vertical-align: top;"> 
                                </ha-icon> <span> UV </span>
                                <ha-icon`          
                            ]]]
                          label: >
                            [[[ return
                            states['sensor.weather_conditions_uv'].state + " "
                            ]]]  
                          custom_fields:
                            barre:
                              card:
                                max: 10
                                severity:
                                  - color: var(--img-cell-blue)
                                    from: 0
                                    to: 2
                                  - color: var(--img-cell-yellow)
                                    from: 2.1
                                    to: 5
                                  - color: var(--img-cell-red)
                                    from: 5.1
                                    to: 10
                        - type: custom:button-card
                          template:
                            - sensor_level_card
                          variables:
                            entity: sensor.weather_conditions_neige
                          name: |
                            [[[
                                return `<ha-icon
                                icon="mdi:snowflake"
                                style="width: 15px; height: 15px; color: var(--text-off); margin-top: -1px; vertical-align: top;"> 
                                </ha-icon> <span> Neige </span>
                                <ha-icon`          
                            ]]]
                          label: >
                            [[[ return
                            states['sensor.weather_conditions_neige'].state + "
                            %" ]]]  
                          custom_fields:
                            barre:
                              card:
                                max: 100
                                severity:
                                  - color: var(--img-cell-blue)
                                    from: 0
                                    to: 10
                                  - color: var(--img-cell-yellow)
                                    from: 10.1
                                    to: 40
                                  - color: var(--img-cell-red)
                                    from: 40.1
                                    to: 100
              - type: custom:vertical-stack-in-card
                cards:
                  - type: custom:meteofrance-weather-card
                    entity: weather.TA_VILLE
                    number_of_forecasts: '0'
                    current: false
                    details: false
                    one_hour_forecast: false
                    alert_forecast: true
                    alertEntity: sensor.DEPARTEMENT_weather_alert
                    card_mod:
                      style: |
                        ha-card {
                          font-size: 13px;
                          font-family: var(--primary-font-family);
                          color: var(--text-on);
                        }
                        li.precipitation {
                          display: none;
                        }
                  - type: custom:meteofrance-weather-card
                    entity: weather.TA_VILLE
                    number_of_forecasts: '5'
                    current: false
                    details: false
                    one_hour_forecast: true
                    alert_forecast: false
                    rainForecastEntity: sensor.country_next_rain_2
                    alertEntity: sensor.DEPARTEMENT_weather_alert
                    card_mod:
                      style: |
                        ha-card {
                          font-size: 13px;
                          font-family: var(--primary-font-family);
                          color: var(--text-on);
                        }
                        li.precipitation {
                          display: none;
                        }
                card_mod:
                  style: |
                    ha-card { 
                      margin-top: 20px;
                      
                    }
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:clock-weather-card
                      entity: weather.TA_VILLE
                      title: ''
                      sun_entity: sun.sun
                      weather_icon_type: fill
                      animated_icon: true
                      forecast_days: 7
                      locale: fr
                      time_format: 24
                      date_pattern: d MMMM y
                      hide_today_section: true
                      hide_forecast_section: false
                      card_mod:
                        style: |
                          ha-card {
                            font-size: 13px;
                            font-family: var(--primary-font-family);
                            color: var(--text-on);
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 300
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Calendrier personnel
                  - icon: mdi:calendar
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: vertical-stack
                      cards:
                        - initial_view: dayGridMonth
                          card_mod:
                            style: |
                              ha-card { 
                               overflow: visible !important;
                               color: var(--text-on);
                               font-family: var(--primary-font-family);
                              } 
                          type: calendar
                          entities:
                            - calendar.emma
                            - calendar.jeremy
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Vacances scolaires
                  - icon: mdi:calendar
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: vertical-stack
                      cards:
                        - type: custom:button-card
                          template:
                            - around_card
                          custom_fields:
                            info:
                              card:
                                type: vertical-stack
                                cards:
                                  - type: custom:button-card
                                    tap_action:
                                      action: navigate
                                      navigation_path: /lovelace/Calendrier
                                    template:
                                      - sensor_activity_card
                                    entity: sensor.vacances_scolaires
                                    name: Vacances
                                    label: >
                                      [[[ return 
                                      states['sensor.calendrier_vacances_scolaires_detaillees'].state
                                      ]]]
                                    icon: mdi:beach
                                  - type: custom:button-card
                                    tap_action:
                                      action: navigate
                                      navigation_path: /lovelace/Calendrier
                                    template:
                                      - sensor_activity_card
                                    entity: sensor.vacances_scolaires
                                    name: Début
                                    label: |
                                      [[[   
                                        var startDate = states['sensor.vacances_scolaires'].attributes.start_date;
                                        
                                        return startDate
                                          ? new Date(startDate).toLocaleDateString('fr-FR', { day: '2-digit', month: '2-digit', year: 'numeric' })
                                          : 'Aucune date disponible';
                                      ]]]
                                    icon: mdi:calendar-star-outline
                                  - type: custom:button-card
                                    tap_action:
                                      action: navigate
                                      navigation_path: /lovelace/Calendrier
                                    template:
                                      - sensor_activity_card
                                    entity: sensor.vacances_scolaires
                                    name: Reprise
                                    label: |
                                      [[[   
                                        var startDate = states['sensor.vacances_scolaires'].attributes.end_date;
                                        
                                        return startDate
                                          ? new Date(startDate).toLocaleDateString('fr-FR', { day: '2-digit', month: '2-digit', year: 'numeric' })
                                          : 'Aucune date disponible';
                                      ]]]
                                    icon: mdi:school-outline
                                  - type: custom:button-card
                                    tap_action:
                                      action: navigate
                                      navigation_path: /lovelace/Calendrier
                                    template:
                                      - sensor_activity_card
                                    entity: sensor.vacances_scolaires
                                    name: Durée
                                    label: >
                                      [[[ return 
                                      states['sensor.calendrier_vacances_scolaires_duree_en_jours'].state
                                      ]]]
                                    icon: mdi:timer-outline
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 320
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Calendrier professionnel
                  - icon: mdi:calendar
          - initial_view: listWeek
            card_mod:
              style: |
                ha-card { 
                 overflow: visible !important;
                 color: var(--text-on);
                 font-family: var(--primary-font-family);
                }
            type: calendar
            entities:
              - calendar.calendrier_boulot
  - theme: Backend-selected
    title: Air
    path: air
    type: custom:horizontal-layout
    layout:
      width: 350
    subview: true
    icon: mdi:air-filter
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 300
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Qualité de l'air
                  - icon: mdi:blur
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      square: false
                      type: grid
                      columns: 1
                      cards:
                        - type: custom:button-card
                          entity: sensor.moniteur_qualite_air_voc
                          template:
                            - ball_card
                            - air_state
                          name: |
                            [[[
                              const trend = states['sensor.air_tendance_icon'].state;
                              return "Particules "+ trend
                            ]]]
                          label: |
                            [[[
                              return states['sensor.moniteur_qualite_air_voc'].state + "ppb"
                            ]]]
                                
                        - type: custom:button-card
                          entity: sensor.moniteur_qualite_air_voc
                          icon: mdi:blur
                          template:
                            - ball_card
                            - air_state
                          show_name: true
                          show_label: true
                          show_state: false
                          show_icon: true
                          show_last_changed: false
                          name: |
                            [[[
                              return "Qualité "
                            ]]]
                          label: |
                            [[[
                              const qualiteAirPourcentage = states['sensor.qualite_air_pourcentage'].state;
                              
                              if (qualiteAirPourcentage >= 98.8)
                                return qualiteAirPourcentage + "% " +  " Excellent";
                              if (qualiteAirPourcentage < 98.8 && qualiteAirPourcentage > 96)
                                return qualiteAirPourcentage + "% " + " Correct";
                              if (qualiteAirPourcentage <= 96 && qualiteAirPourcentage > 88)
                                return qualiteAirPourcentage + "% " + " Moyen, aération recommandée";
                              if (qualiteAirPourcentage <= 88 && qualiteAirPourcentage > 60)
                                return qualiteAirPourcentage + "% " +  " Mauvais, Moyen, aération nécessaire ";
                              if (qualiteAirPourcentage <= 60)
                                return qualiteAirPourcentage + "% " +  " Danger!";
                              return '';
                            ]]] 
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      square: false
                      type: grid
                      columns: 2
                      cards:
                        - type: custom:button-card
                          entity: sensor.moniteur_qualite_air_temperature
                          template:
                            - ball_card
                            - temperature_state
                          label: |
                            [[[
                              return states['sensor.moniteur_qualite_air_temperature'].state + "°"
                            ]]]
                          name: Température
                        - type: custom:button-card
                          entity: sensor.moniteur_qualite_air_humidity
                          template:
                            - ball_card
                            - humidity_state
                          label: |
                            [[[
                              return states['sensor.moniteur_qualite_air_humidity'].state + "%"
                            ]]]
                          name: Humidité
              - type: custom:apexcharts-card
                header:
                  show: true
                  title: ''
                  show_states: true
                  colorize_states: true
                experimental:
                  brush: true
                  color_threshold: true
                graph_span: 10d
                now:
                  show: false
                  color: red
                  label: Maintenant
                apex_config:
                  chart:
                    height: 300
                  grid:
                    show: true
                    strokeDashArray: 0
                    position: back
                    borderColor: rgba(200,200,200,0.1)
                  legend:
                    show: false
                    fontSize: 14px
                    height: 40
                  dataLabels:
                    enabled: false
                  xaxis:
                    labels:
                      format: ddd dd
                      hideOverlappingLabels: true
                      showDuplicatges: false
                      show: true
                  fill:
                    type: gradient
                    gradient:
                      type: vertical
                      shadeIntensity: 0.8
                      inverseColors: false
                      opacityFrom: 0.5
                      opacityTo: 0
                      stops:
                        - - 0
                          - 50
                          - 100
                yaxis:
                  - id: first
                    decimals: 1
                    min: 0
                  - id: second
                    show: false
                series:
                  - entity: sensor.night_state
                    yaxis_id: second
                    name: ''
                    color: grey
                    type: area
                    curve: stepline
                    stroke_width: 0
                    opacity: 0.1
                    color_threshold:
                      - value: 0
                        color: darkgrey
                      - value: 1
                        color: darkgrey
                    show:
                      in_header: false
                      extremas: false
                      in_brush: false
                      header_color_threshold: false
                      legend_value: false
                      name_in_header: false
                      datalabels: false
                  - entity: sensor.moniteur_qualite_air_voc
                    name: Particules dans l'air
                    unit: ppb
                    color: rgb(38, 75, 150)
                    yaxis_id: first
                    type: area
                    curve: smooth
                    fill_raw: last
                    stroke_width: 1
                    show:
                      extremas: true
                      in_brush: true
                      header_color_threshold: true
                      legend_value: false
                      name_in_header: false
                      datalabels: true
                    float_precision: 1
                    group_by:
                      func: last
                    color_threshold:
                      - value: 0
                        color: rgba(47, 212, 140,1)
                      - value: 65
                        color: rgba(0,191,255,1)
                      - value: 220
                        color: rgba(255,215,0,1)
                      - value: 660
                        color: rgba(249, 167, 62,1)
                      - value: 2200
                        color: rgba(255, 0, 0,1)
                card_mod:
                  style: |
                    ha-card {
                       font-family: Avenir;
                     }
              - type: custom:button-card
                template:
                  - around_card
                custom_fields:
                  info:
                    card:
                      type: custom:button-card
                      variables:
                        entity: sensor.moniteur_qualite_air_battery
                      name: Pile
                      template:
                        - battery_level_card
              - type: custom:button-card
                entity: sensor.moniteur_qualite_air_voc
                template:
                  - title_card
                show_name: false
                show_label: true
                show_state: false
                show_icon: true
                show_last_changed: true
                styles:
                  label:
                    - justify-self: null
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 300
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Qualité de l'air extérieure
                  - icon: mdi:blur
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      square: false
                      type: grid
                      columns: 1
                      cards:
                        - type: custom:button-card
                          entity: sensor.sensor_14770_pm2_5
                          show_label: true
                          show_state: false
                          template:
                            - ball_card
                          name: |
                            [[[
                              const trend = states['sensor.pm2_5_tendance_icon'].state;
                              return "PM 2,5 "+ trend
                            ]]]
                          label: |
                            [[[
                              return states['sensor.sensor_14770_pm2_5'].state + "µg/m³, " + states['sensor.pm2_5'].state
                            ]]]
                        - type: custom:button-card
                          entity: sensor.sensor_14770_pm10
                          show_label: true
                          show_state: false
                          template:
                            - ball_card
                          name: |
                            [[[
                              const trend = states['sensor.pm10_tendance_icon'].state;
                              return "PM 10 "+ trend
                            ]]]
                          label: |
                            [[[
                              return states['sensor.sensor_14770_pm10'].state + "µg/m³, " + states['sensor.pm10'].state
                            ]]]
              - type: custom:apexcharts-card
                header:
                  show: true
                  title: ''
                  show_states: true
                  colorize_states: true
                experimental:
                  brush: true
                  color_threshold: true
                graph_span: 10d
                now:
                  show: false
                  color: red
                  label: Maintenant
                apex_config:
                  chart:
                    height: 300
                  grid:
                    show: true
                    strokeDashArray: 0
                    position: back
                    borderColor: rgba(200,200,200,0.1)
                  legend:
                    show: false
                    fontSize: 14px
                    height: 40
                  dataLabels:
                    enabled: false
                  xaxis:
                    labels:
                      format: ddd dd
                      hideOverlappingLabels: true
                      showDuplicatges: false
                      show: true
                  fill:
                    type: gradient
                    gradient:
                      type: vertical
                      shadeIntensity: 0.8
                      inverseColors: false
                      opacityFrom: 0.5
                      opacityTo: 0
                      stops:
                        - - 0
                          - 50
                          - 100
                yaxis:
                  - id: first
                    decimals: 1
                    min: 0
                  - id: second
                    show: false
                series:
                  - entity: sensor.night_state
                    yaxis_id: second
                    name: ''
                    color: grey
                    type: area
                    curve: stepline
                    stroke_width: 0
                    opacity: 0.1
                    color_threshold:
                      - value: 0
                        color: darkgrey
                      - value: 1
                        color: darkgrey
                    show:
                      in_header: false
                      extremas: false
                      in_brush: false
                      header_color_threshold: false
                      legend_value: false
                      name_in_header: false
                      datalabels: false
                  - entity: sensor.sensor_14770_pm2_5
                    name: PM2,5
                    unit: µg/m³
                    color: rgb(38, 75, 150)
                    yaxis_id: first
                    type: area
                    curve: smooth
                    fill_raw: last
                    stroke_width: 1
                    show:
                      extremas: true
                      in_brush: true
                      header_color_threshold: true
                      legend_value: false
                      name_in_header: true
                      datalabels: true
                    float_precision: 1
                    group_by:
                      func: last
                    color_threshold:
                      - value: 0
                        color: rgba(47, 212, 140,1)
                      - value: 11
                        color: rgba(0,191,255,1)
                      - value: 21
                        color: rgba(255,215,0,1)
                      - value: 26
                        color: rgba(249, 167, 62,1)
                      - value: 50
                        color: rgba(255, 0, 0,1)
                  - entity: sensor.sensor_14770_pm10
                    name: PM10
                    unit: µg/m³
                    color: rgb(38, 75, 50)
                    yaxis_id: first
                    type: area
                    curve: smooth
                    fill_raw: last
                    stroke_width: 1
                    show:
                      extremas: true
                      in_brush: true
                      header_color_threshold: true
                      legend_value: false
                      name_in_header: true
                      datalabels: true
                    float_precision: 1
                    group_by:
                      func: last
                    color_threshold:
                      - value: 0
                        color: rgba(47, 212, 140,1)
                      - value: 21
                        color: rgba(0,191,255,1)
                      - value: 41
                        color: rgba(255,215,0,1)
                      - value: 51
                        color: rgba(249, 167, 62,1)
                      - value: 100
                        color: rgba(255, 0, 0,1)
                card_mod:
                  style: |
                    ha-card {
                       font-family: Avenir;
                     }
  - theme: Backend-selected
    title: reglages
    path: reglages
    icon: mdi:cog
    subview: true
    type: custom:horizontal-layout
    layout:
      width: 350
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 350
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 } 
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Modes
                  - icon: mdi:order-bool-ascending-variant
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: grid
                      columns: 2
                      square: false
                      cards:
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: input_boolean.vacances
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: input_boolean.chauffage_mode_ete
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: input_boolean.cp
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: input_boolean.invites
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: input_boolean.invites_nuit
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: input_boolean.alarme_auto_off
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 350
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 }
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Infos carte activité
                  - icon: mdi:card-bulleted
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Sécurité" ]]]
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: grid
                      columns: 2
                      square: false
                      cards:
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: input_boolean.header_show_porte
                          name: Portes
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: input_boolean.header_show_mouvement
                          name: Mouvements
              - type: custom:button-card
                template: divider
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Appareils" ]]]
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: grid
                      columns: 2
                      square: false
                      cards:
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: input_boolean.header_show_connecte
                          name: Connectés
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: input_boolean.header_show_appareils_charges
                          name: Chargés
              - type: custom:button-card
                template: divider
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Infos" ]]]
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: grid
                      columns: 2
                      square: false
                      cards:
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: input_boolean.header_show_fete
                          name: Fêtes
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: input_boolean.header_show_anniv
                          name: Anniversaires
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: input_boolean.header_show_calendrier
                          name: Calendrier
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: input_boolean.header_show_calendrier_boulot
                          name: Calendrier Boulot
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: input_boolean.header_show_calendrier_copro
                          name: Calendrier Copro
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: input_boolean.header_show_mode
                          name: Modes
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: input_boolean.header_show_maj
                          name: MàJ
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: input_boolean.header_show_presence
                          name: Présence
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: input_boolean.header_show_info
                          name: Info
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 350
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 }
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Thèmes
                  - icon: mdi:theme-light-dark
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: grid
                      columns: 1
                      square: false
                      cards:
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: script.theme_reload
                          name: Recharger les thèmes
                          tap_action:
                            action: toggle
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: grid
                      columns: 2
                      square: false
                      cards:
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: script.theme_day
                          name: Geek Light
                          tap_action:
                            action: toggle
                        - type: custom:button-card
                          template:
                            - ball_card
                            - card_state
                          entity: script.theme_night
                          name: Geek Dark
                          tap_action:
                            action: toggle
  - theme: Backend-selected
    title: Invités
    path: invités
    subview: true
    icon: mdi:qrcode-scan
    badge_cards: []
    cards:
      - type: vertical-stack
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                }
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: WIFI
                  - icon: mdi:qrcode
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: picture
                      image: /local/images/qr_code_wifi_invites.png
                      tap_action:
                        action: navigate
                        navigation_path: /
                      hold_action:
                        action: none
  - title: Cuisine
    path: cuisine
    icon: mdi:food-fork-drink
    type: custom:horizontal-layout
    layout:
      width: 350
      max_cols: 4
    subview: true
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card { 
                 background-color: var(--card-background-color);
                 box-shadow: none;
                 border-radius: var(--ha-card-border-radius) !important;
                 }
            entities:
              - type: custom:decluttering-card
                template: header
                variables:
                  - name: Relevé
                  - icon: mdi:chart-line
              - type: custom:button-card
                template:
                  - around_card
                  - around_clear_card
                custom_fields:
                  info:
                    card:
                      type: custom:decluttering-card
                      template: graph
                      variables:
                        - temp: sensor.moniteur_qualite_air_temp_arrondie
                        - hum: sensor.moniteur_qualite_air_hum_arrondie
  - title: test
    path: test
    icon: mdi:test-tube
    type: custom:horizontal-layout
    badges: []
    cards: []
